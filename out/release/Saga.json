{"slots":{"-5":{"name":"library","type":{"events":[],"methods":[]}},"-4":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"player","type":{"events":[],"methods":[]}},"-2":{"name":"construct","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}}},"handlers":[{"key":1,"filter":{"slotKey":-5,"signature":"onStart()","args":[]},"code":";(function()\nlocal a={}local b=0;function library.addEventHandlers(c)if not c or c.onEvent and c.triggerEvent then return false end;b=b+1;a[b]=c;local d,e,f='table','function','thread'if d~=type(c)then error('You can only add event handlers to table objects!')end;local g={}local function h(c)local i=type(c)return e==i or d==i and h(getmetatable(c).__call)or f==i end;c.onEvent=function(self,j,k,l)if not h(k)then error('Event handler must be a function, a callable object or a thread!')end;l=l or self;if d~=type(l)then error('The value of self must be a table!')end;if not g[j]then g[j]={_=0}end;local m=f==type(k)and function(...)coroutine.resume(k,...)end or k;local k=g[j]local n=k._+1;k[n]={m,l}k._=n;return n end;c.clearEvent=function(self,j,o)if g[j]and g[j][o]then g[j][o]=nil end end;c.clearAllEvents=function(self)g={}end;c.triggerEvent=function(self,j,...)local p=g[j]if p then for q=1,p._ do local k=p[q]if k then k[1](k[2],...)end end end end;return true end;function library.clearAllEventHandlers()for q=1,b do local c=a[q]if c and c.clearAllEvents then c:clearAllEvents()end end end\nend)()"},{"key":2,"filter":{"slotKey":-5,"signature":"onStart()","args":[]},"code":";(function()\nlocal a=DULibrary or{}function a.getLinks(b,c)local d={}if not b then b={}end;for e,f in pairs(unit.getOutPlugs())do local g=unit[f.name]if'table'==type(g)and'function'==type(g.getClass)then local h=true;for i,j in pairs(b)do if not('function'==type(g[i])and j==g[i]():sub(1,#j))then h=false;break end end;if h then if c then table.insert(d,g)else d[f.name]=g end end end end;return d end;function a.getLinksByClass(k,c)return a.getLinks({getClass=k},c)end;function a.getLinkByClass(k)return a.getLinksByClass(k,true)[1]end;function a.getCoreUnit()return a.getLinkByClass('CoreUnit')end;function a.getLinkByName(l)local m=a.getCoreUnit()if not m then error('getLinkByName requires a linked CoreUnit to work')end;local d=a.getLinks()for n,o in pairs(d)do if l==m.getElementNameById(o.getLocalId())then return o end end end\nend)()"},{"key":3,"filter":{"slotKey":-5,"signature":"onStart()","args":[]},"code":"package.preload['Saga:data/links.lua']=(function()\nlinks={core=nil,warpdrive=nil,shield=nil,antigrav=nil,gyro=nil,transponder=nil,databanks={},weapons={},switches={},electronics=nil,radars={},telemeter=nil,hovers={},hoverCount=0,screen=nil,vboosters={},vBoosterCount=0}function scanLinks()for a,b in pairs(unit)do if type(b)==\"table\"and type(b.export)==\"table\"and b.getClass then local c=b.getClass():lower()b.slotName=a;b.elementClass=c;if c:find(\"coreunit\")then links.core=b elseif c:find(\"screen\")then links.screen=b elseif c:find(\"radar\")then table.insert(links.radars,b)elseif c:find(\"warpdriveunit\")then links.warpdrive=b elseif c:find(\"databankunit\")then table.insert(links.databanks,b)elseif c:find(\"shieldgenerator\")then links.shield=b elseif c:find(\"weapon\")then table.insert(links.weapons,b)elseif c:find(\"gyrounit\")then links.gyro=b elseif c:find(\"antigravitygeneratorunit\")then links.antigrav=b elseif c:find(\"combatdefense\")then links.transponder=b elseif c:find('manualswitchunit')then table.insert(links.switches,b)elseif c:find(\"telemeter\")then links.telemeter=b elseif c:find(\"hover\")then table.insert(links.hovers,b)links.hoverCount=links.hoverCount+1 elseif c:find(\"verticalbooster\")then table.insert(links.vboosters,b)links.vBoosterCount=links.vBoosterCount+1 end end end end;function finaliseLinks()links.electronics=Electronics;for d,e in ipairs(links.databanks)do e.id=e.getLocalId()e.name=links.core.getElementNameById(e.id)end;table.sort(links.databanks,function(f,g)return f.id<g.id end)for d,h in ipairs(links.switches)do local i=links.core.getElementNameById(h.getLocalId())if i:lower():find('door')then table.insert(links.electronics.doors,h)elseif i:lower():find('forcefield')then table.insert(links.electronics.forcefields,h)else table.insert(links.electronics.switches,h)end end;for d,j in ipairs(links.radars)do j.pvp=j.slotName=='slot21'or j.slotName=='slot14'end end\nend)\npackage.preload['Saga:events/keyboard.lua']=(function()\nmmbClick=0;forwardClick=0;inputs={pitch=0,roll=0,yaw=0,brake=0,manualBrake=false,brakeLock=false,up=false,down=false,left=false,right=false,alt=false,shift=false,mouseLeft=false,direction=vec3(0,0,0),rotation=vec3(0,0,0),mu=false,md=false,ml=false,mr=false}local a=axisCommandId.longitudinal;local b=axisCommandId.lateral;local c=axisCommandId.vertical;function onShift(d)inputs.shift=d end;function onAlt(d)inputs.alt=d end;function onMouseDown()inputs.mouseLeft=true end;function onMouseUp()inputs.mouseLeft=false end;function onAlt1()if inputs.shift then return HUD.toggleMainMenu()end;local e,f,g=AutoPilot,ship,cData;if not globals.maneuverMode then return e:toggleState(not e.enabled)end;if not e.target then return end;if f.gotoLock then f.resetMoving()resetAP()e.target=nil elseif g.isLanded then P'[E] Liftoff first!'else inputs.brakeLock=false;f.switchState('ALTITUDE')f.gotoLock=e.target;f.targetVector=(f.gotoLock-g.position):normalize()f.travel=true;P(\"Moving to: \"..tostring(Vec3ToPosString(e.target)))end end;function onAlt2()local h,i=globals,inputs;if cData.warpOn or ship.landingMode then h.altitudeHold=false;h.followMode=false;return end;h.manualOrbitAlt=0;if not(h.altitudeHold or h.followMode)then if h.maneuverMode or not i.shift then h.holdAltitude=cData.altitude;h.altitudeHold=true else if player.isSeated()==false then h.followMode=true else P('[E] Not on Remote, follow disabled!')end end;return end;if not h.altitudeHold and h.followMode then h.followMode=false elseif h.altitudeHold and not h.followMode then h.altitudeHold=false end end;function onAlt3()local h=globals;if cData.warpOn or h.maneuverMode then return end;h.manualOrbitAlt=0;if not h.orbitalHold then if h.spaceCapable then resetModes()h.orbitalHold=true;setTargetOrbitAlt()else P('Space thrust not detected: Orbital Hold Disabled')h.orbitalHold=false end else h.orbitalHold=false end end;function onAlt4()local h=globals;if not h.radialOut and not h.radialIn and not h.cameraAim then h.radialMode='radial out'h.radialOut=not h.radialOut elseif h.radialOut then h.radialMode='radial in'h.radialOut=not h.radialOut;h.radialIn=not h.radialIn elseif h.radialIn then h.radialMode='camera aim'h.cameraAim=true;h.radialIn=not h.radialIn else h.radialMode='off'h.cameraAim=false end end;function onAlt5()local h=globals;if h.boostMode=='all'then h.boostMode='primary'elseif h.boostMode=='primary'then h.boostMode='hybrid'elseif h.boostMode=='hybrid'then h.boostMode='locked'else h.boostMode='all'end end;local function j(k,l,m)if m then return math.max(1,k-1)end;return math.min(l,k+1)end;function onAlt6()local e,n=AutoPilot,RouteDatabase;if e.enabled or#n.routes<1 then return end;if not inputs.shift and inputs.alt then e.currentRouteIndex=j(e.currentRouteIndex or 1,#n.routes,true)e:setActiveRoute(e.currentRouteIndex)elseif inputs.shift and inputs.alt then setApTarget(Config:getValue(configDatabankMap.base))end end;function onAlt7()local e,n=AutoPilot,RouteDatabase;if e.enabled or#n.routes<1 then return end;if not inputs.shift and inputs.alt then e.currentRouteIndex=j(e.currentRouteIndex or 1,#n.routes,false)e:setActiveRoute(e.currentRouteIndex)elseif inputs.shift and inputs.alt then Config:setValue(configDatabankMap.base,cData.position)local o=Vec3ToPosString(cData.position)P(\"Base set to: \"..tostring(o))end end;function onAlt8()local h,e=globals,AutoPilot;if inputs.shift then e.userConfig.slowFlat=not e.userConfig.slowFlat elseif inputs.alt then h.rotationDampening=not h.rotationDampening end end;function onAlt9()local h,e=globals,AutoPilot;if cData.warpOn or e.enabled then return P\"[E] Can't toggle now\"end;if h.maneuverMode then ship.resetMoving()end;h.maneuverMode=not h.maneuverMode;Config:setValue(configDatabankMap.maneuverMode,h.maneuverMode)if h.maneuverMode then return end;setThrottle()navCom:resetCommand(axisCommandId.vertical)navCom:deactivateGroundEngineAltitudeStabilization()end;function onWarpDown()if links.warpdrive~=nil then links.warpdrive.activateWarp()end end;function onAntigravDown()if links.antigrav~=nil then links.antigrav.toggle()end end;function onBoosterDown()Nav:toggleBoosters()end;function onLightDown()if unit.isAnyHeadlightSwitchedOn()then unit.switchOffHeadlights()else unit.switchOnHeadlights()end end;local p=0.1;local q=0.4;function onMmbDown()if globals.maneuverMode then local r=system.getUtcTime()mmbClick=mmbClick or 0;local s=r-mmbClick;if mmbClick==0 or s<p or r-mmbClick>=q then mmbClick=r else mmbClick=0;ship.toggleMmb()end else navCom:resetCommand(a)end end;function onMmbUp()end;function onLandingGearDown()local h,e=globals,AutoPilot;if e.enabled then e:toggleState(false)end;if ship.mmbThrottle then ship.toggleMmb()end;h.altitudeHold=false;if h.prevStdMode then h.maneuverMode=false end;h.prevStdMode=false;inputs.brake=0;inputs.brakeLock=false;if cData.isLanded then ship.landingMode=false;if not h.maneuverMode then return e:toggleLandingMode(false)end;moveVert(e.userConfig.hoverHeight)ship.takeoff=true;ship.travel=false;ship.vertical=false;return end;if e.landingMode or ship.landingMode then e.landingMode=false;ship.landingMode=false;if h.maneuverMode then ship.resetMoving()if h.prevStdMode then h.maneuverMode=false end end;if not h.maneuverMode then setThrottle()navCom:activateGroundEngineAltitudeStabilization()if not h.startup then e:toggleLandingMode(false)end end;return end;if not h.maneuverMode then ship.resetManeuver()h.prevStdMode=true end;ship.landingMode=true;e.landingMode=false;ship.prepLanding()setThrottle(1,1,1)end;function onUpArrowDown()inputs.md=false;local h=globals;if HUD.Config.mainMenuVisible then inputs.mu=true else inputs.up=true;if h.maneuverMode then isStartup=false;inputs.brakeLock=false;inputs.brake=0 else navCom:resetCommand(c)navCom:deactivateGroundEngineAltitudeStabilization()navCom:updateCommandFromActionStart(c,1.0)end end;h.verticalState=true end;function onUpArrowUp()inputs.mu=false;inputs.up=false;local h=globals;if not HUD.Config.mainMenuVisible then if h.maneuverMode then if h.altitudeHold then h.holdAltitude=cData.altitude end else navCom:resetCommand(c)navCom:activateGroundEngineAltitudeStabilization()end end;h.verticalState=false end;function onDownArrowDown()inputs.mu=false;local h=globals;if HUD.Config.mainMenuVisible then inputs.md=true else inputs.down=true;if not(cData.isLanded or h.maneuverMode)then navCom:resetCommand(c)navCom:deactivateGroundEngineAltitudeStabilization()navCom:updateCommandFromActionStart(c,-1.0)end end;h.verticalState=true end;function onDownArrowUp()inputs.md=false;inputs.down=false;local h=globals;if not HUD.Config.mainMenuVisible then if h.maneuverMode then if h.altitudeHold then h.holdAltitude=cData.altitude end else navCom:resetCommand(c)navCom:activateGroundEngineAltitudeStabilization()end end;h.verticalState=false end;local function t()return not(globals.maneuverMode or HUD.Config.mainMenuVisible)end;local function u(v,w)if globals.maneuverMode then return end;if v then navCom:updateCommandFromActionStart(b,w)else navCom:updateCommandFromActionStop(b,w)end end;local function x()inputs.direction.x=0;inputs.left=false;inputs.right=false;inputs.ml=false;inputs.mr=false end;function onLeftArrowDown()x()if HUD.Config.mainMenuVisible then inputs.ml=true;return end;inputs.direction.x=-1;inputs.left=true;if t()then u(true,-1)end;globals.lateralState=true end;function onLeftArrowUp()x()if t()then u(false,1)end;globals.lateralState=false end;function onRightArrowDown()x()if HUD.Config.mainMenuVisible then inputs.mr=true;return end;inputs.direction.x=1;inputs.right=true;if t()then u(true,1)end;globals.lateralState=true end;function onRightArrowUp()x()if t()then u(false,-1)end;globals.lateralState=false end;function onForwardDown()inputs.pitch=inputs.pitch-1;if not globals.maneuverMode or not inputs.alt then return end;local r=system.getUtcTime()forwardClick=forwardClick or 0;local s=r-forwardClick;if forwardClick==0 or s<p or r-forwardClick>=q then forwardClick=r else forwardClick=0;ship.toggleMmb()end end;function onForwardUp()inputs.pitch=0 end;function onBackwardDown()inputs.pitch=inputs.pitch+1 end;function onBackwardUp()inputs.pitch=0 end;function onLeftDown()inputs.roll=inputs.roll-1 end;function onLeftUp()inputs.roll=0 end;function onRightDown()inputs.roll=inputs.roll+1 end;function onRightUp()inputs.roll=0 end;function onYawLeftDown()if inputs.yaw<0 then ship.rotationSpeed=ship.rotationSpeedMin end;inputs.yaw=1 end;function onYawLeftUp()if inputs.yaw>0 then inputs.yaw=0 else ship.rotationSpeed=ship.rotationSpeedMin end end;function onYawRightDown()if inputs.yaw>0 then ship.rotationSpeed=ship.rotationSpeedMin end;inputs.yaw=-1 end;function onYawRightUp()if inputs.yaw<0 then inputs.yaw=0 else ship.rotationSpeed=ship.rotationSpeedMin end end;function onGroundAltitudeDownDown(y)local h,f=globals,ship;if h.maneuverMode and h.altitudeHold then if f.holdAltitude>109 then f.holdAltitude=RoundAlt(f.holdAltitude,ternary(y,-5,-10))end else AutoPilot:addHoverHeight(-0.25,y)end end;function onGroundAltitudeUpDown(y)local h,f=globals,ship;if h.maneuverMode and h.altitudeHold then f.holdAltitude=RoundAlt(f.holdAltitude,ternary(y,5,10))else AutoPilot:addHoverHeight(0.25,y)end end;function onSpeedUpDown()navCom:updateCommandFromActionStart(a,5.0)globals.safetyThrottle=false end;function onSpeedUpLoop()navCom:updateCommandFromActionLoop(a,1.0)globals.safetyThrottle=false end;function onSpeedDownDown()navCom:updateCommandFromActionStart(a,-5.0)globals.safetyThrottle=false end;function onSpeedDownLoop()navCom:updateCommandFromActionLoop(a,-1.0)globals.safetyThrottle=false end;function onBrakeDown()inputs.brake=1;inputs.manualBrake=true;AutoPilot.enabled=false;resetAP()inputs.brakeLock=inputs.alt end;function onBrakeLoop()if globals.maneuverMode then inputs.brake=1;return end;if navCom:getAxisCommandType(a)==axisCommandType.byTargetSpeed then local z=navCom:getTargetSpeed(a)if math.abs(z)>0.01 then navCom:updateCommandFromActionLoop(a,-utils.sign(z))end end end;function onBrakeUp()if not inputs.alt then inputs.brake=0;inputs.manualBrake=false end end;function onActionStart(A)if A==\"lalt\"then onAlt(true)end;if A==\"lshift\"then onShift(true)end;if A==\"brake\"then onBrakeDown()end;if A==\"option1\"then onAlt1()elseif A==\"option2\"then onAlt2()elseif A==\"option3\"then onAlt3()elseif A==\"option4\"then onAlt4()elseif A==\"option5\"then onAlt5()elseif A==\"option6\"then onAlt6()elseif A==\"option7\"then onAlt7()elseif A==\"option8\"then onAlt8()elseif A==\"option9\"then onAlt9()elseif A==\"forward\"then onForwardDown()elseif A==\"backward\"then onBackwardDown()elseif A==\"left\"then if globals.maneuverMode then onLeftArrowDown()else onLeftDown()end elseif A==\"right\"then if globals.maneuverMode then onRightArrowDown()else onRightDown()end elseif A==\"yawleft\"then onYawLeftDown()elseif A==\"yawright\"then onYawRightDown()elseif A==\"strafeleft\"then onLeftArrowDown()elseif A==\"straferight\"then onRightArrowDown()elseif A==\"up\"then onUpArrowDown()elseif A==\"down\"then onDownArrowDown()elseif A==\"groundaltitudeup\"then onGroundAltitudeUpDown()elseif A==\"groundaltitudedown\"then onGroundAltitudeDownDown()elseif A==\"gear\"then onLandingGearDown()elseif A==\"light\"then onLightDown()elseif A==\"leftmouse\"then onMouseDown()elseif A==\"stopengines\"then onMmbDown()elseif A==\"antigravity\"then onAntigravDown()elseif A==\"booster\"then onBoosterDown()end;if not globals.maneuverMode then if A==\"speedup\"then onSpeedUpDown()elseif A==\"speeddown\"then onSpeedDownDown()end end end;function onActionEnd(A)if A==\"lalt\"then onAlt(false)end;if A==\"lshift\"then onShift(false)end;if A==\"brake\"then onBrakeUp()end;if A==\"forward\"then onForwardUp()elseif A==\"backward\"then onBackwardUp()elseif A==\"left\"then if globals.maneuverMode then onLeftArrowUp()else onLeftUp()end elseif A==\"right\"then if globals.maneuverMode then onRightArrowUp()else onRightUp()end elseif A==\"yawleft\"then onYawLeftUp()ship.rotationSpeed=ship.rotationSpeedMin elseif A==\"yawright\"then onYawRightUp()ship.rotationSpeed=ship.rotationSpeedMin elseif A==\"strafeleft\"then onLeftArrowUp()elseif A==\"straferight\"then onRightArrowUp()elseif A==\"up\"then onUpArrowUp()elseif A==\"down\"then onDownArrowUp()elseif A==\"leftmouse\"then onMouseUp()end end;function onActionLoop(A)if A==\"groundaltitudeup\"then onGroundAltitudeUpDown(true)elseif A==\"groundaltitudedown\"then onGroundAltitudeDownDown(true)elseif A==\"brake\"then onBrakeLoop()elseif A==\"left\"then if globals.maneuverMode then onLeftArrowDown()else onLeftDown()end elseif A==\"right\"then if globals.maneuverMode then onRightArrowDown()else onRightDown()end end;if not globals.maneuverMode then if A==\"speedup\"then onSpeedUpLoop()elseif A==\"speeddown\"then onSpeedDownLoop()elseif A==\"strafeleft\"then onLeftArrowDown()elseif A==\"straferight\"then onRightArrowDown()end end end\nend)\npackage.preload['Saga:events/system_flush.lua']=(function()\nfunction onSystemFlush()if links.core==nil or construct==nil then return end;cData=getConstructData(construct,links.core)if globals.maneuverMode then ship.apply(cData)else applyShipInputs()end;shipLandingTask(cData)end\nend)\npackage.preload['Saga:events/system_input.lua']=(function()\nlocal function a(b)error('[E] '..(b or''))return false end;local c='Invalid ::pos'local d='No vertical distance provided'local function e(f,g,h,i,j,k,l,m,n)local o=utils.round;if g==nil then a(string.format('%s value (%d-%d) missing',f or'',o(j or 0),o(k or 0)))return nil end;g=clamp(o(g or i),j,k)if l~=nil then Config:setValue(l,ternary(h,g/100,g))end;if m~=nil then AutoPilot.userConfig[m]=g;AutoPilot:applyConfig()end;if n then P(string.format(n,g))return g end end;function onInput(b)if b==nil or b==\"\"then return end;local p,q,r,s,t=globals,cData,AutoPilot,HUD,configDatabankMap;local u=split(b,' ')local f=u[1]:lower()local v=ternary(#u>1,tonumber(u[2]),nil)if f:sub(1,1)~='/'then if s and s.Config and s.Config.mainMenuVisible then local w=Widgets.mainMenu.optionMenu:getHoveredEntry()if not w or not w.actions or not w.actions.input then return end;if w.actions.input.filter~=nil then b=w.actions.input.filter(b)end;w.actions.input.func(b,w.actions.input.arg)return end end;if f=='/menu'and s then s.toggleMainMenu()end;if f=='/core'and s then s.toggleCoreWidget()end;if f=='/dock'and s then s.toggleDockWidget()end;if f=='/dockingmode'then local x=e(f,v,false,1,1,3,t.dockMode,nil,\"Docking mode %d\")if x~=nil then construct.setDockingMode(x)end end;if f=='/debug'then p.debug=not p.debug end;if f=='/scale'then e(f,v,true,100,40,250,t.hudScale,nil,\"Scale set to %d\")end;if f=='/landspeedhigh'then e(f,v,false,100,20,500,t.landSpeedHigh,\"landSpeedHigh\",\"High-alt landing speed set to %d\")end;if f=='/landspeedlow'then e(f,v,false,100,20,200,t.landSpeedLow,\"landSpeedLow\",\"Low-alt landing speed set to %d\")end;if f=='/travelalt'then e(f,v,false,1500,100,20000,t.travelAlt,\"travelAlt\",\"Travel altitude set to %.2f\")end;if f=='/addpos'then if RouteDatabase.currentEditId==nil then a'First open a route in menu'elseif#u==2 then addCustomPos(u[2])end;return a(c)end;if p.maneuverMode then if f=='/setbase'then setApTarget(q.position)Config:setValue(t.base,q.position)return elseif f=='/clearbase'then Config:setValue(t.base,nil)P('[I] Base cleared.')return elseif f=='/go'then if vec3.isvector(r.target)then P('Moving to '..Vec3ToPosString(r.target))ship.travel=gotoTarget(r.target,true,q.altitude)end elseif f=='/goalt'then if v==nil then return a(d)end;v=clamp(v,0,200000)if v>q.altitude then local y=ternary(v-q.altitude>0,v-q.altitude,q.altitude-v)P('[I] Moving to '..round2(v,2)..'m altitude.')ship.vertical=moveVert(y)end elseif f=='/rtb'then local z=Config:getValue(t.base,nil)if not z then return a('No base set!')end;P('[I] Back to base '..tostring(vec3(z)))ship.travel=gotoTarget(z)elseif f=='/down'then if v==nil then return a(d)end;ship.vertical=moveVert(-clamp(abs(v),-200000,2000000))elseif f=='/up'then if v==nil then return a(d)end;ship.vertical=moveVert(clamp(v,0,200000))end end;if f=='/goto'then if#u<2 or#u>3 then return a(c)end;local A=convertToWorldCoordinates(u[2])if A==nil then return a(c)end;r:setTarget(A)resetAP()local B,C=r.targetBody,r.targetAltitude;if B~=nil and(C==nil or C==0 or r.target==B.center)then C=math.max(B.maxStaticAltitude or 1000,B.surfaceMaxAltitude or 1000)if q.inAtmo and q.altitude>C then C=q.altitude end end;if#u==3 then local D=tonumber(u[3])if D~=nil and D>=100 and D>C then C=D end end;r.targetAltitude=round2(C,0)if p.maneuverMode then gotoTarget(A,true,q.inAtmo and r.userConfig.travelAlt or q.altitude)ship.travel=true elseif not r.enabled then onAlt1()end;return P('Target set to '..u[2]..' near '..r.targetBody.name..' '..r.targetLoc..' at '..r.targetAltitude..' m ')end;if f=='/alt'or f=='/altitude'then if p.altitudeHold then if v==nil then return end;v=clamp(v,-1000,100000)p.holdAltitude=round2(v,0)return P('Holding altitude set to '..p.holdAltitude..'m')end;a\"Engage 'Altitude hold' mode first\"end;if f=='/convert'then if#u<2 then return a(c)end;local E=convertToWorldCoordinates(u[2])if E==nil then return a(c)end;P(Vec3ToPosString(E))P(worldToMapStr(E)or c)end;if f=='/current'then P(Vec3ToPosString(q.position))P(worldToMapStr(q.position)or c)end;if f=='/setmaxspacespeed'or f=='/setmsp'then e(f,v,false,20000,100,50000,t.maxSpaceSpeed,nil,'Max Space Speed set to %d')end;if f=='/setmaxpitch'or f=='/setmp'then e(f,v,false,30,0,80,t.maxPitch,\"maxPitch\",'Max Pitch set to %d')end;if f=='/setmaxroll'or f=='/setmr'then e(f,v,false,35,-89,89,t.maxRoll,\"maxRoll\",'Max Roll set to %d')end;if f=='/shield'then r.userConfig.shieldManage=not r.userConfig.shieldManage;P('Shield management '..ternary(r.userConfig.shieldManage,'enabled','disabled'))Config:setValue(t.shieldManage,r.userConfig.shieldManage)end;if f=='/space'then r.userConfig.spaceCapableOverride=not r.userConfig.spaceCapableOverride;P('Space function '..ternary(r.userConfig.spaceCapableOverride,'enabled','disabled'))Config:setValue(t.spaceCapableOverride,r.userConfig.spaceCapableOverride)end;if f=='/agl'then if v==nil then return a('Missing input')end;v=clamp(v,0,20)r:setAgl(v)P('AGL set to '..r.userConfig.agl)end;if f=='/hover'then if v==nil then return end;v=clamp(v,0.5,60)r:setHoverHeight(v)P('Hover height set to '..r.userConfig.hoverHeight)end;if f=='/atp'then r:toggleThrottleBurnProtection()P('Auto throttle burn protection '..ternary(r.userConfig.throttleBurnProtection,'enabled','disabled'))end;if f=='/orbitalt'then if p.oribtalHold then if v==nil then return a'No valid number provided'end;p.manualOrbitAlt=round(v,0)P('Orbit Alt set to '..p.manualOrbitAlt)setTargetOrbitAlt()else a\"Engage 'Orbital hold' mode first!\"end end;if Radar~=nil then if f=='/radar'then Radar:toggleWidget()elseif f=='/radarbox'then Radar:toggleBoxes()end end;if f=='/freeze'and not player.isSeated()then player.freeze(not player.isFrozen())P('Frozen = '..tostring(player.isFrozen()))end;if f=='/aggalt'and links.antigrav~=nil then if v==nil then return a'Enter valid altitude number >= 1000!'end;v=math.max(1000,round(v,0))links.antigrav.setTargetAltitude(v)P('AGG target altitude: '..v)end;if f=='/unit'and s then s.toggleUnitWidget()end end\nend)\npackage.preload['Saga:events/system_update.lua']=(function()\nfunction onSystemUpdate()if links.core==nil or construct==nil then return end;cData=getConstructData(construct,links.core)playerData=getPlayerData()aggData=getAggData()warpData=getWarpData()scrnData={}if AutoPilot.enabled or globals.followMode or globals.orbitalHold then Axis={rollAxis=0,pitchAxis=0,yawAxis=0,updownAxis=0,leftrightAxis=0,forwardbackAxis=0,brakeAxis=0,throttle1Axis=0,throttle2Axis=0,throttle3Axis=0}else Axis={rollAxis=-system.getAxisValue(0),pitchAxis=-system.getAxisValue(1),yawAxis=system.getAxisValue(2),throttle1Axis=system.getAxisValue(3),brakeAxis=-system.getAxisValue(4),leftrightAxis=system.getAxisValue(5),updownAxis=system.getAxisValue(6),forwardbackAxis=system.getAxisValue(7),throttle2Axis=system.getAxisValue(8),throttle3Axis=system.getAxisValue(9)}end;Nav:update()HUD:update()Electronics:update()end\nend)\npackage.preload['Saga:events/timer_apu.lua']=(function()\nfunction onTimerAPU()local a=globals;local b=axisCommandId.longitudinal;local c=axisCommandId.vertical;local d=AutoPilot;local aggData=aggData;local cData=cData;a.collision,a.farSide,a.nearSide=castIntersections()local e=cData.altitude;local f=d.targetAltitude;if a.followMode then local g=vector.dist(cData.position,playerData.playerPosition)local h=playerData.playerVelocity:len()*3.6;local i=20+h-(20-math.min(g-50,20))if h==0 then i=20 end;if g>200 then a.followReposition=true;navCom:setTargetGroundAltitude(d.userConfig.hoverHeight)if d.landingMode then d:toggleLandingMode(false)end end;if a.followReposition then navCom:setThrottleCommand(b,getThrottle(i))if cData.speedKph>i+10 then inputs.brake=1 else inputs.brake=0 end end;if a.followReposition and g<50 and h<30 then navCom:setThrottleCommand(b,getThrottle(0))if not d.landingMode then d:toggleLandingMode(true)end;a.followReposition=false end end;if a.safetyThrottle and(system.getMouseWheel()~=0 or a.orbitalHold)then if not inputs.manualBrake then inputs.brake=0 end;a.safetyThrottle=false end;if d.enabled then inputs.brake=0;navCom:setTargetGroundAltitude(d.userConfig.hoverHeight)else a.apMode='Off'end;if d.userConfig.throttleBurnProtection then if not d.enabled and not d.landingMode and not a.orbitalHold and not inputs.manualBrake then local j=utils.round(cData.rpy.pitch)if cData.atmoDensity>=0.05 or cData.inAtmo and cData.zSpeedKPH<-100 then if cData.speedKph>cData.burnSpeedKph or a.safetyThrottle then a.safetyThrottle=true;if controlMode()=='cruise'then swapControl()end;if cData.atmoDensity<0.05 and j>5 then else navCom:setThrottleCommand(b,getThrottle(cData.burnSpeedKph-100))end end;if a.safetyThrottle then if cData.speedKph>cData.burnSpeedKph-50 then brakeCtrl=32;inputs.brake=1 else brakeCtrl=33;inputs.brake=0 end end end else a.safetyThrottle=false end end;if links.shield~=nil and d.userConfig.shieldManage==true then local k=links.shield;local l=k.getResistancesPool()local m=k.getResistances()local n=k.getResistancesCooldown()local o=k.getShieldHitpoints()if k.getStressHitpointsRaw()==0 then l=l/4;if m[1]==l and m[2]==l and m[3]==l and m[4]==l or n~=0 then else k.setResistances(l,l,l,l)end else local p=k.getStressRatioRaw()if m[1]==l*p[1]and m[2]==l*p[2]and m[3]==l*p[3]and m[4]==l*p[4]or n~=0 then else k.setResistances(l*p[1],l*p[2],l*p[3],l*p[4])end end;if o==0 and k.getVentingCooldown()==0 then k.startVenting()end;if cData.pvpZone and not k.isActive()then k.activate()elseif not cData.pvpZone and k.isActive()then k.deactivate()end end;if inputs.pitch~=0 and not d.enabled then a.holdAltitude=e end;a.aggAP=false;if d.enabled or a.altitudeHold then altHold()end;if not a.orbitalHold or a.apMode~='Orbit'then a.inOrbit=false end;if a.orbitalHold or a.apMode=='Orbit'then local q=cData.body.surfaceMaxAltitude;local r=cData.orbitFocus.orbitAltTarget;local s=cData.orbitFocus.orbitSpeed*3.6;local t=cData.orbitalParameters.apoapsis.altitude;local u=cData.orbitalParameters.periapsis.altitude;local v=cData.orbitalParameters.timeToApoapsis;local w=cData.orbitalParameters.timeToPeriapsis;brakeCtrl=0;inputs.brake=0;if a.apMode=='Orbit'then if math.abs(getVelocityTargetAngle())>2 then brakeCtrl=0.1;inputs.brake=1 end end;if not cData.inAtmo and e>=a.targetOrbitAlt and not a.inOrbit then if cData.speedKph>=s then brakeCtrl=1;inputs.brake=1 end end;if not a.inOrbit and cData.zSpeedKPH<-400 then brakeCtrl=2;inputs.brake=1 end;a.inOrbit=t>q and u>q;if controlMode()=='cruise'then swapControl()end;if a.inOrbit then if t<a.targetOrbitAlt-100 then if w<5 then apoUp=true end end;if t<a.targetOrbitAlt-100 and apoUp==true or u<a.targetOrbitAlt-100 and periUp==true then SpdControl='2'navCom:setThrottleCommand(b,0.1)else periUp=false;apoUp=false;SpdControl='3'navCom:setThrottleCommand(b,0)end;if t>a.targetOrbitAlt+100 then if w<5 then lastPeri=u;apoDown=true end end;if apoDown then if lastPeri>u+50 then apoDown=false end end;if t>a.targetOrbitAlt+100 and apoDown==true then brakeCtrl='apoDwn'inputs.brake=1 else lastPeri=u+1000;apoDown=false end;if u<a.targetOrbitAlt-100 then if v<5 then periUp=true end end;if u>a.targetOrbitAlt+100 then if v<5 then lastApo=t;periDown=true end end;if periDown then if lastApo>t+50 then periDown=false end end;if u>a.targetOrbitAlt+100 and periDown==true then brakeCtrl=3;inputs.brake=1 else lastApo=t+1000;periDown=false end;return end;local x={x=math.abs(targetAngularVelocity.x),y=math.abs(targetAngularVelocity.y),z=math.abs(targetAngularVelocity.z)}local y=false;if x.x<0.008 and x.y<0.008 and x.z<0.008 then y=true end;if unit.getAtmosphereDensity()>0.05 then SpdControl='4'navCom:setThrottleCommand(b,getThrottle())else if r>a.targetOrbitAlt-100 and e<a.targetOrbitAlt-5 then SpdControl='5'navCom:setThrottleCommand(b,0)elseif r<a.targetOrbitAlt-100 then SpdControl='6'if y or cData.zSpeedKPH<0 then navCom:setThrottleCommand(b,getThrottle(s))else navCom:setThrottleCommand(b,0.1)end else SpdControl='7'navCom:setThrottleCommand(b,getThrottle(s))end end end;if(d.enabled or a.altitudeHold or a.orbitalHold)and cData.inAtmo and getVelocityAngle()>d.userConfig.wingStallAngle then a.stallProtect=true else a.stallProtect=false end;if d.enabled and not d.target then d:toggleState(false)P('No AP target set!')elseif d.enabled and d.target then inputs.brakeLock=false;local z=cData.body;local A=d.targetBody;local B=projectedDistance(d.target)a.safetyThrottle=false;setTargetOrbitAlt()local C=false;if not d.targetIsLastPoint then if d.targetLoc=='space'then if vector.dist(d.target,cData.position)<10000 then d:onPointReached()end elseif d.targetLoc=='surface'then if sameBody and B<1000 then d:onPointReached()end end end;if a.apMode~='Orbit'then brakeCtrl=4;inputs.brake=0 end;if a.aggAP then a.holdAltitude=aggData.aggAltitude elseif z then if z.hasAtmosphere then a.holdAltitude=math.max(math.max(z.surfaceMaxAltitude+1500,f+1000),z.atmoAltitude*0.5)else a.holdAltitude=math.max(z.surfaceMaxAltitude+3000,f+1000)end end;sameBody=false;if A and z then if A.bodyId~=z.bodyId and not a.spaceCapable then P('Ship not space capable, shutting down AP')d:toggleState(false)end;sameBody=z.bodyId==A.bodyId end;if not a.spaceCapable then if not sameBody or f>A.atmoRadius-A.radius then P('point on other planet, ship currently set to not space capable.')d:toggleState(false)end end;local D=false;if a.apMode=='reEntry'then D=true end;if sameBody and d.targetLoc=='surface'then if getTargetWorldAngle()>18 then C=true end else if getTargetWorldAngle()>80 and vector.dist(z.center,cData.position)<z.radius*2 then C=true end end;if math.abs(cData.forwardSpeed)+math.abs(cData.lateralSpeed)<3 then a.horizontalStopped=true else a.horizontalStopped=false end;if not a.brakeTrigger then if sameBody and cData.inAtmo and not C and not a.aggAP and d.targetLoc=='surface'or not a.spaceCapable then a.apMode='Atmo Travel'elseif(not sameBody or d.targetLoc=='space')and cData.inAtmo and a.smoothClimb then a.apMode='Transition'elseif(not sameBody or d.targetLoc=='space')and not C and not a.spaceBrakeTrigger or sameBody and e>a.targetOrbitAlt+1000 and not a.spaceBrakeTrigger and not aggData.aggBubble or a.apMode=='standby'then a.apMode='Transfer'a.orbitLock=false elseif a.aggAP and aggData.aggBubble then a.spaceBrakeTrigger=false;a.apMode='agg'elseif not cData.inAtmo and cData.brakes.distance*1.5>=B and(e<a.targetOrbitAlt+5000 and sameBody or D or sameBody and a.inOrbit)and not a.aggAP and z.hasAtmosphere and d.targetLoc=='surface'then a.orbitLock=false;a.apMode='reEntry'elseif C and sameBody and e<a.targetOrbitAlt+2000 or C and not sameBody or a.orbitLock or sameBody and e<a.targetOrbitAlt+2000 and not A.hasAtmosphere and not a.aggAP and a.spaceCapable then a.orbitLock=true;a.apMode='Orbit'elseif a.spaceBrakeTrigger and not cData.inAtmo then a.apMode='Space Braking'end end;if links.antigrav~=nil and d.userConfig.autoAGGAdjust then if aggData.aggState and d.targetLoc=='surface'then if A~=nil then if A.hasAtmosphere and not aggData.aggBubble or not sameBody then if aggData.aggTarget~=A.atmoAltitude then links.antigrav.setTargetAltitude(A.atmoAltitude)end elseif sameBody and aggData.aggBubble then if f==0 then if aggData.aggTarget~=math.max(math.max(f+500,1000),A.surfaceMaxAltitude)then links.antigrav.setTargetAltitude(math.max(math.max(f+500,1000),A.surfaceMaxAltitude))end else if aggData.aggTarget~=math.max(f+500,1000)then links.antigrav.setTargetAltitude(math.max(f+500,1000))end end end end end end;if links.antigrav~=nil and a.apMode=='agg'then local x={x=math.abs(targetAngularVelocity.x),y=math.abs(targetAngularVelocity.y),z=math.abs(targetAngularVelocity.z)}local y=false;if x.x<0.005 and x.y<0.005 and x.z<0.005 or cData.speedKph<4000 or cData.G>0.5 and not sameBody then y=true end;local E=getTargetWorldAngle()local s=cData.orbitFocus.orbitSpeed*3.6;if E>=0.5 and E<5 and y then SpdControl='agg 1'navCom:setThrottleCommand(b,getThrottle(300))end;if E>=5 and y then SpdControl='agg 2'navCom:setThrottleCommand(b,getThrottle(s))end end;local F=vector.dist(cData.position,A.center)if A.hasAtmosphere then F=utils.round(F-A.atmoRadius*1.05)else F=F-A.radius*1.5 end;if a.apMode=='Transfer'or a.apMode=='Space Braking'then local x={x=math.abs(targetAngularVelocity.x),y=math.abs(targetAngularVelocity.y),z=math.abs(targetAngularVelocity.z)}local y=false;if d.targetLoc=='surface'then if x.x<0.008 and x.y<0.008 and x.z<0.008 or cData.speedKph<4000 or cData.G>0.5 and not sameBody and cData.speedKph<d.maxSpaceSpeed then y=true end end;if d.targetLoc=='space'then if x.x<0.008 and x.y<0.008 and x.z<0.008 or cData.speedKph<500 or cData.G>0.5 and not sameBody and cData.speedKph<d.maxSpaceSpeed then y=true end end;if a.aggAP and d.targetLoc~='space'then local G=vector.dist(A.center,cData.position)-A.radius-aggData.aggTarget;if a.aggAP and cData.brakes.distance*1.5>=G then a.spaceBrakeTrigger=true;brakeCtrl=9;inputs.brake=1 end;if a.aggAP and sameBody and e<=aggData.aggTarget+100 and not aggData.aggBubble then a.waitForBubble=true;SpdControl='agg 5'navCom:setThrottleCommand(b,0)brakeCtrl=10;inputs.brake=1 else a.waitForBubble=false end end;if d.targetLoc=='surface'and cData.brakes.distance*1.4>=e-a.targetOrbitAlt and sameBody and a.apMode~='Landing'and cData.speedKph>1000 or d.targetLoc=='surface'and cData.brakes.distance*1.4>=F and not sameBody then a.spaceBrakeTrigger=true;brakeCtrl=11;inputs.brake=1 end;if d.targetLoc=='space'and cData.brakes.distance*1.4>=vector.dist(d.target,cData.position)-1000 then a.spaceBrakeTrigger=true;if vector.dist(d.target,cData.position)<1000 then if cData.speedKph>110 then brakeCtrl=11.1;inputs.brake=1 end else brakeCtrl=11.2;inputs.brake=1 end end;if getSpaceVelocityTargetAngle()>50 and a.apMode~='Space Braking'and not cData.inAtmo then brakeCtrl=12;inputs.brake=1 end;if not a.spaceBrakeTrigger then if cData.speedKph<d.maxSpaceSpeed and y or cData.speedKph<3000 then SpdControl='8'navCom:setThrottleCommand(b,getThrottle(d.maxSpaceSpeed))elseif cData.speedKph<d.maxSpaceSpeed then SpdControl='8.1'navCom:setThrottleCommand(b,0.3)else SpdControl='8.1.1'navCom:setThrottleCommand(b,0)end;if getSpaceVelocityTargetAngle()>0.05 and y and cData.speedKph>=d.maxSpaceSpeed then SpdControl='8.2'navCom:setThrottleCommand(b,clamp(getSpaceVelocityTargetAngle()*0.1-0.01,0,1))end;if cData.atmoDensity>0.05 then SpdControl='8.3'navCom:setThrottleCommand(b,getThrottle())end else if d.targetLoc=='surface'then if not a.aggAP then if getTargetWorldAngle()>0.5 and cData.ySpeedKPH<500 and y then SpdControl='9'navCom:setThrottleCommand(b,getThrottle(500,cData.forwardSpeed))else SpdControl='9.1'navCom:setThrottleCommand(b,0)end else if getTargetWorldAngle()>0.5 and cData.ySpeedKPH<500 and y and e>aggData.aggTarget+200 then SpdControl='9.2'navCom:setThrottleCommand(b,getThrottle(500,cData.forwardSpeed))else SpdControl='9.3'navCom:setThrottleCommand(b,0)end end else if not a.spaceBrakeTrigger then SpdControl='9.4'navCom:setThrottleCommand(b,getThrottle(d.maxSpaceSpeed))else SpdControl='9.5'if getSpaceVelocityTargetAngle()>10 then navCom:setThrottleCommand(b,getThrottle(d.maxSpaceSpeed))brakeCtrl=12.1;inputs.brake=1 else navCom:setThrottleCommand(b,getThrottle(100,cData.forwardSpeed))end end end end end;if d.targetLoc=='surface'and cData.brakes.distance*1.4>=F and not sameBody and cData.speedKph*1000 then a.spaceBrakeTrigger=true;brakeCtrl=11.5;inputs.brake=1 end;if sameBody and cData.inAtmo and a.apMode~='Orbit'and a.apMode~='Landing'and d.targetLoc~='space'or a.apMode=='reEntry'then if B<5000 and not a.brakeTrigger then SpdControl='10'navCom:setThrottleCommand(b,getThrottle(math.min(utils.round(B/2),500),cData.forwardSpeed))if cData.ySpeedKPH>math.min(utils.round(B/2),500)+100 and a.apMode=='reEntry'then brakeCtrl=13;inputs.brake=1 end end;if a.apMode=='reEntry'then if B<300 then a.brakeTrigger=true end end;if cData.inAtmo and not d.waitForBubble then SpdControl='11'navCom:setThrottleCommand(b,getThrottle(cData.burnSpeedKph-150))if math.abs(getVelocityTargetAngle())>5 then brakeCtrl=13.1;inputs.brake=1 end;if cData.speedKph>cData.burnSpeedKph-100 then brakeCtrl=14;inputs.brake=1 end;if cData.brakes.distance*1.5>=B or B<300 then a.brakeTrigger=true end end end;if a.apMode=='reEntry'then if getTargetWorldAngle()>1 then if cData.zSpeedKPH<-200 then SpdControl='12'navCom:setThrottleCommand(b,getThrottle(1000,cData.forwardSpeed))else SpdControl='13'navCom:setThrottleCommand(b,getThrottle())end;if cData.speedKph>=cData.burnSpeedKph-300 then brakeCtrl=15;inputs.brake=1 end else a.brakeTrigger=true end end;if a.apMode=='Orbit'and(sameBody and not A.hasAtmosphere or a.aggAP)then if math.abs(getVelocityTargetAngle())>5 then brakeCtrl=15.1;inputs.brake=1 end;if cData.brakes.distance*1.4>=B then a.brakeTrigger=true end end;if(a.apMode=='reEntry'or sameBody and e<a.targetOrbitAlt+2000)and d.targetLoc~='space'then if a.brakeTrigger then a.orbitLock=false;if B>1000 then a.brakeTrigger=false end;a.apMode='Landing'if a.lastProjectedDistance>B then a.lastProjectedDistance=B end;SpdControl='14'navCom:setThrottleCommand(b,0)if not a.horizontalStopped and cData.brakes.distance*1.4>=a.lastProjectedDistance-150 or cData.zSpeedKPH<-1000 then brakeCtrl=16;inputs.brake=1 end;if f==0 or d.target==A.center then f=A.surfaceMaxAltitude end;if links.antigrav~=nil then if aggData.aggState and d.targetLoc=='surface'then f=aggData.aggAltitude end end;if a.horizontalStopped then if cData.brakes.distance*3>=e-f+300 or cData.zSpeedKPH<-100 and e-f<400 or cData.speedKph>1000 then brakeCtrl=17;inputs.brake=1 end;if e<f+500 and cData.zSpeedKPH<-75 then brakeCtrl=18;inputs.brake=1 end end;if e<=f and cData.vertSpeed>=0 then d:onPointReached()end;if a.horizontalStopped and B>300 then a.missedTarget=true end end end;if d.targetLoc=='space'then if vector.dist(d.target,cData.position)<=1500 then d:onPointReached()end end;if a.initTurn then SpdControl='turn'if math.abs(getTargetAngle())>90 and cData.constructSpeed<30 then navCom:setThrottleCommand(b,0)else a.initTurn=false end end end;a.waterMode=cData.inAtmo and e<0;if a.waterMode then if inputs.pitch~=0 or a.verticalState then a.waterAlt=e end;if not a.verticalState and not d.landingMode then if cData.zSpeedKPH<-5 or e<a.waterAlt and cData.zSpeedKPH<5 then a.waterState=true;navCom:deactivateGroundEngineAltitudeStabilization()navCom:resetCommand(c)navCom:updateCommandFromActionStart(c,1.0)else a.waterState=false;navCom:resetCommand(c)navCom:activateGroundEngineAltitudeStabilization()navCom:setTargetGroundAltitude(-1)end else navCom:deactivateGroundEngineAltitudeStabilization()end end;if inputs.brakeLock then inputs.brake=1 end end\nend)\npackage.preload['Saga:events/timer_fuel.lua']=(function()\nfunction onTimerFuelUpdate()local a=system.getArkTime()for b,c in pairs(fuels)do for b,d in ipairs(c)do d.lastMass=d.mass;d.mass=links.core.getElementMassById(d.uid)if d.mass~=d.lastMass then d.percent=round2(d.mass/d.maxMass*100,2)d.lastTimeLeft=d.timeLeft;d.timeLeft=math.floor(d.mass/((d.lastMass-d.mass)/(a-d.lastTime)))d.lastTime=a end end end end\nend)\npackage.preload['Saga:events/unit_start.lua']=(function()\nfunction init()cData={}aggData={}warpData={}playerData={}vector=vec3()targetAngularVelocity=vec3()local a,b=pcall(require,\"autoconf/custom/\"..customAtlas)if not a then b=require(\"atlas\")end;atlas=b;initialiseAtlas()systemId=0 end;function onUnitStart()system.showHelper(false)scanLinks()if links.core==nil then P\"[E] Core not found, did you link it to this control unit?\"unit.exit()return false end;init()finaliseLinks()validateParms()cData=getConstructData(construct,links.core)playerData=getPlayerData()aggData=getAggData()warpData=getWarpData()Config:init(links.databanks,'SagaConf','SagaActiveConf')RouteDatabase:init(links.databanks,'SagaRoutes','SagaActiveRoutes')Radar:init(links.radars)AutoPilot:init()initializeTanks()initEngines()resetAP()dynamicSVG()HUD:init()links.electronics:SwitchesOn()ship=STEC()if unit.isRemoteControlled()then player.freeze(true)end;Nav.targetSpeedRanges={1000,5000,10000,20000,30000}navCom.axisCommands[axisCommandId.longitudinal].throttleMouseStepScale=1;navCom:setupCustomTargetSpeedRanges(axisCommandId.longitudinal,Nav.targetSpeedRanges)local c,d=cData,globals;if not c.vtolCapable then P\"[W] Low lift for Maneuver mode.\"end;d.maneuverMode=Config:getValue(configDatabankMap.maneuverMode)if d.maneuverMode then setThrottle(1,1,1)ship.apply(c)else setThrottle()Nav.axisCommandManager:setTargetGroundAltitude(0)Nav:update()end;if c.isLanded then inputs.brake=1;inputs.brakeLock=true end;d.startup=false end;function printHello()P'HUD/Autopilot by Sagacious, Mayumi and CodeInfused'P('v4.1.6.1')P'Customized by tobitege (2025-08-28)'end;function initEngines()local d,e=globals,AutoPilot;local f='primary'local g='secondary'local h='tertiary'local i='thrust analog longitudinal'local j=construct.getMaxThrustAlongAxis;local k={vec3(construct.getForward()):unpack()}d.maxPrimaryKP=j(f,k)d.maxSecondaryKP=j(g,k)d.maxTertiaryKP=j(h,k)d.maxDefaultKP=j(i,k)if not e.userConfig.spaceCapableOverride then d.spaceCapable=d.maxDefaultKP[3]>0;if not d.spaceCapable then P'[E] Longitudinal Space Thrust not detected - space transfers/orbit disabled'end else d.spaceCapable=e.userConfig.spaceCapableOverride end;if boostModeOverride=='off'then if d.maxPrimaryKP[1]>0 and d.maxSecondaryKP[1]>0 then d.advAtmoEngines=true;d.boostMode='hybrid'P'Atmo Engine tags detected, advanced Atmo engine control enabled'else d.advAtmoEngines=false;P'Atmo Engine tags not detected, advanced Atmo engine control disabled'end;d.advSpaceEngines=d.maxPrimaryKP[3]>0 and d.maxSecondaryKP[3]>0;if d.advSpaceEngines then d.boostMode='hybrid'P'Space Engine tags detected, advanced Space engine control enabled'else P'Space Engine tags not detected, advanced Space engine control disabled'end else d.boostMode=boostModeOverride end;local c=cData;if not(c.hasvBoosters or c.hasHovers)then P'[I] No ground engines detected!'end end\nend)\npackage.preload['Saga:behaviour/kinematics.lua']=(function()\nfunction Kinematics()local a={}function a.computeAccelerationTime(b,c,d)return(d-b)/c end;function a.computeBrakingDistance(e,f,g,h)local i=cData;local j,k,l=i.mass,i.G,h:dot(i.worldAirFriction)local m,n=sign(f),abs(f)local o=cData.MaxKinematics.Up;if h==cData.wFwd or h==cData.worldBack then o=ternary(m>0,cData.MaxKinematics.Forward,cData.MaxKinematics.Backward)end;local p=0;if h==cData.worldUp or h==cData.worldDown then p=m*j*k*system.getActionUpdateDeltaTime()*2 end;local q=(g or 0)+p-l;local r=(o-m*p)/j;local s=math.sqrt(2*abs(r*n)+e^2)e=math.min(e,s)local t=(s^2-e^2)/(2*(q or 0.000001))local u=n-t;if u<0 then s=math.sqrt(e^2+2*q*n)u=0 end;return s*m,u*m end;function a.computeDistanceAndTime(b,d,j,v,w,x)w=w or 0;x=x or 0;local y=b<d;local z=v/(y and j or-j)local A=-x/j;local B=z+A;if b==d then return 0,0 elseif y and B<=0 or not y and B>=0 then return-1,-1 end;local C,D=0,0;if z~=0 and w>0 then local E=math.pi/w/2;local F=function(G)return z*(G/2-w*math.sin(E*G)/math.pi)+A*G+b end;local H=y and function(I)return I>=d end or function(I)return I<=d end;D=2*w;if H(F(D))then local J=0;while math.abs(D-J)>0.25 do local G=(D+J)/2;if H(F(G))then D=G else J=G end end end;local K=2*z*w^2/math.pi^2;C=K*(math.cos(E*D)-1)+(z+2*A)*D^2/4+b*D;if D<2*w then return C,D end;b=F(D)end;local L=z+A;local G=a.computeAccelerationTime(b,L,d)local M=b*G+L*G*G/2;return C+M,D+G end;return a end\nend)\npackage.preload['Saga:behaviour/autopilot.lua']=(function()\nAutoPilot=(function()local a={}a.enabled=false;a.userConfig={agl=agl,apState=false,autoAGGAdjust=autoAGGAdjust,dockMode=dockMode,dockWidget=dockWidget,hoverHeight=hoverHeight,landingMode=false,maxPitch=maxPitch,maxRoll=maxRoll,maxSpaceSpeed=maxSpaceSpeed,shieldManage=shieldManage,slowFlat=true,spaceCapableOverride=spaceCapableOverride,throttleBurnProtection=throttleBurnProtection,wingStallAngle=wingStallAngle,landSpeedHigh=maxLandingSpeedHigh,landSpeedLow=maxLandingSpeedLow,travelAlt=travelAlt,base=nil}function a:init()a:setTargetData(cData.position)Config.defaults[configDatabankMap.agl]=a.userConfig.agl;Config.defaults[configDatabankMap.apState]=a.enabled;Config.defaults[configDatabankMap.autoAGGAdjust]=a.userConfig.autoAGGAdjust;Config.defaults[configDatabankMap.base]=nil;Config.defaults[configDatabankMap.dockMode]=clamp(a.userConfig.dockMode or 1,1,3)Config.defaults[configDatabankMap.dockWidget]=a.userConfig.dockWidget;Config.defaults[configDatabankMap.hoverHeight]=a.userConfig.hoverHeight;Config.defaults[configDatabankMap.landingMode]=a.userConfig.landingMode;Config.defaults[configDatabankMap.maxPitch]=a.userConfig.maxPitch;Config.defaults[configDatabankMap.maxRoll]=a.userConfig.maxRoll;Config.defaults[configDatabankMap.maxSpaceSpeed]=a.userConfig.maxSpaceSpeed;Config.defaults[configDatabankMap.shieldManage]=a.userConfig.shieldManage;Config.defaults[configDatabankMap.slowFlat]=a.userConfig.slowFlat;Config.defaults[configDatabankMap.spaceCapableOverride]=a.userConfig.spaceCapableOverride;Config.defaults[configDatabankMap.throttleBurnProtection]=a.userConfig.throttleBurnProtection;Config.defaults[configDatabankMap.wingStallAngle]=a.userConfig.wingStallAngle;Config.defaults[configDatabankMap.landSpeedHigh]=a.userConfig.landSpeedHigh;Config.defaults[configDatabankMap.landSpeedLow]=a.userConfig.landSpeedLow;Config.defaults[configDatabankMap.travelAlt]=a.userConfig.travelAlt;EventSystem:register('ConfigDBChanged',a.applyConfig,a)a:applyConfig()construct.setDockingMode(a.userConfig.dockMode)a:resumeFromDatabank()if not globals.maneuverMode then a:toggleLandingMode(a.userConfig.landingMode)end end;function a:applyConfig()a.userConfig.agl=Config:getValue(configDatabankMap.agl)a.userConfig.autoAGGAdjust=Config:getValue(configDatabankMap.autoAGGAdjust)a.userConfig.base=Config:getValue(configDatabankMap.base)a.userConfig.dockMode=Config:getValue(configDatabankMap.dockMode)a.userConfig.dockWidget=Config:getValue(configDatabankMap.dockWidget)a.userConfig.hoverHeight=Config:getValue(configDatabankMap.hoverHeight)a.userConfig.landingMode=Config:getValue(configDatabankMap.landingMode)a.userConfig.maxPitch=Config:getValue(configDatabankMap.maxPitch)a.userConfig.maxRoll=Config:getValue(configDatabankMap.maxRoll)a.userConfig.maxSpaceSpeed=Config:getValue(configDatabankMap.maxSpaceSpeed)a.userConfig.shieldManage=Config:getValue(configDatabankMap.shieldManage)a.userConfig.slowFlat=Config:getValue(configDatabankMap.slowFlat)a.userConfig.spaceCapableOverride=Config:getValue(configDatabankMap.spaceCapableOverride)a.userConfig.throttleBurnProtection=Config:getValue(configDatabankMap.throttleBurnProtection)a.userConfig.landSpeedHigh=Config:getValue(configDatabankMap.landSpeedHigh)a.userConfig.landSpeedLow=Config:getValue(configDatabankMap.landSpeedLow)a.userConfig.travelAlt=Config:getValue(configDatabankMap.travelAlt)a:setHoverHeight(a.userConfig.hoverHeight)a:updateMaxSpaceSpeed()end;function a:resumeFromDatabank()local b=Config:getDynamicValue(configDatabankMap.apState)if b then a:toggleState(b)end;local c=Config:getDynamicValue(configDatabankMap.currentTarget)if type(c)~='table'then c=Config:getValue(configDatabankMap.base)end;if type(c)=='table'then if c.x~=nil then a:setTarget(c)elseif#c==3 and c[3]and RouteDatabase:getDatabankName()==c[3]then a:setActiveRoute(c[1],c[2])end end end;function a:toggleState(d)if d==nil then d=not a.enabled end;if(cData.warpOn or globals.maneuverMode)and d then return end;a.enabled=d;if a.enabled then a:toggleLandingMode(false)a:updateMaxSpaceSpeed()else resetModes()end;Config:setDynamicValue(configDatabankMap.apState,a.enabled)end;function a:toggleShieldManage(d)if d==nil then d=not a.userConfig.shieldManage end;a.userConfig.shieldManage=d;Config:setValue(configDatabankMap.shieldManage,d)end;function a:toggleThrottleBurnProtection(d)if d==nil then d=not a.userConfig.throttleBurnProtection end;a.userConfig.throttleBurnProtection=d;Config:setValue(configDatabankMap.throttleBurnProtection,d)end;function a:toggleSpaceCapableOverride(d)if d==nil then d=not a.userConfig.spaceCapableOverride end;a.userConfig.spaceCapableOverride=d;Config:setValue(configDatabankMap.spaceCapableOverride,d)initEngines()end;function a:toggleSlowFlat(d)if d==nil then d=not a.userConfig.slowFlat end;a.userConfig.slowFlat=d;Config:setValue(configDatabankMap.slowFlat,d)end;function a:setActiveRoute(e,f)e=tonumber(e)if not e then return end;if tonumber(f)==nil then f=1 end;local g=RouteDatabase;local h=g:getPointCoordinates(e,f)if not h then return end;a.currentRouteIndex=e;a.currentPointIndex=f;a:setTargetData(h)Config:setDynamicValue(configDatabankMap.currentTarget,{a.currentRouteIndex,a.currentPointIndex,g.databank.name})local i=g:getRoutePointCount(e)a.targetIsLastPoint=i==0 or a.currentPointIndex==i end;function a:setTarget(j)a:setTargetData(j)a.targetIsLastPoint=true;Config:setDynamicValue(configDatabankMap.currentTarget,j)end;function a:updateMaxSpaceSpeed()local k=a.userConfig.maxSpaceSpeed;local l=cData.maxSpeed*3.6-1;if k==0 then a.maxSpaceSpeed=l else a.maxSpaceSpeed=k end end;function a:onPointReached()if not a.targetIsLastPoint then if a.currentPointIndex~=nil then a.currentPointIndex=a.currentPointIndex+1;a:setActiveRoute(a.currentRouteIndex,a.currentPointIndex)end;resetAP()return end;a:toggleState(false)a:toggleLandingMode(true)end;function a:onRouteUnloaded()a.currentRouteIndex=nil;a.currentPointIndex=nil;a:toggleState(false)end;function a:setTargetData(j)a.target=vec3(j)a.targetBody=findClosestBody(a.target)a.targetAltitude=getAltitude(a.target)a.targetLoc=getLoc(a.targetBody,a.targetAltitude)a.targetIsLastPoint=false end;function a:addHoverHeight(m,n)if tonumber(m)==nil then return P'E'end;if n then navCom:updateTargetGroundAltitudeFromActionLoop(m)else navCom:updateTargetGroundAltitudeFromActionStart(m)end;a:setHoverHeight(a.userConfig.hoverHeight+m)end;function a:setHoverHeight(o)if o and tonumber(o)~=nil then a.userConfig.hoverHeight=tonumber(o)end;a.userConfig.hoverHeight=round2(clamp(a.userConfig.hoverHeight or 20,0,50),1)if not(a.landingMode or ship.landingMode)then navCom:setTargetGroundAltitude(a.userConfig.hoverHeight+a.userConfig.agl)end;Config:setValue(configDatabankMap.hoverHeight,a.userConfig.hoverHeight)end;function a:setAgl(o)if tonumber(o)==nil then return end;a.userConfig.agl=tonumber(o)Config:setValue(configDatabankMap.agl,o)end;function a:resetNavCom(p)if p==true then navCom:deactivateGroundEngineAltitudeStabilization()elseif p==false then navCom:deactivateGroundEngineAltitudeStabilization()end;navCom:resetCommand(axisCommandId.longitudinal)navCom:setThrottleCommand(axisCommandId.longitudinal,0)navCom:setTargetSpeedCommand(axisCommandId.longitudinal,0)navCom:resetCommand(axisCommandId.vertical)navCom:setTargetSpeedCommand(axisCommandId.vertical,0)Nav:update()end;function a:toggleLandingMode(d)if d==nil then d=not a.landingMode end;a.landingMode=d==true;local q=globals;Config:setValue(configDatabankMap.landingMode,a.landingMode)if q.maneuverMode then return end;if a.landingMode then q.altitudeHold=false;q.orbitalHold=false;q.rotationDampening=true;inputs.brake=1;inputs.brakeLock=false;unit.deployLandingGears()if not q.maneuverMode then if unit.getControlMode()==1 then swapControl()end;navCom:setThrottleCommand(axisCommandId.longitudinal,0)navCom:setTargetSpeedCommand(axisCommandId.longitudinal,0)navCom:setTargetGroundAltitude(-1)end;links.electronics:OpenDoors()elseif not q.maneuverMode then navCom:resetCommand(axisCommandId.vertical)navCom:setTargetGroundAltitude(AutoPilot.userConfig.hoverHeight)navCom:activateGroundEngineAltitudeStabilization()Nav:update()unit.retractLandingGears()links.electronics:CloseDoors()inputs.brake=0 end end;return a end)()function getLoc(r,s)if r~=nil and r.hasAtmosphere and s<r.atmoRadius-r.radius then return'surface'elseif r~=nil and not r.hasAtmosphere and s<r.surfaceMaxAltitude+5000 then return'surface'end;return'space'end;function orbitHold()setTargetOrbitAlt()local t,u=globals,AutoPilot;local v=t.targetOrbitAlt-cData.orbitFocus.orbitAltTarget;local w=20000+cData.constructSpeed;local x=(utils.smoothstep(v,-w,w)-0.5)*2*u.userConfig.maxPitch;if cData.inAtmo then x=u.userConfig.maxPitch end;return x end;function altHold()local t,u,y=globals,AutoPilot,cData;if u.enabled or t.altitudeHold or t.orbitalHold or t.apMode=='Orbit'then local s=y.altitude;local z=t.holdAltitude-s;local w=500+y.constructSpeed;t.targetPitch=(utils.smoothstep(z,-w,w)-0.5)*2*u.userConfig.maxPitch;if z<0 and cData.inAtmo then t.targetPitch=t.targetPitch/6 end;local A=y.rpy.pitch;local B=0.1;if math.abs(t.targetPitch-A)>B then if pitchPID3==nil then pitchPID3=pid.new(0.02,0,0.1)end;pitchPID3:inject(t.targetPitch-A)local C=pitchPID3:get()pitchInput2=C end end end;function controlMode()return ternary(unit.getControlMode()==0,'travel','cruise')end;function swapControl()if unit.getControlMode()>0 then unit.cancelCurrentControlMasterMode()end;Nav:update()end;function resetAP()local q=globals;q.aimTarget=\"none\"q.orbitLock=false;q.brakeTrigger=false;q.spaceBrakeTrigger=false;q.stallProtect=false;q.lastProjectedDistance=10000000;q.missedTarget=false;q.horizontalStopped=false;q.apMode='standby'q.initTurn=true;inputs.brakeLock=false end;function resetModes()local q,u=globals,AutoPilot;u.enabled=false;u.landingMode=false;resetAP()q.altitudeHold=false;q.orbitalHold=false;q.followMode=false;q.radialIn=false;q.radialOut=false;q.cameraAim=false;radialMode='none'end;function setTargetOrbitAlt()local t=globals;t.targetOrbitAlt=100000;local r=cData.body;if r==nil then return end;local D=AutoPilot.targetBody;if D==nil then return end;local E=cData.mass/2500;if t.apMode=='Orbit'then if sameBody and D.hasAtmosphere then t.targetOrbitAlt=D.atmoRadius-D.radius+1500+E elseif not sameBody and r.hasAtmosphere then t.targetOrbitAlt=r.atmoRadius-r.radius+5000+E elseif not sameBody and not r.hasAtmosphere or sameBody and not D.hasAtmosphere then t.targetOrbitAlt=r.surfaceMaxAltitude+3000+E end elseif t.manualOrbitAlt~=0 then t.targetOrbitAlt=t.manualOrbitAlt else if r.hasAtmosphere and t.manualOrbitAlt==0 then t.targetOrbitAlt=r.atmoRadius-r.radius+3000+E else t.targetOrbitAlt=r.surfaceMaxAltitude+3000+E end end end\nend)\npackage.preload['Saga:behaviour/electronics.lua']=(function()\nElectronics=(function()local a={}a.doors={}a.forcefields={}a.switches={}a.queue={}function a:update(b,c)while#a.queue>0 do table.remove(a.queue)()end end;function a:SetElement(b,c)if b==nil then b=true end;for d,e in pairs(c)do if b then e.deactivate()table.insert(a.queue,e.activate)else e.activate()table.insert(a.queue,e.deactivate)end end end;function a:OpenDoors()a:SetElement(true,a.doors)end;function a:CloseDoors()a:SetElement(false,a.doors)end;function a:ForcefieldsOn()a:SetElement(true,a.forcefields)end;function a:ForcefieldsOff()a:SetElement(false,a.forcefields)end;function a:SwitchesOn()a:SetElement(true,a.switches)end;function a:SwitchesOff()a:SetElement(false,a.switches)end;return a end)()\nend)\npackage.preload['Saga:behaviour/ship_maneuver.lua']=(function()\nlocal a,b,c,d,e,f,g,h,i,j=math.abs,utils.clamp,math.max,math.min,math.atan,math.rad,utils.sign,utils.round,math.ceil,math.sqrt;function STEC()local self={}self.rotationSpeed=0.25;self.rotationSpeedMin=0.25;self.rotationSpeedMax=15;self.rotationStep=0.025;self.thrust=vec3()self.angularThrust=vec3()self.inertialDampening=true;self.IDIntensity=9;self.brakingFactor=10;self.followGravity=true;self.controlMode=nil;self.alternateCM=false;self.throttle=100;self.tempThrottle=100;self.mmbThrottle=false;self.priorityTags1=\"brake,airfoil,torque,vertical,lateral,longitudinal\"self.priorityTags2=\"atmospheric_engine,space_engine\"self.angle=0;self.isAbove=false;self.gotoLock=nil;self.landingMode=false;self.traverse=false;self.targetVector=nil;self.targetVectorAutoUnlock=true;self.vertical=false;self.holdAltitude=cData.altitude;self.targetDist=0;self.state=nil;self.yawDamp=true;self.travelAltitude=nil;self.latPID=pid.new(5,0,10.0)function self.toggleMmb(k)if k==nil then k=not self.mmbThrottle end;local l,m=globals,cData;self.mmbThrottle=k==true;if self.alternateCM then navCom:resetCommand(axisCommandId.longitudinal)m.curThrottle=0;self.throttle=0;self.mmbThrottle=false;return end;if self.mmbThrottle and self.gotoLock~=nil then self.mmbThrottle=false;return end;l.altitudeHold=self.mmbThrottle;if self.mmbThrottle then self.throttle=100;m.curThrottle=1;l.holdAltitude=m.altitude;self.holdAltitude=m.altitude end end;function self.scaleRotation()if self.rotationSpeed<self.rotationSpeedMax then self.rotationSpeed=b(self.rotationSpeed+self.rotationStep,self.rotationSpeedMin,self.rotationSpeedMax)end end;function self.movePosAltitude(n,o)local m=cData;if m.gravity==nil then return n end;return n-m.gravityDir*(o or 0)end;function self.moveWaypointZ(m,p)return m.position-m.gravityDir*(p or 0)end;function self.moveWaypointY(m,p,o)local q=self.moveWaypointZ(m,p-m.altitude)return q-m.wRight:cross(m.gravity):normalize()*-o end;function self.prepLanding()if self.landingMode then inputs.up=false;inputs.down=false;unit.deployLandingGears()else unit.retractLandingGears()end end;function self.resetFlags()local l=globals;if l.maneuverMode then l.altitudeHold=false end;self.dt=nil;self.followGravity=true;self.gotoLock=nil;self.landingMode=false;self.mmbThrottle=false;self.state=nil;self.takeoff=false;self.targetVector=nil;self.travel=false;self.traverse=false;self.vertical=false end;function self.resetMoving()if AutoPilot.landingMode then AutoPilot.landingMode=false end;local l=globals;l.altitudeHold=false;if l.maneuverMode then self.toggleMmb(false)self.resetFlags()end end;function self.resetManeuver()local l=globals;l.maneuverMode=true;l.rotationDampening=true;resetModes()if unit.getControlMode()==1 then unit.cancelCurrentControlMasterMode()Nav:update()self.controlMode=0;self.throttle=100;self.alternateCM=false end;AutoPilot:resetNavCom(false)inputs.direction=vec3()inputs.rotation=vec3()self.resetFlags()self.alternateCM=false;self.controlMode=0;self.throttle=100;setThrottle(1,1,1)dynamicSVG()end;function self.stopLanding()local l=globals;self.resetMoving()self.targetVector=nil;self.landingMode=false;if not l.startup then if l.prevStdMode then l.maneuverMode=true;onAlt9()end;if not player.isSeated()or unit.isRemoteControlled()then unit.exit()end end;inputs.brake=1;inputs.brakeLock=true end;function self.trimAngle(m)if not(a(self.angle)<=0.0008 or self.isAbove)then local r,s=self.angle,m.worldUp;local t=m.worldAngularAcceleration:dot(s)local u=m.worldAngularVelocity:dot(s)local v=u+t*self.dt;if a(r)>0.01 and a(u)<0.01 and a(t)<0.01 then r=r+g(r)*self.rotationSpeedMin end;r=getDampener('P',r,2*math.pi)v=v*r;local w=(self.angle-v)*r;r=(w-u)*r;self.yawDamp=a(v)>=0.15;return s*r end;return vec3()end;function self.applyAltitudeHold(m,x,y,z)if x then local A=b((self.holdAltitude or m.altitude)-m.altitude,-10,10)local B=self.moveWaypointY(m,self.holdAltitude-A,m.forwardSpeed+100)self.targetVector=(B-m.position):normalize()y=y-m.gravity*m.mass*A-m.mass*(m.vertSpeed+vec3(0,0,m.axisAccel.z*1))elseif not(m.isLanded or self.landingMode or self.takeoff or self.vertical)and not(inputs.up or inputs.down)and(self.mmbThrottle or inputs.pitch~=0)then y=y-m.mass*(m.vertSpeed+vec3(0,0,m.axisAccel.z*1))end;z=z-m.wRight:cross(m.wFwd:cross(m.gravity:normalize()))*(m.worldAngularVelocity*3-m.angularAirFriction*3)return y,z end;function self.switchState(k)if self.state==k then return end;self.state=k;if k then P('[I] '..k)end end;function self.miniPilot(m,C,D)if self.gotoLock==nil then return C,D end;local y,z=C:clone(),D:clone()local l,E,F=globals,AutoPilot,m.position;local G,H,I=0.02,m.body,m.mass;self.yawDamp=true;if self.landingMode then self.state='LANDING'elseif self.travel and not self.state or self.takeoff or self.vertical then self.state='ALTITUDE'elseif self.travel and self.traverse then self.state='TRAVERSING'elseif(m.isLanded or self.state=='LANDED')and not(self.takeoff or self.vertical)then self.resetMoving()return y,z end;if not self.state then P'[E] State not set!'return y,z end;local J=vec3(self.gotoLock):clone()local K=getAltitude(J)local L=K;if self.state=='ALTITUDE'and(self.travel or self.traverse)then local M=L+ternary(self.travel,50,0)local N=0;if m.inAtmo and self.travel and self.travelAltitude then N=self.travelAltitude end;if N>M and N>m.altitude then M=N elseif m.altitude>M then M=m.altitude end;J=self.movePosAltitude(F,M-m.altitude)L=getAltitude(J)self.travelAltitude=L end;local O=round2(L-m.altitude,2)local Q=J-F;self.targetDist=a(Q:len())self.angle=-math.rad(getTargetAngle(J))self.isAbove=isDirectlyAbove(F,J,0.3)self.dt=b(system.getActionUpdateDeltaTime(),0.0015,0.5)local R=E.userConfig.landSpeedLow;if self.state==\"TRAVERSING\"then R=ternary(m.inAtmo,d(1080,m.burnSpeedKph-100),200)elseif self.vertical and O>0 then R=E.userConfig.landSpeedHigh end;local S=vec3()if self.state==\"ALTITUDE\"or self.state==\"LANDING\"then if O<0 and m.GrndDist and m.GrndDist<=a(O)then O=m.GrndDist;self.gotoLock=self.movePosAltitude(F,-O)J=self.gotoLock:clone()L=getAltitude(J)K=L end;Q=J-F;self.targetDist=a(Q:len()-G)if self.targetDist<=G or a(O)<=0.1 or(self.takeoff or self.vertical)and self.targetDist<=0.1 or self.landingMode and self.GrndDist and self.GrndDist<=0.2 then if self.vertical or self.takeoff then self.resetMoving()self.switchState()elseif self.state=='LANDING'then self.switchState('LANDED')self.landingMode=false;if l.prevStdMode then l.maneuverMode=false;setThrottle()else self.stopLanding()end elseif self.landingMode then self.switchState('LANDING')else self.switchState('ALIGNING')end else local T=1000;if m.inAtmo and H and tonumber(H.surfaceAverageAltitude)~=nil then T=T+H.surfaceAverageAltitude end;local U=(self.landingMode or O<0)and'worldDown'or'worldUp'local V=AxisLimiter(m,U,T,O)if V and vec3.isvector(V)then S.z=V.z;S=localToWorld(S,m.worldUp,m.wRight,m.wFwd)y=y+S*I*m.gravVert else self.resetMoving()end end elseif self.state==\"ALIGNING\"then if a(self.angle)<=0.0008 then self.travelAltitude=m.altitude;if m.inAtmo then self.travelAltitude=c(m.altitude,E.userConfig.travelAlt)end;self.holdAltitude=self.travelAltitude;self.switchState('TRAVERSING')else if self.angle>1 then self.switchState('ALIGNING')else z=z+self.trimAngle(m)end end elseif self.state==\"TRAVERSING\"then l.altitudeHold=self.targetDist>=50;if l.altitudeHold and not self.holdAltitude then self.holdAltitude=l.holdAltitude end;z=z+self.trimAngle(m)J=self.movePosAltitude(self.gotoLock,m.altitude-self.holdAltitude)self.targetVector=(J-F):normalize()self.isAbove=isDirectlyAbove(F,J,0.3)local W=self.angle>=-math.pi/2 and self.angle<=math.pi/2 and 1 or-1;local X=worldToLocal(F)local Y=worldToLocal(J)self.targetDist=W*getTravelDistance(Y,X,m.body)self.latPID:reset()self.latPID:inject(m.lateralSpeed*self.dt)local Z=self.latPID:get()S=S+m.wRight*Z;if self.targetDist>0 then local V=AxisLimiter(m,'cFwd',R,self.targetDist)if V and vec3.isvector(V)then S.y=V.y;S=localToWorld(S,m.worldUp,m.wRight,m.wFwd)y=y+S*I*m.gravVert else self.resetMoving()end end;if(self.isAbove or self.targetDist<=0.2)and math.abs(m.forwardSpeed)<1 then self.resetFlags()self.prepLanding()self.landingMode=true;self.switchState('LANDING')end end;return y,z end;function self.apply(m)local y=self.thrust;local z=self.angularThrust;self.throttle=ternary(self.alternateCM,m.curThrottle/100,m.curThrottle)local l,E,_=globals,AutoPilot,m.isLanded;local a0,I,a1=l.startup,m.mass,m.constructSpeed;if inputs.direction.x~=0 then y=y+g(inputs.direction.x)*m.wRight*ternary(inputs.direction.x,m.MaxKinematics.Right,m.MaxKinematics.Left)end;if not self.alternateCM then if self.mmbThrottle or inputs.pitch<0 then local a2=ternary(self.mmbThrottle,100,self.throttle)y=y+a2*m.wFwd*m.MaxKinematics.Forward elseif inputs.pitch>0 then y=y-self.throttle*m.wFwd*m.MaxKinematics.Backward end end;if inputs.yaw~=0 then self.scaleRotation()z=z-m.wFwd:cross(m.wRight)*inputs.yaw*self.rotationSpeed end;if inputs.up or inputs.down then if inputs.up then y=y+m.worldUp*m.MaxKinematics.Up*self.IDIntensity end;if inputs.down then y=y-m.worldUp*m.MaxKinematics.Down*self.IDIntensity end end;local a3=inputs.brakeLock or inputs.brake~=0;if a3 then l.altitudeHold=false;if self.mmbThrottle then self.toggleMmb()end;self.resetFlags()local a4=self.brakingFactor*c(1,a1/m.atmoD*1)if inputs.brakeLock then y=-m.wVel*I*c(brakeFlatFactor,0.01)else y=-m.wVel*I*c(a4,a1*a1)end end;if self.holdAltitude<100 then self.holdAltitude=m.altitude end;if not _ then local x=l.altitudeHold and self.holdAltitude>=100 and not(self.landingMode or self.takeoff or self.vertical)y,z=self.applyAltitudeHold(m,x,y,z)end;if self.followGravity then z=z-m.worldUp:cross(m.gravity:normalize())*m.gravity:len()end;if not self.alternateCM and(self.landingMode or self.takeoff or self.vertical)and(inputs.up or inputs.down)then self.resetMoving()end;if self.targetVector==nil then self.gotoLock=nil end;self.angle,self.isAbove=0,false;if E.target~=nil and self.gotoLock==nil then self.angle=-math.rad(getTargetAngle())end;if not a3 then y,z=self.miniPilot(m,y,z)end;if self.landingMode and _ and not l.startup then self.state='LANDED'return end;if self.yawDamp or self.gotoLock==nil then z=z-(m.worldAngularVelocity*3-m.angularAirFriction*3)end;if self.alternateCM and not(a3 or self.landingMode)then local R=self.throttle/3.6;local a5=m.wFwd:dot(m.angularAirFriction)local a6=R-a5;local a7=m.wFwd*a6;y=y+(a7-m.wVel)*I*m.gravVert end;if self.inertialDampening and not a0 and not _ then local S,a8=vec3(),m.velocity;local a9=false;if not(inputs.left or inputs.right)then S.x=a8.x;a9=true end;if not(a3 or inputs.forward or inputs.backward)then if m.inAtmo and m.ySpeedKPH>m.burnSpeedKph-50 then S.y=a8.y*2 elseif l.rotationDampening and inputs.pitch==0 and not(self.mmbThrottle or self.alternateCM or self.state==\"TRAVERSING\")then S.y=a8.y end;a9=true end;if not(self.gotoLock or inputs.up or inputs.down)then if not m.inAtmo and not self.vertical and m.gravVert>9.9 and m.GrndDist and m.GrndDist>=0 and m.GrndDist<10 then S.z=a8.z*1.5 else S.z=a8.z*ternary(self.alternateCM,1,m.atmoD)end;a9=true end;if a9 then S=localToWorld(S,m.worldUp,m.wRight,m.wFwd)y=y-S*m.gravVert*I end end;if not(a0 or _ or self.landingMode or inputs.down)then y=y-m.gravity*I end;y=y/I;if self.controlMode~=unit.getControlMode()then self.controlMode=unit.getControlMode()if self.controlMode==0 then self.resetManeuver()self.alternateCM=false;self.throttle=self.tempThrottle else self.alternateCM=true;self.tempThrottle=self.throttle;self.throttle=round2(m.speedKph,0)end end;local aa=self.priorityTags1;local ab=self.priorityTags2;if not self.landingMode and m.GrndDist and(m.hasvBoosters or m.hasHovers)and(l.boostMode=='all'or l.boostMode=='hybrid')and m.GrndDist>0 and m.GrndDist<m.maxHoverDist then aa=\"brake,airfoil,torque,ground,lateral,longitudinal\"ab=\"\"end;unit.setEngineCommand(\"all\",{y:unpack()},{z:unpack()},false,false,aa,ab,\"\")if a0 and _ then inputs.brakeLock=true;inputs.brake=1 elseif not inputs.brakeLock and a(m.zSpeedKPH)<0.1 then inputs.brake=0 end end;return self end;function setApTarget(ac)AutoPilot:setTarget(ac)end;function gotoTarget(ac,ad,ae)if type(ac)~='table'or not vec3.isvector(ac)then return false end;ship.resetManeuver()if not ad then setApTarget(ac)end;local l,af=globals,ship;l.altitudeHold=false;l.rotationDampening=true;inputs.brakeLock=false;inputs.brake=0;af.travelAltitude=nil;local ag=tonumber(ae)if ag and ag>100 and ag<=10000 then af.travelAltitude=ag;af.holdAltitude=ag end;af.targetVector=(ac-cData.position):normalize()af.gotoLock=ac;return true end;function moveVert(ah)ah=b(ah or 0,-200000,200000)local q=ship.moveWaypointZ(cData,ah)if gotoTarget(q)then local ai=Vec3ToPosString(q)P(\"Moving to: \"..tostring(ai))return true end;return false end;function shipLandingTask(m)if not ship.landingMode then return end;local ah=m.altitude;if m.body then local aj=tonumber(m.body.surfaceAverageAltitude)if m.body.name=='Thades'then ah=ah-13700 end end;local ak=links.antigrav;if ak and ak.isActive()then local q=ak.getBaseAltitude()if q<m.altitude then ah=m.altitude-q end end;if ah<0 and m.altitude==0 then ah=1000 end;if m.GrndDist and m.GrndDist>0 then ah=m.GrndDist end;local q=ship.moveWaypointZ(m,-ah+0.1)gotoTarget(q)ship.landingMode=true end\nend)\npackage.preload['Saga:behaviour/ship.lua']=(function()\nfunction getTargetAngularVelocity(a,b,c)local d,e=globals,AutoPilot;local cData=cData;local f=a*pitchSpeedFactor*cData.wRight+b*rollSpeedFactor*cData.wFwd+c*yawSpeedFactor*cData.worldUp;targetRoll=0;local g=cData.wVert:cross(cData.wFwd):normalize()local h=cData.wVert:cross(-cData.wRight):normalize()if pitchPID2==nil then pitchPID2=pid.new(0.02,0,0.2)rollPID2=pid.new(0.1,0,0.1)yawPID2=pid.new(0.1,0,0.1)end;local i=vec3()if cData.speedKph<100 and(cData.inAtmo or not cData.body.hasAtmosphere and cData.altitude<cData.body.surfaceMaxAltitude+1000)and not e.enabled and e.userConfig.slowFlat then d.aimTarget='Flat'i=cData.wVert:cross(cData.worldUp)+f else i=f end;if cData.wVert:len()>0.01 and unit.getAtmosphereDensity()>0.0 then local j=1.0;if autoRoll==true and cData.currentRollDegAbs>j and b==0 then local k=clamp(0,cData.currentRollDegAbs-30,cData.currentRollDegAbs+30)if rollPID==nil then rollPID=pid.new(autoRollFactor*0.01,0,autoRollFactor*0.1)end;rollPID:inject(k-cData.currentRollDeg)local l=rollPID:get()i=i+l*cData.wFwd end;local m=20.0;if turnAssist and cData.currentRollDegAbs>m and a==0 and c==0 then local n=turnAssistFactor*0.1;local o=turnAssistFactor*0.025;local p=(cData.currentRollDegAbs-m)/(180-m)*180;local q=0;if p<90 then q=p/90 elseif p<180 then q=(180-p)/90 end;q=q*q;local r=-cData.currentRollDegSign*o*(1.0-q)local s=n*q;i=i+s*cData.wRight+r*cData.worldUp end end;if e.enabled or d.altitudeHold or d.orbitalHold then local t=utils.map(clamp(cData.constructSpeed,80,150),80,150,0,1)if e.enabled and cData.constructSpeed>80 then if not cData.inAtmo or d.altitudeHold then targetRoll=0 elseif math.abs(getVelocityTargetAngle())<2 or math.abs(getVelocityTargetAngle())>170 then targetRoll=0 else targetRoll=clamp(getVelocityTargetAngle()*2,-e.userConfig.maxRoll,e.userConfig.maxRoll)*t end end end;if d.orbitalHold or d.apMode=='Orbit'then aimStrength=clamp(aimStrength-0.1,0.2,0.4)d.aimTarget='Orbit Hold'if not d.inOrbit then if cData.altitude<d.holdAltitude and cData.vertSpeed<0 and cData.inAtmo then d.aimTarget='Orbit Atmo Pitch'i=-h:rotate(d.targetPitch*constants.deg2rad,g):cross(cData.wFwd)if d.apMode=='Orbit'then targetAntavgularVelocity=((circleNormal(e.target)):rotate(d.targetPitch*constants.deg2rad,g)):cross(cData.wFwd)end elseif cData.orbitFocus.orbitAltTarget<d.targetOrbitAlt-100 or cData.orbitFocus.orbitAltTarget>d.targetOrbitAlt+100 then d.aimTarget='Orbit Pitch'i=-h:rotate(orbitHold()*constants.deg2rad,g):cross(cData.wFwd)if d.apMode=='Orbit'then i=(circleNormal(e.target)):rotate(orbitHold()*constants.deg2rad,g):cross(cData.wFwd)if math.abs(getVelocityTargetAngle())<30 and math.abs(getVelocityTargetAngle())>1 and cData.constructSpeed>50 then d.aimTarget='Orbit T2'i=variousVectors(circleNormal(e.target)).vecMain:rotate(orbitHold()*constants.deg2rad*1.5,g):cross(cData.wFwd)end end else d.aimTarget='Orbit Flat'i=cData.wVert:cross(cData.worldUp)+cData.wVelDir:cross(-cData.wFwd)if d.apMode=='Orbit'then i=(circleNormal(e.target)):cross(cData.wFwd)if math.abs(getVelocityTargetAngle())<30 and math.abs(getVelocityTargetAngle())>1 then i=variousVectors(circleNormal(e.target)).vecMain:cross(cData.wFwd)+pitchInput2*cData.wRight end end end;if(math.abs(getVelocityTargetAngle())>80 or cData.constructSpeed<10)and d.apMode=='Orbit'then i=((circleNormal(e.target)):project_on_plane(cData.wFwd)):cross(cData.wFwd)+f;i=i+cData.wVert:cross(cData.worldUp)end else i=cData.wVelDir:cross(-cData.wFwd)+f;if d.apMode=='Orbit'then i=(circleNormal(e.target)):cross(cData.wFwd)end end;i=i+-g:rotate(targetRoll*constants.deg2rad,cData.wFwd):cross(cData.wRight)+f;i=vec3{clamp(i.x,-aimStrength,aimStrength),clamp(i.y,-aimStrength,aimStrength),clamp(i.z,-aimStrength,aimStrength)}end;if d.altitudeHold then d.aimTarget='Alt Hold'i=-h:rotate(d.targetPitch*constants.deg2rad,g):cross(cData.wFwd)+f;i=i+-g:rotate(targetRoll*constants.deg2rad,cData.wFwd):cross(cData.wRight)end;if e.enabled then if d.apMode=='agg'then i=(circleNormal(e.target)):cross(cData.wFwd)+cData.wVert:cross(cData.worldUp)end;if d.apMode=='reEntry'or d.apMode=='Space Braking'then d.aimTarget='Target'i=(circleNormal(e.target)):cross(cData.wFwd)+cData.wVert:cross(cData.worldUp)end;if d.apMode=='Atmo Travel'then if math.abs(getTargetAngle())>90 then pitchRotate=0 else pitchRotate=d.targetPitch*constants.deg2rad end;if math.abs(getVelocityTargetAngle())>90 and cData.constructSpeed>50 or cData.constructSpeed<20 then d.aimTarget='TargetFlat'i=((circleNormal(e.target)):project_on_plane(cData.wFwd)):cross(cData.wFwd)i=i+cData.wVert:cross(cData.worldUp)elseif math.abs(getVelocityTargetAngle())<30 and math.abs(getVelocityTargetAngle())>1 and cData.constructSpeed>50 then d.aimTarget='T2'i=variousVectors(circleNormal(e.target)).vecMain:rotate(math.min(pitchRotate*1.5,90),g):cross(cData.wFwd)+pitchInput2*cData.wRight else d.aimTarget='Pitch Target'i=((circleNormal(e.target)):rotate(pitchRotate,g)):cross(cData.wFwd)end;i=i+-g:rotate(targetRoll*constants.deg2rad,cData.wFwd):cross(cData.wRight)end;if sameBody and e.targetLoc=='surface'then if d.brakeTrigger and d.lastProjectedDistance<600 then d.aimTarget='Brake Landing'i=(circleNormal(e.target)):cross(cData.wFwd)i=i/3+vectorToPoint(e.target):cross(-cData.worldUp)if cData.altitude-getAltitude(e.target)<200 or math.abs(getTargetAngle())>90 then d.aimTarget='Flat'i=(circleNormal(e.target)):cross(cData.wFwd)+cData.wVert:cross(cData.worldUp)end;if cData.altitude-getAltitude(e.target)<100 then e:toggleState(false)e:toggleLandingMode(true)end end end;if d.apMode=='Transfer'or e.targetLoc=='space'and not cData.inAtmo or d.apMode=='Space Braking'and(cData.body.bodyId~=e.targetBody.bodyId or vector.dist(cData.position,e.targetBody.center)>200000)then if math.abs(getSpaceVelocityTargetAngle())>60 or cData.speedKph<=3000 and e.targetLoc=='surface'or cData.speedKph<500 and e.targetLoc=='space'then d.aimTarget='Target'i=vectorToPoint(e.target):cross(cData.wFwd)else d.aimTarget='TCross'i=variousVectors(vectorToPoint(e.target)).vecMain:cross(cData.wFwd)end;if cData.inAtmo then i=i+-g:rotate(targetRoll*constants.deg2rad,cData.wFwd):cross(cData.wRight)end end;if spcVector~='ninety'then i=vec3{clamp(i.x,-aimStrength,aimStrength),clamp(i.y,-aimStrength,aimStrength),clamp(i.z,-aimStrength,aimStrength)}+f else i=i+f end end;if d.stallProtect and cData.constructSpeed>55 and not d.brakeTrigger then d.aimTarget='Stall Protect'i=-cData.wVelDir:cross(cData.wFwd)+f;i=i+-g:rotate(targetRoll*constants.deg2rad,cData.wFwd):cross(cData.wRight)end;if d.radialOut then i=cData.wVert:cross(cData.wFwd)i=vec3{clamp(i.x,-aimStrength,aimStrength),clamp(i.y,-aimStrength,aimStrength),clamp(i.z,-aimStrength,aimStrength)}+f elseif d.radialIn then i=cData.wVert:cross(-cData.wFwd)i=vec3{clamp(i.x,-aimStrength,aimStrength),clamp(i.y,-aimStrength,aimStrength),clamp(i.z,-aimStrength,aimStrength)}+f elseif d.cameraAim then if cData.inAtmo then i=vec3(system.getCameraWorldForward()):cross(-cData.wFwd)i=i+-g:rotate(targetRoll*constants.deg2rad,cData.wFwd):cross(cData.wRight)i=vec3{clamp(i.x,-aimStrength,aimStrength),clamp(i.y,-aimStrength,aimStrength),clamp(i.z,-aimStrength,aimStrength)}else i=vec3(system.getCameraWorldForward()):cross(-cData.wFwd)i=vec3{clamp(i.x,-aimStrength,aimStrength),clamp(i.y,-aimStrength,aimStrength),clamp(i.z,-aimStrength,aimStrength)}end end;if d.followMode then i=(circleNormal(playerData.playerPosition)):cross(cData.wFwd)i=i+-g:rotate(targetRoll*constants.deg2rad,cData.wFwd):cross(cData.wRight)end;targetAngularVelocity=i;return targetAngularVelocity end;function applyEngineCommands(targetAngularVelocity,u,v)local d,w,e=globals,Axis,AutoPilot;local x=true;local y=false;local z=1;Nav:setEngineTorqueCommand('torque',u,x,'airfoil','','',z)Nav:setEngineForceCommand('brake',v)local A=''local B=vec3()local C=false;local D='secondary'local E='tertiary'local F='thrust analog longitudinal'local G='thrust analog lateral'local H='thrust analog vertical'local I='vertical airfoil'local J='lateral airfoil'local K=navCom:getAxisCommandType(axisCommandId.longitudinal)==axisCommandType.byTargetSpeed;local L=navCom:getAxisCommandType(axisCommandId.lateral)==axisCommandType.byTargetSpeed;local M=navCom:getAxisCommandType(axisCommandId.vertical)==axisCommandType.byTargetSpeed;if K then A=F;B=B+navCom:composeAxisAccelerationFromTargetSpeed(axisCommandId.longitudinal)else if w.throttle1Axis~=0 then navCom:setThrottleCommand(axisCommandId.longitudinal,w.throttle1Axis)end;local N=navCom:composeAxisAccelerationFromThrottle(F,axisCommandId.longitudinal)if(cData.atmoDensity>=0.1 and d.advAtmoEngines or not cData.inAtmo and d.advSpaceEngines or d.advSpaceEngines and d.advAtmoEngines)and cData.curThrottle>0 then local O=ternary(cData.inAtmo,1,3)if d.boostMode=='primary'then Nav:setEngineForceCommand(D..' , '..E,vec3(),x)unit.setEngineThrust('primary',d.maxPrimaryKP[O]*cData.curThrottle)elseif d.boostMode=='all'then Nav:setEngineForceCommand(F,N,x)elseif d.boostMode=='locked'then Nav:setEngineForceCommand(D..' , '..E,N,x)unit.setEngineThrust('primary',d.maxPrimaryKP[O])elseif d.boostMode=='hybrid'then local P=0;local Q=0;local R=0;local S=0;local T=0;local U=0;local V=0;if cData.inAtmo and d.maxTertiaryKP[1]>0 or not cData.inAtmo and d.maxTertiaryKP[3]>0 then local umap=utils.map;S=cData.curThrottle*3.9;T=umap(clamp(S,300,330),300,330,0,30)/100;U=umap(clamp(S,330,360),330,360,0,30)/100;V=umap(clamp(S,360,390),360,390,0,30)/100;P=umap(clamp(S,0,100),0,100,0,70)/100+T;Q=umap(clamp(S,100,200),100,200,0,70)/100+U;R=umap(clamp(S,200,300),200,300,0,100)/100+V else S=cData.curThrottle*2.6;T=umap(clamp(S,200,230),200,230,0,30)/100;U=umap(clamp(S,230,260),230,260,0,30)/100;P=umap(clamp(S,0,100),0,100,0,70)/100+T;Q=umap(clamp(S,100,200),100,200,0,70)/100+U end;unit.setEngineThrust('primary',d.maxPrimaryKP[O]*P)unit.setEngineThrust('secondary',d.maxSecondaryKP[O]*Q)unit.setEngineThrust('tertiary',d.maxTertiaryKP[O]*R)end else Nav:setEngineForceCommand(F,N,x)end end;if L then if d.lateralState then A=A..' , '..G else Nav:setEngineForceCommand(G,vec3(),y,'','','',z)B=B+navCom:composeAxisAccelerationFromTargetSpeed(axisCommandId.lateral)end else local N=navCom:composeAxisAccelerationFromThrottle(G,axisCommandId.lateral)if not d.lateralState then N=vec3()end;Nav:setEngineForceCommand(G,N,x)if e.enabled and cData.inAtmo then local g=cData.wVert:cross(cData.wFwd):normalize()local W=vec3()local X=getVelocityTargetAngle()if X<0 then W=-g*20 elseif X>0 then W=g*20 end;Nav:setEngineForceCommand(J,W,x,'','','',z)end end;if M then if d.verticalState or d.waterState then A=A..' , '..H else Nav:setEngineForceCommand(H,vec3(),y,'','','',z)end;B=B+navCom:composeAxisAccelerationFromTargetSpeed(axisCommandId.vertical)else local N=navCom:composeAxisAccelerationFromThrottle(H,axisCommandId.vertical)if not d.verticalState and not d.waterState then N=vec3()end;Nav:setEngineForceCommand(H,N,x,'airfoil','ground','',z)if e.enabled and cData.inAtmo or d.altitudeHold or d.orbitalHold and cData.inAtmo then local Y=cData.wVert*20;if d.apMode=='Landing'then Nav:setEngineForceCommand(I,Y,x,'airfoil','','',z)elseif cData.altitude<d.holdAltitude or cData.vertSpeed<-10 then Nav:setEngineForceCommand(I,-Y,x,'airfoil','','',z)elseif d.orbitalHold and cData.inAtmo then Nav:setEngineForceCommand(I,-Y,x,'airfoil','','',z)else Nav:setEngineForceCommand(I,-cData.wVert*5,x,'airfoil','','',z)end end end;if navCom:getTargetSpeed(axisCommandId.longitudinal)==0 or navCom:getTargetSpeed(axisCommandId.longitudinal)<cData.speedKph-10 then C=true end;if B:len()>constants.epsilon then if inputs.brake~=0 or C or math.abs(cData.wVelDir:dot(cData.wFwd))<0.95 then A=A..', brake'end;navCom:updateCommandFromActionLoop(axisCommandId.longitudinal,0)Nav:setEngineForceCommand(A,B,y,'','','',z)end;Nav:setBoosterCommand('rocket_engine')end;function validateParms()local Z=math.max;pitchSpeedFactor=Z(pitchSpeedFactor,0.01)yawSpeedFactor=Z(yawSpeedFactor,0.01)rollSpeedFactor=Z(rollSpeedFactor,0.01)torqueFactor=Z(torqueFactor,0.01)brakeSpeedFactor=Z(brakeSpeedFactor,0.01)brakeFlatFactor=Z(brakeFlatFactor,0.01)autoRollFactor=Z(autoRollFactor,0.01)turnAssistFactor=Z(turnAssistFactor,0.01)end;function applyShipInputs()local e,w,d=AutoPilot,Axis,globals;local a=inputs.pitch+w.pitchAxis+system.getControlDeviceForwardInput()local b=inputs.roll+w.rollAxis+system.getControlDeviceYawInput()local c=inputs.yaw+w.yawAxis-system.getControlDeviceLeftRightInput()local _=inputs.brake+w.brakeAxis;local targetAngularVelocity=getTargetAngularVelocity(a,b,c)local u=torqueFactor*(targetAngularVelocity-cData.worldAngularVelocity)u=u-cData.angularAirFriction;local v=-_*(brakeSpeedFactor*cData.wVel+brakeFlatFactor*cData.wVelDir)if not d.rotationDampening then if inputs.pitch==0 and inputs.yaw==0 and inputs.roll==0 then u=vec3()end end;if d.inOrbit and d.orbitalHold and not d.brakeTrigger then local a0=clamp((orbitFocus().orbitAltTarget-d.targetOrbitAlt)*0.0001*4,0.01,5)v=vec3(clamp(v.x,-a0,a0),clamp(v.y,-a0,a0),clamp(v.z,-a0,a0))end;if e.enabled and(brakeCtrl==12.1 or brakeCtrl==13.1 or brakeCtrl==0.1 and cData.zSpeedKPH>-100)and cData.speedKph<cData.burnSpeedKph-50 then local a1=2;v=vec3(clamp(v.x,-a1,a1),clamp(v.y,-a1,a1),clamp(v.z,-a1,a1))end;if e.landingMode then v=v*9 elseif d.altitudeHold then v=-inputs.brake*cData.wFwd*(cData.forwardSpeed+cData.lateralSpeed)*3.6 end;applyEngineCommands(targetAngularVelocity,u,v)end\nend)\npackage.preload['Saga:data/aggData.lua']=(function()\nfunction getAggData()local a=links.antigrav;if a==nil then return{aggState=false,aggStrength=0,aggRate=0,aggPower=0,aggPulsor=6,aggTarget=1000,aggAltitude=1000,aggBubble=false}end;local b=false;local c=cData.altitude;local d=a.getBaseAltitude()b=a.isActive()and c>d-100 and c<d+100;return{aggState=a.isActive(),aggStrength=a.getFieldStrength(),aggRate=a.getCompensationRate(),aggPower=a.getFieldPower(),aggPulsor=a.getPulsorCount(),aggTarget=round2(a.getTargetAltitude(),2),aggAltitude=round2(d,2),aggBubble=b}end\nend)\npackage.preload['Saga:data/config.lua']=(function()\nConfig=(function()local a={}a.config={}a.dynamicIndicator='_'a.defaults={}a.dbDataKey=nil;a.databank=nil;a.databanks=nil;function a:init(b,c,d)a.dbDataKey=c;a.dbActiveKey=d;a.databanks=b;local e=0;for f,g in ipairs(b)do if a.databank==nil then a.databank=g end;local h=g.getKeyList()if table.contains(a.dbActiveKey,h)then a.databank=g;e=2 elseif table.contains(a.dbDataKey,h)and e<2 then a.databank=g;e=1 end end;a:cleanNonActives()a:load()end;function a:selectDb(g)a:prepareForMigration()if a.databank~=nil then a.databank.clearValue(a.dbActiveKey)a:save(false)end;a.databank=g;a.databank.setIntValue(a.dbActiveKey,1)a:load()a:migrate()a:save()EventSystem:trigger('ConfigDBChanged')end;function a:getValue(i,j)if i==nil then P('Config:getValue(nil) error')return end;if a.config[i]~=nil then return a.config[i]end;if a.defaults[i]~=nil then return a.defaults[i]end;return j end;function a:getDynamicValue(i,j)return a:getValue(a.dynamicIndicator..i,j)end;function a:setValue(i,k,l)a:set(i,k,l)end;function a:setDynamicValue(i,k,l)a:set(a.dynamicIndicator..i,k,l)end;function a:set(i,k,l)if l==nil then l=true end;a.config[i]=k;if l then a:save()end;EventSystem:trigger('ConfigChange')EventSystem:trigger('ConfigChange'..i)end;function a:save(m)if a.databank==nil then return end;if m==nil then m=true end;local n={}for i,k in pairs(a.config)do if m or i:find(a.dynamicIndicator)==nil then n[i]=k end end;local o=serialize(n)a.databank.setStringValue(a.dbDataKey,o)end;function a:load()if a.databank==nil then return end;local p=a.databank.getStringValue(a.dbDataKey)if p==''then return end;local q,r=load('return '..p)if q==nil then P('Error loading config from databank, resetting to default!')P(p)P(r)a.databank.clearValue(a.dbDataKey)else a.config=q()end end;function a:prepareForMigration()local s={}for i,k in pairs(a.config)do local t=i:find(a.dynamicIndicator)~=nil;if t then s[i]=k end end;a.migrationArk=s end;function a:migrate()for i,k in pairs(a.migrationArk)do a.config[i]=k end end;function a:cleanNonActives()for u,g in pairs(a.databanks)do if g~=a.databank then g.clearValue(a.dbActiveKey)end end end;function a:cleanDb(g)local h=g.getKeyList()for u,v in ipairs(h)do if v~=a.dbDataKey and v~=a.dbActiveKey then g.clearValue(v)end end end;return a end)()\nend)\npackage.preload['Saga:data/configDatabankMap.lua']=(function()\nconfigDatabankMap={apState='ap',autoAGGAdjust='ag',currentTarget='cd',hoverHeight='hh',hudScale='hs',landingMode='lm',mainMenuVisible='mv',maneuverMode='mm',maxPitch='mp',maxRoll='mr',maxSpaceSpeed='ms',menuKeyLegend='mk',radarBoxes='rb',radarWidget='rw',routeDatabankName='rd',shieldManage='sm',slowFlat='sf',soundEnabled='se',spaceCapableOverride='sc',throttleBurnProtection='bp',unitWidgetVisible='uv',usbDatabankName='ud',wingStallAngle='ws',agl='al',coreWidget='cw',dockMode='dm',dockWidget='dw',landSpeedHigh='mls',landSpeedLow='mll',travelAlt='tra',base='bas'}\nend)\npackage.preload['Saga:data/coroutine.lua']=(function()\nCoroutine={func=nil,coroutine=nil}function Coroutine:new(a)local b={}setmetatable(b,self)self.__index=self;b.func=a;return b end;function Coroutine:resume()local c='dead'if self.coroutine~=nil then c=coroutine.status(self.coroutine)end;if c=='suspended'then coroutine.resume(self.coroutine)elseif c=='dead'then self.coroutine=coroutine.create(self.func)coroutine.resume(self.coroutine)end end\nend)\npackage.preload['Saga:data/constructData.lua']=(function()\nfunction getConstructData(a,b)local c,d,e,f,g,h=globals,AutoPilot,constants.rad2deg,math.abs,math.atan,utils.sign;local i=vec3(a.getWorldVelocity())local j=vec3(a.getWorldOrientationForward())local k=vec3(a.getWorldOrientationUp())local l=vec3(a.getWorldOrientationRight())local m=vec3(b.getWorldVertical())local n=vec3(a.getWorldPosition())local o=getRoll(m,j,l)local p,q={j:unpack()},{m:unpack()}local r=vec3(library.systemResolution3({l:unpack()},p,{k:unpack()},q))local s=vec3(library.systemResolution3({(m:cross(j)):unpack()},p,q,{vec3(0,0,1):unpack()}))if r:len()==0 then r=vec3(0,0,1)end;if s:len()==0 then s=vec3(0,0,1)end;local t={locGrav=r,locVert=s,yaw=g(-s.x,s.y)*e%360,pitch=180-g(r.y,r.z)*e,wVert=m,worldUp=k,worldDown=-k,wRight=l,worldLeft=-l,wFwd=j,worldBack=-j,wVel=i,wVelDir=i:normalize(),wVelAbs=vec3(a.getWorldAbsoluteVelocity()),worldAcceleration=vec3(a.getWorldAcceleration()),worldAngularVelocity=vec3(a.getWorldAngularVelocity()),worldAngularAcceleration=vec3(a.getWorldAngularAcceleration()),worldAirFriction=vec3(a.getWorldAirFrictionAcceleration()),curThrottle=unit.getThrottle(),acceleration=vec3(a.getAcceleration()),angularAirFriction=vec3(a.getWorldAirFrictionAngularAcceleration()),angularVelocity=vec3(a.getAngularVelocity()),velocity=vec3(a.getVelocity()),velocityDir=vec3(a.getVelocity()):normalize(),velocityAbs=vec3(a.getAbsoluteVelocity()),mass=a.getTotalMass(),constructSpeed=i:len(),currentRollDeg=o,currentRollDegAbs=f(o),currentRollDegSign=h(o),forwardSpeed=i:dot(j),lateralSpeed=i:dot(-l),vertSpeed=i:dot(-m),position=n,atmoDensity=round2(unit.getAtmosphereDensity()or 0,2),burnSpeed=a.getFrictionBurnSpeed(),maxSpeed=a.getMaxSpeed(),G=b.getGravityIntensity(),gravity=vec3(b.getWorldGravity()),gravityDir=vec3(b.getWorldGravity()):normalize(),currentBrake=a.getCurrentBrake(),pvpTimer=a.getPvPTimer(),pvpZone=a.isInPvPZone(),body=findClosestBody(n),nearPlanet=unit.getClosestPlanetInfluence()>0,rpy=getRPY(j,k,l,m,i),GrndDist=nil,hasvBoosters=links.vBoosterCount>0,hasHovers=links.hoverCount>0,telemeter=links.telemeter,hasTelemeter=links.telemeter~=nil and true,telemDist=nil,maxHoverDist=nil,warpOn=a.isWarping(),cFwd=vec3(a.getForward()),cBack=-vec3(a.getForward())}t.currentRollDegAbs=f(t.currentRollDeg)t.currentRollDegSign=h(t.currentRollDeg)t.altitude=getAltitude(n)t.hasGndDet=t.hasTelemeter or t.hasvBoosters or t.hasHovers;if t.hasGndDet then if t.hasTelemeter then local u=t.telemeter.raycast()if u.hit then t.telemDist=u.distance end end;if t.hasHovers and t.atmoDensity>0.1 then for v,w in ipairs(links.hovers)do if type(w.getMaxDistance)=='function'then t.maxHoverDist=math.max(t.maxHoverDist or 0,w.getMaxDistance())local x=w.getDistance()if x>=0.01 and(not t.GrndDist or x<t.GrndDist)then t.GrndDist=x end end end end;if t.hasvBoosters then for v,w in ipairs(links.vboosters)do if type(w.getMaxDistance)=='function'then t.maxHoverDist=math.max(t.maxHoverDist or 0,w.getMaxDistance())local x=w.getDistance()if x>=0.01 and(not t.GrndDist or x<t.GrndDist)then t.GrndDist=x end end end end end;t.aboveWater=false;if t.GrndDist or t.telemDist then t.aboveWater=t.telemDist and t.GrndDist and t.telemDist>t.GrndDist or false;t.GrndDist=max(t.telemDist or 0,t.GrndDist or 0)if d.userConfig.agl then t.GrndDist=t.GrndDist-d.userConfig.agl end;t.GrndDist=round2(t.GrndDist or 0,2)end;t.inAtmo=t.atmoDensity>0;local y=a.getMaxThrustAlongAxis(\"all\",{vec3(0,1,0):unpack()})local z=a.getMaxThrustAlongAxis(\"all\",{vec3(0,0,1):unpack()})local A=a.getMaxThrustAlongAxis(\"fueled thrust ground vertical\",{vec3(0,0,1):unpack()})local B=a.getMaxThrustAlongAxis(\"fueled thrust booster_engine vertical\",{vec3(0,0,1):unpack()})local C=a.getMaxThrustAlongAxis(\"fueled thrust atmo vertical\",{vec3(0,0,-1):unpack()})local D=a.getMaxThrustAlongAxis(\"fueled thrust space_engine vertical\",{vec3(0,0,-1):unpack()})local E=a.getMaxThrustAlongAxis(\"all\",{vec3(1,0,0):unpack()})local F=0;if t.atmoDensity<0.1 then F=2 end;t.gravMass=t.mass*t.G;t.gravLong=t.gravity:dot(j)t.gravLat=t.gravity:dot(-l)t.gravVert=t.gravity:dot(-k)local G=vec3(library.systemResolution3({t.wRight:unpack()},{t.wFwd:unpack()},{t.worldUp:unpack()},{vec3(t.gravity*t.mass):unpack()}))t.MaxKinematics={Forward=math.abs(y[1+F]+G.y),Backward=math.abs(y[2+F]-G.y),Up=math.abs(z[1+F]+G.z),UpGroundAtmo=math.abs(A[1]+G.z),UpGroundSpace=math.abs(B[3]+G.z),DownAtmo=math.abs(C[2]+G.z),DownSpace=math.abs(D[4]+G.z),Down=math.abs(z[2+F]-G.z),Right=math.abs(E[1+F]+G.x),Left=math.abs(E[2+F]-G.x)}if t.atmoDensity>=0.01 and t.atmoDensity<0.1 then t.MaxKinematics.Forward=math.abs(y[1]+y[3]+G.y)end;if c.maxBrake and c.maxBrake>1 then t.maxBrake=c.maxBrake end;local H=13888.889;local I=t.constructSpeed;t.velMag=t.wVelAbs:len()t.vtolCapable=t.MaxKinematics.Up>t.mass*t.G;t.ySpeedKPH=t.forwardSpeed*3.6;t.xSpeedKPH=t.lateralSpeed*3.6;t.zSpeedKPH=t.vertSpeed*3.6;t.burnSpeedKph=t.burnSpeed*3.6;t.speedKph=I*3.6;t.brakes=getBrakes(t)t.orbitalParameters=getOrbitalParameters(t)t.orbitFocus=getOrbitFocus(t)t.axisAccel=getAccAllAxes(t)t.isLanded=tonumber(t.GrndDist)~=nil and t.GrndDist<0.5 and t.speedKph<1;t.atmoD=ternary(t.atmoDensity>0.1,t.atmoDensity,1)t.counterGravForce=-(t.mass*r:dot(t.wFwd))return t end;function getAccAllAxes(J,K)local L=J.wFwd:normalize()local M=J.wRight:normalize()local N=J.wVert:normalize()K=K or J.acceleration;local O=L*K:dot(L)local P=M*K:dot(M)local Q=N*K:dot(-N)return vec3(O,P,Q)end;function getBrakes(J)local R=J.maxBrake or 5000000;if J.inAtmo then R=R/clamp(J.constructSpeed/100,0.1,1)end;local H=50000*2000/3600;local S=H*H;local T=J.constructSpeed;if T<0.2 then return{distance=0,distKM=0,distSU=0,time_s=\"00m:00s\"}end;local U=R*-1/J.mass;local x,V=0,0;local W=H*math.asin(T/H)local X=S*math.cos(W/H)/U;local Y=(H*math.asin(0/H)-W)/U;local Z=X-S*math.cos((U*Y+W)/H)/U;x=x+Z;V=V+Y;local _=floor(V/60)V=V-60*_;local a0=floor(V+0.5)local a1='00'..a0;local a2=a1:sub(-2,-1)local a3='00'.._;local a4=a3:sub(-2,-1)local a5=a4 ..':'..a2;local a6=floor(x)/1000;local a7=floor(a6)/200;return{distance=round2(x or 0),distKM=a6,distSU=a7,time_s=a5}end;function getRPY(a8,a9,aa,ab,ac)local ad=0;if ac:len()>=20 then ad=-math.deg(signedRotationAngle(a9,ac,a8))end;return{roll=getRoll(ab,a8,aa),pitch=getPitch(ab,a8,aa),yaw=ad}end;function getPitch(ae,a8,aa)local af=ae:cross(aa):normalize_inplace()local ag=acos(clamp(af:dot(-a8),-1,1))if af:cross(-a8):dot(aa)<0 then ag=-ag end;return ag*constants.rad2deg end;function getRoll(ae,a8,aa)local ah=ae:cross(a8):normalize_inplace()local ai=acos(clamp(ah:dot(aa),-1,1))if ah:cross(aa):dot(a8)<0 then ai=-ai end;return ai*constants.rad2deg end;function getThrottle(aj,ak)local al=cData.speedKph-20;if aj==nil then aj=cData.burnSpeedKph-100 end;if ak~=nil then al=ak*3.6-20 end;local am=aj-al;local an=200;return clamp((utils.smoothstep(am,-an,an)-0.5)*2,0,100)end;function getGravity(ao,ap)if ao==nil then return 0 end;local aq=ao.center-vec3(ap)local ar=aq:len2()return ao.GM/ar*aq/math.sqrt(ar)end;function setThrottle(as,at,au)if unit.getControlMode()>0 then unit.cancelCurrentControlMasterMode()end;navCom:setTargetSpeedCommand(axisCommandId.longitudinal,0)navCom:resetCommand(0)navCom:resetCommand(1)navCom:setThrottleCommand(0,as or 0)navCom:setThrottleCommand(1,at or 0)navCom:setThrottleCommand(2,au or 0)Nav:update()end\nend)\npackage.preload['Saga:data/eventSystem.lua']=(function()\nEventSystem=(function()local a={}a.events={}function a:register(b,c,d)if a.events[b]==nil then a.events[b]={}end;table.insert(a.events[b],{func=c,arg=d})end;function a:trigger(b)if a.events[b]~=nil then for e,f in ipairs(a.events[b])do f.func(f.arg)end end end;return a end)()\nend)\npackage.preload['Saga:data/playerData.lua']=(function()\nfunction getPlayerData()return{playerPosition=vec3(player.getWorldPosition()),playerFrozen=player.isFrozen(),playerSeated=player.isSeated(),playerVelocity=vec3(player.getWorldVelocity())}end\nend)\npackage.preload['Saga:data/radar.lua']=(function()\nRadar=(function()local a={}a.contacts={}a.contactsById={}a.coroutines={}a.radar=nil;a.radars={}a.panelId=nil;a.widgetId=nil;a.dataId=nil;function a:init(b)a.radars=b;a:updateActiveRadar()Config.defaults[configDatabankMap.radarBoxes]=true;Config.defaults[configDatabankMap.radarWidget]=radarOn;a.contactCounts={[ContactTypeENUM.abandoned]=0,[ContactTypeENUM.dynamic]=0,[ContactTypeENUM.static]=0}a.nearestContacts={[ContactTypeENUM.abandoned]={},[ContactTypeENUM.dynamic]={},[ContactTypeENUM.static]={}}a.radarTestList={}a.radarDynamic={}a.radarSpace={}a.radarStatic={}a.radarAbandoned={}a.radarFriend={}a.radarAlien={}EventSystem:register('ConfigDBChanged',a.applyConfig,a)a:applyConfig()end;function a:applyConfig()a:toggleBoxes(Config:getValue(configDatabankMap.radarBoxes))a:toggleWidget(Config:getValue(configDatabankMap.radarWidget))end;function a:update()if a.boxesVisible then for c,d in ipairs(a.coroutines)do d:resume()end end;a:radarConstructsTest()a:updateActiveRadar()end;function a:updateActiveRadar()if a.radar~=nil then if a.radar.getOperationalState()==1 then return else a.radar=nil end end;for c,e in pairs(a.radars)do if e.getOperationalState()==1 and e~=a.radar then a.radar=e;if a.widgetId~=nil then system.removeDataFromWidget(a.dataId,a.widgetId)a.dataId=a.radar.getWidgetDataId()system.addDataToWidget(a.dataId,a.widgetId)end end end end;function a:toggleBoxes(f)if f==nil then f=not a.boxesVisible end;a.boxesVisible=f;Config:setValue(configDatabankMap.radarBoxes,a.boxesVisible)end;function a:toggleWidget(f)if a.radar==nil then return end;if f==nil then f=a.widgetId==nil end;if a.widgetId~=nil then system.destroyWidget(a.widgetId)system.destroyWidgetPanel(a.panelId)a.widgetId=nil end;if f then a.panelId=system.createWidgetPanel(\"RADAR\")a.widgetId=system.createWidget(a.panelId,\"radar\")a.dataId=a.radar.getWidgetDataId()system.addDataToWidget(a.dataId,a.widgetId)end;Config:setValue(configDatabankMap.radarWidget,f)end;function a:radarConstructsTest()if a.radar==nil then return end;a.radarTestList=a.radar.getConstructs(0,1,nil,nil,nil,nil,nil)a.radarDynamic=a.radar.getConstructs(0,0,{['constructKind']=5})a.radarSpace=a.radar.getConstructs(0,0,{['constructKind']=6})a.radarStatic=a.radar.getConstructs(0,0,{['constructKind']=4})a.radarAbandoned=a.radar.getConstructs(0,0,{['isAbandoned']=true})a.radarFriend=a.radar.getConstructs(0,0,{['isMatching']=true})a.radarAlien=a.radar.getConstructs(0,0,{['constructKind']=7})end;function a:scanForNewContacts()if a.radar==nil then return end;local g=a.radar.getConstructIds()local h=0;if#g>2500 then return end;for c,i in ipairs(g)do if a.contactsById[i]==nil then local j={}j.id=i;j.name=a.radar.getConstructName(i)j.size=a.radar.getConstructSize(i)j.kind=a.radar.getConstructKind(i)j.distance=a.radar.getConstructDistance(i)j.coreSize=a.radar.getConstructCoreSize(i)j.isAbandoned=a.radar.isConstructAbandoned(i)==1;j.getThreatRateFrom=a.radar.getThreatRateFrom(i)a.contacts[#a.contacts+1]=j;a.contactsById[j.id]=j;h=h+1;if h%10==0 then coroutine.yield()end end;if c%50==0 then coroutine.yield()end end end;return a end)()ContactTypeENUM={static='static',dynamic='dynamic',abandoned='abandoned'}\nend)\npackage.preload['Saga:data/routeDatabase.lua']=(function()\nRouteDatabase=(function()local a={}a.dbDataKey=nil;a.databank=nil;a.databanks=nil;a.usbDatabank=nil;a.routes={}a.currentEditId=nil;function a:init(b,c)a.dbDataKey=c;a.databanks=b;EventSystem:register('ConfigDBChanged',a.applyConfig,a)a:applyConfig()end;function a:applyConfig()for d,e in pairs(a.databanks)do e.name=links.core.getElementNameById(e.id)end;a.databank=nil;local f=0;local g=Config:getValue(configDatabankMap.routeDatabankName)if g~=nil then for d,e in pairs(a.databanks)do if e.name==g then a.databank=e;f=3;break end end end;if a.databank==nil then for d,e in pairs(a.databanks)do if a.databank==nil then a.databank=e end;local h=e.getKeyList()if table.contains(a.dbDataKey,h)and f<=1 then a.databank=e;f=1 end end end;local i=Config:getValue(configDatabankMap.usbDatabankName)if i~=nil then for d,e in pairs(a.databanks)do if e.name==i then a.usbDatabank=e;break end end end;a:load()end;function a:selectDb(e)a.databank=e;local j=links.core.getElementNameById(a.databank.id)Config:setValue(configDatabankMap.routeDatabankName,j)a:load()end;function a:selectUsbDb(e)a.usbDatabank=e;local j=links.core.getElementNameById(a.usbDatabank.id)Config:setValue(configDatabankMap.usbDatabankName,j)end;function a:save()EventSystem:trigger('RoutesUpdated')if a.databank==nil then return end;a.databank.setStringValue(a.dbDataKey,serialize(a.routes))end;function a:load()if a.databank==nil then return end;a.routes={}local k=a.databank.getStringValue(a.dbDataKey)if k~=''then local l,m=load('return '..k)if l==nil then P('[E] Error loading routes from databank!')P(k)P(m)else local n=l()if n~=nil then a.routes=n;table.sort(a.routes,function(o,p)return o.name<p.name end)end end end;EventSystem:trigger('RoutesUpdated')end;function a:beforeRoutesChanged()if a.currentEditId~=nil then a.shouldFindEdit=true;a.routes[a.currentEditId].edit=true end;if AutoPilot.currentRouteIndex~=nil then a.shouldFindActive=true;a.routes[AutoPilot.currentRouteIndex].active=true end end;function a:routesChanged()local q,r=false,false;table.sort(a.routes,function(o,p)return o.name<p.name end)for s,t in ipairs(a.routes)do if t.fresh==true then t.fresh=nil;a.currentEditId=s end;if t.edit==true then t.edit=nil;a.currentEditId=s;q=true end;if t.active==true then t.active=nil;AutoPilot.currentRouteIndex=s;r=true;Config:setDynamicValue(configDatabankMap.currentTarget,{AutoPilot.currentRouteIndex,AutoPilot.currentPointIndex,a.databank.name})end end;if a.shouldFindEdit and not q then a.currentEditId=nil end;if a.shouldFindActive and not r then AutoPilot:onRouteUnloaded()end;a.shouldFindEdit=false;a.shouldFindActive=false;a:save()end;function a:newRoute()local t={name='Route '..#a.routes+1,points={},fresh=true}a:beforeRoutesChanged()table.insert(a.routes,t)a:routesChanged()return t end;function a:addPoint(u,v)table.insert(a.routes[u].points,v)a:save()end;function a:deleteRoute(u)a:beforeRoutesChanged()table.remove(a.routes,u)a:routesChanged()end;function a:deletePoint(w,x)if a.routes[w]==nil then return end;if a.routes[w].points==nil then return end;if a.routes[w].points[x]==nil then return end;if AutoPilot.currentRouteIndex==w and AutoPilot.currentPointIndex>=x then AutoPilot.currentPointIndex=AutoPilot.currentPointIndex-1 end;table.remove(a.routes[w].points,x)a:save()end;function a:renameRoute(u,y)if a.routes[u]==nil then return end;a:beforeRoutesChanged()a.routes[u].name=y;a:routesChanged()end;function a:renamePoint(z,A,y)if a.routes[z]==nil then return end;if a.routes[z].points==nil then return end;if a.routes[z].points[A]==nil then return end;a.routes[z].points[A].name=y;a:save()end;function a:movePoint(w,B,C)if a.routes[w]==nil or a.routes[w].points==nil then return end;local D=#a.routes[w].points;local v=table.remove(a.routes[w].points,B)C=clamp(C,1,D)table.insert(a.routes[w].points,C,v)local E=AutoPilot;if E.currentRouteIndex==w then local F=E.currentPointIndex;if F==B then E.currentPointIndex=C elseif F==C then E.currentPointIndex=B end end;a:save()return C end;function a:getRoutePointCount(G)local t=a.routes[G]if t==nil or t.points==nil then return 0 end;return#t.points end;function a.getPoint(G,H)local t=a.routes[G]if t==nil or t.points==nil then return end;local I=t.points;if I==nil or I[H]==nil then return end;return I[H]end;function a:getPointCoordinates(G,H)local v=a.getPoint(G,H)if v==nil then return nil end;local J,K=0,0;if tonumber(v.systemId)~=nil and v.systemId>0 then J=v.systemId end;if tonumber(v.bodyId)~=nil and v.bodyId>0 then K=v.bodyId end;local L=mapPosToWorldPos({latitude=v.coordinates.x,longitude=v.coordinates.y,altitude=v.coordinates.z,bodyId=K,systemId=J})return L end;function a:getPointPosString(G,H)local v=a.getPoint(G,H)if v==nil then return nil end;local J,K=0,0;if tonumber(v.systemId)~=nil then J=v.systemId end;if tonumber(v.bodyId)~=nil then K=v.bodyId end;local M=v.coordinates;local N=table.concat({J,K,M.x,M.y,M.z},',')return'::pos{'..N..'}'end;function a:getDatabankName()return ternary(a.databank==nil,nil,a.databank.name)end;return a end)()\nend)\npackage.preload['Saga:data/tankData.lua']=(function()\ntankData={fuelStr='Loading',sizes={['atmo']={['xs']={35.03,100},['s']={182.67,400},['m']={988.67,1600},['l']={5480,12800}},['space']={['xs']={35.03,100},['s']={182.67,400},['m']={988.67,1600},['l']={5480,12800}},['rocket']={['xs']={173.42,400},['s']={886.72,800},['m']={4720,6400},['l']={25740,50000}}},maxHps={['atmo']={['xs']=50,['s']=163,['m']=1315,['l']=10461},['space']={['xs']=50,['s']=187,['m']=1496,['l']=15933},['rocket']={['xs']=366,['s']=736,['m']=6231,['l']=68824}},types={['atmospheric fuel tank']='atmo',['space fuel tank']='space',['rocket fuel tank']='rocket'}}function initializeTanks()local tankData=tankData;local a=(100-5*fuelTankOptimization)/100-1;local b=(100-5*containerOptimization)/100-1;fuelWeights={['atmo']=4-4*(math.abs(a)+math.abs(b)),['space']=6-6*(math.abs(a)+math.abs(b)),['rocket']=0.8-0.8*(math.abs(a)+math.abs(b))}local c=system.getArkTime()fuels={['atmo']={},['space']={},['rocket']={}}elemIDs=links.core.getElementIdList()for d=1,#elemIDs,1 do elem={uid=elemIDs[d],name=links.core.getElementNameById(elemIDs[d]),kind=links.core.getElementDisplayNameById(elemIDs[d]),mass=links.core.getElementMassById(elemIDs[d]),maxHp=links.core.getElementMaxHitPointsById(elemIDs[d])}elem.tankType=tankData.types[elem.kind:lower()]if elem.tankType~=nil then if elem.maxHp>=tankData.maxHps[elem.tankType]['l']then elem.size='l'elseif elem.maxHp>=tankData.maxHps[elem.tankType]['m']then elem.size='m'elseif elem.maxHp>=tankData.maxHps[elem.tankType]['s']then elem.size='s'elseif elem.maxHp>=tankData.maxHps[elem.tankType]['xs']then elem.size='xs'end;if elem.size then elem.percent=0;elem.lastMass=1;elem.timeLeft=0;elem.lastTimeLeft=0;if elem.tankType=='atmo'then elem.lastTime=c;elem.maxMass=tankData.sizes['atmo'][elem.size][2]*(1+0.2*atmoTankHandling)*fuelWeights['atmo']table.insert(fuels['atmo'],elem)elseif elem.tankType=='space'then elem.lastTime=c;elem.maxMass=tankData.sizes['space'][elem.size][2]*(1+0.2*spaceTankHandling)*fuelWeights['space']table.insert(fuels['space'],elem)elseif elem.tankType=='rocket'then elem.lastTime=c;elem.maxMass=tankData.sizes['rocket'][elem.size][2]*(1+0.2*rocketTankHandling)*fuelWeights['rocket']table.insert(fuels['rocket'],elem)end else P(\"Unknown tank size for [\"..elem.kind..\"] [\"..elem.maxHp..\"]\")end end end end;function updateTanks()local tankData,c,e=tankData,system.getArkTime(),0;for f,g in pairs(fuels)do for h,i in ipairs(g)do i.name=i.name;i.lastMass=i.mass;i.mass=links.core.getElementMassById(i.uid)-tankData.sizes[f][i.size][1]if i.mass~=i.lastMass then i.percent=utils.round(i.mass/i.maxMass*100,0.1)i.lastTimeLeft=i.timeLeft;i.timeLeft=math.floor(i.mass/((i.lastMass-i.mass)/(c-i.lastTime)))i.lastTime=c end;e=e+1;if e>5 then coroutine.yield()end end end end;function updateTanksCo()local j=coroutine.status(updTankCo)if j==\"dead\"then updTankCo=coroutine.create(updateTanks)end;coroutine.resume(updTankCo)end;updTankCo=coroutine.create(updateTanks)\nend)\npackage.preload['Saga:data/warpData.lua']=(function()\nfunction getWarpData()if links.warpdrive==nil then return{status='Not Ready',warpDistance=0,warpDestination='No Destination',warpCells=0,warpCellsNeeded=0}end;local a=links.warpdrive.getStatus()local b='No destination set'if a==15 then a='Ready'elseif a==11 then a=b else a='Not ready'end;local c=links.warpdrive.getDistance()local d=links.warpdrive.getDestinationName()local e=links.warpdrive.getRequiredWarpCells()if a==b then d='No destination'e=0 end;local f=links.warpdrive.getAvailableWarpCells()return{status=a,warpDistance=c,warpDestination=d,warpCells=f,warpCellsNeeded=e}end\nend)\npackage.preload['Saga:helpers/common.lua']=(function()\nfunction deserialize(a)local b=load('t='..a)if b then b()end;return t end;function isWithinTolerance(c,d,e)return math.abs(c-d)<=e end;function RoundAlt(f,g)local h=f+g;if g>0 then h=math.ceil(h/10)*10 else h=math.floor(h/10)*10 end;return h end;function getDampener(i,j,l)if tonumber(l)==nil or l<0.01 then return 0.001 end;if tonumber(j)==nil or j>l then j=l end;if j<0 then j=0.01 end;local m,n=1,j/l;j=math.max(0,math.min(1,n))if i=='L'then m=1-math.log(j+1)/math.log(l+1)elseif i=='P'then m=1-j*j elseif i=='P2'then m=1-(j/l)^2 elseif i=='Q'then m=1-(j/l)^2 elseif i=='E'then m=1-2^(-j/l)elseif i=='S'then m=1/(1+math.exp(-j)*(l-j)/l)end;return m end;function calculateLandingScaleOrg(o,i,l)local j=math.abs(tonumber(o)or 100)local p=getDampener(i,j,l or 100)return clamp(p,0.1,0.99)end;local function q(r,s,u,g)if not r then inputs.brakeLock=true;return false end;s=s or\"worldDown\"u=tonumber(u)or 1000;g=tonumber(g)or 1;if not vec3.isvector(r[s])then P'Invalid axis'return false end;local v,w=math.min,math.abs;local x,y,z,A=r[s],AutoPilot,1,globals;local B=s==\"worldDown\"or s==\"worldUp\"local C=s==\"cFwd\"or s==\"cBack\"if not(B or C)then return false end;local D=r.acceleration:dot(x)local E=B and r.velocity.z or r.velocity.y;local F=1080;if r.inAtmo then if vertical and r.altitude>u then F=y.userConfig.landSpeedHigh elseif s==\"worldUp\"then F=y.userConfig.landSpeedLow end elseif B and r.altitude>90000 then F=y.userConfig.landSpeedLow*0.5 end;F=F/3.6;local G,H,I=0,0,w(g)H,brkDist=kinematics.computeBrakingDistance(B and r.vertSpeed or r.forwardSpeed,g,r.maxBrake or 0,x)H=H or F;if I<=50 then z=calculateLandingScaleOrg(I,\"S\",50)*(s=='worldUp'and 0.90 or 1)*(s=='cFwd'and 0.1 or 1)elseif I<=200 then z=calculateLandingScaleOrg(I,\"S\",200)*(s=='cFwd'and 0.33 or 1)elseif I<=500 then z=calculateLandingScaleOrg(I,\"S\",500)*(s=='cFwd'and 0.66 or 1)end;if r.isLanded and ship.takeoff then G=20/3.6 else G=F;if B then G=v(H/3,F)end end;G=G*z;if not r.inAtmo and ship.landingMode then G=G*0.75 end;if brkDist>=g then G=G*0.33 end;local J,K=0,0;if G<0 and E~=G then K=E-G else K=G-E end;if s==\"worldUp\"or s==\"worldDown\"then if s==\"worldUp\"then K=K+D*system.getActionUpdateDeltaTime()end;x=vec3(0,0,s==\"worldUp\"and 1 or-1)end;J=K/r.mass;local L=J*x*r.mass;return L end;function AxisLimiter(r,s,u,g)local M,N=pcall(q,r,s,u,g)if not M or not N then P(\"[E] Error in AxisLimiter!\")return false end;return N end;function Vec3ToPosString(O)if type(O)~=\"table\"then return\"\"end;local Q=string.format;return'::pos{0,0,'..Q(\"%.4f\",O.x or 0)..','..Q(\"%.4f\",O.y or 0)..','..Q(\"%.4f\",O.z or 0)..'}'end;function ternary(R,S,T)if R then return S else return T end end;function localToWorld(U,V,W,X)local Y=U.x*W.x+U.y*X.x+U.z*V.x;local Z=U.x*W.y+U.y*X.y+U.z*V.y;local _=U.x*W.z+U.y*X.z+U.z*V.z;return vec3(Y,Z,_)end;function getTravelDistance(a0,d,a1)local a2,a3=math.sqrt,math.asin;if not a1 or not a1.radius then local a4=a0.x-d.x;local a5=a0.y-d.y;return a2(a4*a4+a5*a5)end;local a6=a1.radius+a0.z;local a4=a0.x-d.x;local a5=a0.y-d.y;local a7=a2(a4*a4+a5*a5)if a7<0.01 then return 0 end;local a8=2*a3(a7/(2*a6))return a6*a8 end;function isDirectlyAbove(a9,aa,ab)if tonumber(ab)==nil then ab=0.1 end;local a4=a9.x-aa.x;local a5=a9.y-aa.y;local ac=a4*a4+a5*a5;return ac<=ab*ab and a9.z>aa.z end;function addDbgVal(t,ad,ae)local A=globals;if not A.debug then return end;if ae then A.dbgTxt=''end;local af='<br>'..(t or'')..': '..ternary(tonumber(ad)==nil,tostring(ad),tonumber(ad))A.dbgTxt=A.dbgTxt..af;return ad end;function boldSpan(ag)return'<span style=\"font-weight:bold\">'..ag..'</span>'end;function colorSpan(ah,ag)return'<span style=\"color:'..ah..'\">'..ag..'</span>'end;function colIfTrue(ai,ah)local af=tostring(ai)return ternary(ai,colorSpan(ah or'springgreen',af),af)end;function getDiv(aj,ak,ah,al)ah=ah or\"ivory\"al=al or 1.7;return\"<div class=\\\"\"..aj..\"\\\" style=\\\"font-size:\"..tostring(al)..\"vh;color:\"..ah..\";text-align:center;text-shadow:0.2vh 0.2vh 1vh black\\\">\"..(ak or'')..\"</div>\"end;function getAPDiv(ak,ah)return getDiv('apAlert',ak,ah,1.5)end;function getBrakeDiv(ak)return getDiv('brakeAlert',ak,'orangered')end;function getTDiv(aj,am,an,ao)return\"<div class=\\\"\"..aj..\"\\\" style=\\\"transform:translate(\"..am..\"vw,\"..an..\"vh)\\\">\"..(ao or'')..\"</div>\"end;function getTDivP(aj,ap,ao)return getTDiv(aj,ap[1]*100,ap[2]*100,ao)end;function printDistance(aq,ar)if tonumber(aq)==nil then return'NaN'end;local as=math.abs(aq)if as<ternary(ar,10000,1000)then return round2(aq,1)..' m'elseif as<200000 then local at=aq/1000;return round2(at,ternary(at>10,1,2))..' km'end;local au=aq/200000;return round2(au,ternary(au>10,1,2))..' su'end;function thousands(av)local aw=tostring(av)if av==nil then return av end;while true do aw,k=string.gsub(aw,\"^(-?%d+)(%d%d%d)\",'%1 %2')if k==0 then break end end;return aw end;function split(ax,ay)if ax==nil then return ax end;local t={}local az=\"(.-)\"..ay;local aA=1;local a,aB,aC=ax:find(az,1)while a do if a~=1 or aC~=\"\"then table.insert(t,aC)end;aA=aB+1;a,aB,aC=ax:find(az,aA)end;if aA<=#ax then aC=ax:sub(aA)table.insert(t,aC)end;return t end;function formatTimeString(aD)if type(aD)~='number'then return aD end;local aE=math.floor(aD/86400)local aF=math.floor(aD/60/60%24)local aG=math.floor(aD/60%60)local aD=math.floor(aD%60)if aD<0 or aF<0 or aG<0 then return\"0s\"end;if aE>0 then return aE..\"d \"..aF..\"h\"elseif aF>0 then return aF..\"h \"..aG..\"m\"elseif aG>0 then return aG..\"m \"..aD..\"s\"else return aD..\"s\"end end\nend)\npackage.preload['Saga:helpers/solar_system.lua']=(function()\nlocal a,b,c,d,e,f,g,h=math.sin,math.cos,math.acos,math.atan,math.pi,math.sqrt,math.huge,utils.round;function findClosestBody(i)local j=g;local k=nil;for l,m in pairs(atlas[systemId])do local n=vector.dist(i,m.center)if n<j then j=n;k=m end end;return k,j end;function worldToLocal(o)if not vec3.isvector(o)then return nil end;local p=cData;return vec3(library.systemResolution3({p.wRight:unpack()},{p.wFwd:unpack()},{p.worldUp:unpack()},{o:unpack()}))end;function parsePosString(q)local r=' *([+-]?%d+%.?%d*e?[+-]?%d*)'local systemId,s,t,u,v=string.match(q,'::pos{'..r..','..r..','..r..','..r..','..r..'}')local w=tonumber;systemId=w(systemId)s=w(s)t=w(t)u=w(u)v=w(v)return{latitude=t,longitude=u,altitude=v,bodyId=s,systemId=systemId}end;function convertToWorldCoordinates(x)local y=parsePosString(x)return mapPosToWorldPos(y)end;function mapPosToWorldPos(y)if y.altitude==nil then return nil end;if y.bodyId==nil or y.bodyId==0 then return vec3(y.latitude,y.longitude,y.altitude)end;local z=constants.deg2rad*clamp(y.latitude,-90,90)local A=constants.deg2rad*(y.longitude%360)local B=b(z)local m=atlas[y.systemId][y.bodyId]return vec3(m.center)+(m.radius+y.altitude)*vec3(B*b(A),B*a(A),a(z))end;function bodyPosFromWorldPos(C,D)local E=vec3(D)-vec3(C.center)local F=E:normalize()return{systemId=C.systemId,bodyId=C.bodyId,latitude=90-c(F.z)*180/e,longitude=d(F.y,F.x)/e*180,altitude=E:len()-C.radius}end;function worldToMapStr(G)return mapPos2String(worldToMapPos(G))end;function mapPosToVec3(H)if type(H)=='table'and H.latitude then return vec3(H.latitude,H.longitude,H.altitude)end;return nil end;function worldToMapPos(H)local C=findClosestBody(H)if not C or not C.center or not C.radius then return{systemId=0,bodyId=0,latitude=H.x,longitude=H.y,altitude=H.z}end;return bodyPosFromWorldPos(C,H)end;function mapPos2String(I)local J=string.format;if type(I)~=\"table\"then return\"\"end;return'::pos{'..(I.systemId or 0)..','..(I.bodyId or 0)..','..J(\"%.4f\",I.latitude or 0)..','..J(\"%.4f\",I.longitude or 0)..','..J(\"%.4f\",I.altitude or 0)..'}'end;function initialiseAtlas()for l,K in pairs(atlas)do for s,m in pairs(K)do m.bodyId=s;m.name=m['name'][1]m.type=m['type'][1]m.atmoRadius=m['atmosphereRadius']m.center=vec3(m['center'])m.atmoAltitude=0;if m.hasAtmosphere then m.atmoAltitude=m.atmoRadius-m.radius end end end;for L,M in pairs(atlas)do for s,N in pairs(M)do if N.satellites~=nil then for l,O in pairs(N.satellites)do atlas[L][O].parentBodyId=s end end end end end;function castIntersections()if cData.atmoDensity>0.1 then return nil,nil,nil end;local P=cData.position;local Q=cData.wVelDir;local R=atlas[systemId]for l,N in pairs(R)do local S=0;if N.hasAtmosphere then S=N.atmoRadius*1.2 else S=N.radius*1.4 end;local T=N.center-P;local U=T:dot(Q)local V=U^2-(T:len2()-S^2)if V>=0 then local W=f(V)local X=U+W;local Y=U-W;if Y>0 then return N,X,Y elseif X>0 then return N,X,nil end end end;return nil,nil,nil end;function checkLOS(vector)local Z=cData.position;local C=findClosestBody(Z)local S=0;if C==nil then return nil,nil end;if C.hasAtmosphere then S=C.atmoRadius*1.05 else S=C.radius*1.2 end;local _,X,Y=castIntersections(Z,vector,S)local a0=X;if Y~=nil and X~=nil then a0=min(Y,X)end;if a0~=nil then return _,a0 end;return nil,nil end;function getAltitude(a1)local a2=0;if a1==nil then a2=links.core.getAltitude()if a2==0 then local a3=cData.body;if a3==nil then return 0 end;a1=cData.position;a2=vector.dist(vec3(a3.center),a1)-a3.radius end else coord=vec3(a1)local C=findClosestBody(a1)if C==nil then return 0 end;a2=vector.dist(vec3(C.center),a1)-C.radius end;return round2(a2,2)end;function getOrbitalParameters(cData)local C=findClosestBody(cData.position)if C==nil then return{}end;local x=cData.position;local H=cData.wVel;local a4=x-C.center;local a5=H:len2()local a6=a4:len()local a7=C.GM;local a8=((a5-a7/a6)*a4-a4:dot(H)*H)/a7;local R=a7/(2*a7/a6-a5)local a9=a8:len()local Q=a8:normalize()local aa=R*(1-a9)local ab=R*(1+a9)local ac=aa*Q+C.center;local ad=a9<=1 and-ab*Q+C.center or nil;local ae=f(R*a7*(1-a9*a9))local af=ad and 2*e*f(R^3/a7)local ag=c(a8:dot(a4)/(a9*a6))if a4:dot(H)<0 then ag=-(ag-2*e)end;local ah=c((b(ag)+a9)/(1+a9*b(ag)))local ai=ah;if ai<0 then ai=ai+2*e end;local aj=ai-a9*a(ai)local ak=0;local al=0;local am=0;if af~=nil then ak=aj/(2*e/af)al=af-ak;am=al+af/2;if ag-e>0 then al=ak;am=al+af/2 end;if am>af then am=am-af end end;return{periapsis={position=ac,speed=ae/aa,circularOrbitSpeed=h(f(a7/aa)),altitude=h(aa-C.radius)},apoapsis={position=ad,speed=ae/ab,circularOrbitSpeed=h(f(a7/ab)),altitude=h(ab-C.radius)},currentVelocity=H,currentPosition=x,eccentricity=a9,period=af,eccentricAnomaly=ah,meanAnomaly=aj,timeToPeriapsis=h(al),timeToApoapsis=h(am),trueAnomaly=ag}end;function getOrbitalSpeed(v,m)local n=v+m.radius;if n>0 then local an=f(m.GM/n)return an end;return nil end;function getOrbitFocus(cData)local ad=cData.orbitalParameters.apoapsis.altitude;local ao=cData.orbitalParameters.periapsis.altitude;local ap=cData.orbitalParameters.timeToApoapsis;local aq=cData.orbitalParameters.timeToPeriapsis;local ar=0;if ap<=aq then orbitAltTarget=ad;ar=cData.orbitalParameters.apoapsis.circularOrbitSpeed else orbitAltTarget=ao;ar=cData.orbitalParameters.periapsis.circularOrbitSpeed end;return{orbitAltTarget=orbitAltTarget,orbitSpeed=ar}end\nend)\npackage.preload['Saga:helpers/table.lua']=(function()\ntable=_G['table']function table.add(a,b)if b==nil then return a end;for c,d in pairs(b)do table.insert(a,d)end;return a end;function table.contains(e,f,g)if g==nil then g=false end;local h=false;local i=nil;local j=nil;for c,k in pairs(f)do if type(k)==\"table\"then h=table.contains(e,k)if h then break end elseif k==e then h=true;i=k;j=c;break end end;return ternary(g,j,h)end;function table.find(e,f)return table.contains(e,f,true)end;function table.keys(l)local m={}for c,n in pairs(l)do table.insert(m,c)end;return m end;function table.isArray(l)local o=0;for n in pairs(l)do o=o+1;if l[o]==nil then return false end end;return true end\nend)\npackage.preload['Saga:helpers/vector_math.lua']=(function()\nlocal a,b=utils.round,constants.rad2deg;spcVector='none'function signedRotationAngle(c,d,e)d=d:project_on_plane(c)e=e:project_on_plane(c)return atan(d:cross(e):dot(c),d:dot(e))end;function vectorRotated(f,g)return vec3(f):cross(vec3(g))end;function projectedDistance(h,i)if not h then return 0 end;if i==nil then i=cData.position end;i=i:project_on_plane(cData.wVert)return a(vec3(i-h:project_on_plane(cData.wVert)):len(),0.01)end;function vectorToPoint(h,i)local j=i or cData.position;return vec3(j-h):normalize()end;function vectorToPoint2(h,i)local j=i or cData.position;return vec3(h-j):normalize()end;function circleNormal(h)local k=findClosestBody(cData.position)if not k then return vec3()end;local l=cData.position-k.center;local m=h-k.center;local circleNormal=m:cross(l):normalize()return(circleNormal:cross(l)):normalize()end;function variousVectors(f)local n,o=globals,cData;local p=AutoPilot;local q=-o.wVelDir:angle_between(f)*b;local r=f- -o.wVelDir;local s=(r+f):normalize()local t=r+f+r;if n.apMode=='Transfer'or n.apMode=='standby'then if o.speedKph>=p.maxSpaceSpeed then spcVector='ninety't=f:normalize()- -o.wVelDir:normalize()elseif o.speedKph>p.maxSpaceSpeed/3 and o.speedKph<p.maxSpaceSpeed then spcVector='main't=r+f+r*20*(1-clamp(getSpaceVelocityTargetAngle()/45,0,1))else spcVector='main2't=r+f+r+r end else spcVector='none't=r+f+r end;return{angleToPoint=q,ninety=r,vecHalf=s,vecMain=t}end;function getVelocityAngle()if cData.constructSpeed<1 then return 0 end;return a(cData.wFwd:angle_between(cData.wVelDir)*b,0.0001)end;function getVelocityWorldAngle()if cData.constructSpeed<1 then return 0 end;return a((cData.wVelDir:project_on_plane(cData.wVert)):angle_between(cData.wVelDir)*b,0.0001)end;function targetAngularVelocityAngle()if globals.apMode=='Transfer'and cData.constructSpeed>1 then return a(vectorToPoint(variousVectors(AutoPilot.target).vecMain):angle_between(vectorToPoint(cData.wFwd))*b,0.0001)end;return 0 end;function getTargetWorldAngle()local o,u=AutoPilot,cData;if sameBody and u.targetBody~=nil then return a(vectorToPoint(u.targetBody.center,u.target):angle_between(vectorToPoint(u.targetBody.center,o.position))*b,0.0001)end;if not o.body then return 0 end;return a(vectorToPoint(u.target,o.body.center):angle_between(vectorToPoint(o.position,o.body.center))*b,0.0001)end;function getTargetAngle(v,w)local x=v or AutoPilot.target;if x==nil then return 0 end;local y=signedRotationAngle(cData.worldUp,-cData.wFwd,vectorToPoint(x):project_on_plane(cData.wVert))return a(ternary(w,y,-deg(y)),0.0001)end;function getVelocityTargetAngle(v)local x=v or AutoPilot.target;return a(-deg(signedRotationAngle(cData.worldUp,-cData.wVelDir:project_on_plane(cData.wVert),circleNormal(x):project_on_plane(cData.wVert))),0.0001)end;function getSpaceVelocityTargetAngle(v)if cData.constructSpeed<1 then return 0 end;local x=v or AutoPilot.target;return a(cData.wVelDir:angle_between(-vectorToPoint(x))*b,0.0001)end;function getReticle(f)return{cData.position.x+f.x,cData.position.y+f.y,cData.position.z+f.z}end;function getXYZ(f)return{f.x,f.y,f.z}end\nend)\npackage.preload['Saga:hud/widgets/aggInfo.lua']=(function()\nWidgets.aggInfo=Widget:new{class='aggInfo'}function Widgets.aggInfo:build()local a,b=aggData,'springgreen'if a==nil then return\"\"end;local c='Offline'local d='orangered'local e=d;if a.aggState then d=b;c='Online'end;if a.aggBubble then e=b end;local f={}f[#f+1]=boldSpan('AGG INFO')f[#f+1]='Status: '..colorSpan(d,c)f[#f+1]='Target Alt: '..a.aggTarget;f[#f+1]='Current Alt: '..a.aggAltitude;f[#f+1]='Power: '..round2(a.aggPower*100,2)..' %'f[#f+1]='In Bubble: '..colorSpan(e,tostring(a.aggBubble))self.rowCount=#f;return table.concat(f,'<br>')end\nend)\npackage.preload['Saga:hud/widgets/controls.lua']=(function()\nWidgets.controls=Widget:new{class='controlsBox'}function Widgets.controls:build()local a,b,c,d,e=colIfTrue,{},tostring,globals,AutoPilot;b[#b+1]='Alt-1| Toggle AP - '..a(e.enabled)b[#b+1]='Alt-2| Altitude Hold - '..a(d.altitudeHold)b[#b+1]='Alt-3| Orbital Hold - '..a(d.orbitalHold)b[#b+1]='Alt-4| Radial Hold - '..c(d.radialMode)b[#b+1]='Alt-5| Engine Mode - '..c(d.boostMode)b[#b+1]='Alt-6| Prev Route'b[#b+1]='Alt-7| Next Route'local f=ternary(d.maneuverMode,'Forward','Rotation')b[#b+1]='Alt-8| '..f..' Damp. - '..a(d.rotationDampening)b[#b+1]='Alt-9| Flight Mode - '..(d.maneuverMode and'Maneuver'or'Standard')b[#b+1]='<br>Alt-Shift-1| Toggle Main Menu'if d.maneuverMode then b[#b+1]='Alt-Shift-6| Activate Base'b[#b+1]='Alt-Shift-7| Set Base'else b[#b+1]='Alt-Shift-2| Follow Mode - '..a(d.followMode)end;b[#b+1]='Alt-Shift-8| Slow Flat - '..a(e.userConfig.slowFlat)b[#b+1]='<br>G| Parking - '..a(e.landingMode)b[#b+1]='Alt + CTRL | Brake Lock - '..a(inputs.manualBrake)self.rowCount=#b;return table.concat(b,'<br>')end\nend)\npackage.preload['Saga:hud/widgets/core.lua']=(function()\nWidgets.core=Widget:new{class='coreInfo',core=links.core,shield=links.shield,lastUpd=''}function Widgets.core:build()if not HUD.Config.coreWidget then return''end;local a=globals;if not a.updatecore then return self.lastUpd end;a.updatecore=false;local b=math.abs(self.core.getCoreStressRatio()*100-100)local c=self.core.getCoreStress()local d=self.core.getMaxCoreStress()local e=cData;if e.pvpZone then self.class='coreInfo alert'end;local f='springgreen'local g='orangered'local h=f;if b<=20 then h=g elseif b<=50 then h='goldenrod'end;local i={}i[#i+1]='Core: '..colorSpan(h,b..'%')i[#i+1]='Core Stress: '..colorSpan(h,d-c)..' / '..d;local j=self.shield;if j~=nil then local k=j.getShieldHitpoints()local l=j.getMaxShieldHitpoints()local m=k/l*100;local n=g;local o=f;if m<=20 then o=g elseif m<=50 then o='goldenrod'end;if j.isActive()==1 then n=f end;local p=colorSpan(n,'Shield')local q=colorSpan(o,m..'%')local r=colorSpan(o,k)..' / '..l;i[#i+1]=p..': '..q;i[#i+1]='Shield Health: '..r end;if e.pvpZone then i[#i+1]='PvP Timer: '..e.pvpTimer end;self.rowCount=#i;self.lastUpd=table.concat(i,' | ')return self.lastUpd end\nend)\npackage.preload['Saga:hud/widgets/fuelInfo.lua']=(function()\nWidgets.fuelInfo=Widget:new{class='fuelInfo'}function Widgets.fuelInfo:build()local a={}a[#a+1]='Fuel Tanks'for b,c in pairs(fuels)do if#c>0 then a[#a+1]=''a[#a+1]=b end;for d,e in ipairs(c)do local f='ivory'if e.percent<=20 then f='orangered'elseif e.percent<=50 then f='goldenrod'end;a[#a+1]=e.name..' - <span style=\"color: '..f..'\">'..e.percent..'%</span>'end end;self.rowCount=#a;return table.concat(a,'<br>')end\nend)\npackage.preload['Saga:hud/widgets/infos.lua']=(function()\nWidgets.infos=Widget:new{class='infos'}function Widgets.infos:build()local a,b,c=globals,cData,AutoPilot;local d,e,f={},colorSpan,round2;local g,h=b.rpy,a.maneuverMode;local i=ternary(h,ternary(ship.landingMode,'LANDING','Maneuver'),'Standard')d[#d+1]=boldSpan('FLIGHT MODE: ')..e(ternary(h,'orange','springgreen'),i)if c.target then local j=boldSpan('TARGET: ')local k=tonumber(c.currentRouteIndex)if k and k>0 then local l=RouteDatabase.routes[k]if l and l.name then d[#d+1]=j..e('springgreen',tostring(l.name))end else if c.targetLoc then d[#d+1]=j..e('springgreen',tostring(c.targetLoc))end end;if a.maneuverMode and b.inAtmo then d[#d+1]=boldSpan('Travel alt.: ')..e('springgreen',round2(c.userConfig.travelAlt,2))end end;d[#d+1]='Throttle = '..f(b.curThrottle,2)d[#d+1]='Pitch = '..f(g.pitch,2)d[#d+1]='Yaw = '..f(g.yaw,2)d[#d+1]='Roll = '..f(g.roll,2)d[#d+1]='<br>Burn Protection = '..tostring(c.userConfig.throttleBurnProtection)if not b.inAtmo then d[#d+1]='Max Space V = '..tostring(f(c.maxSpaceSpeed))end;d[#d+1]='Brake Dist = '..printDistance(b.brakes.distance,true)d[#d+1]='Mass = '..f(b.mass/1000,3)..' T'if a.altitudeHold and a.holdAltitude>0 then d[#d+1]='Alt. Hold = '..round2(a.holdAltitude,0)end;if c.userConfig.hoverHeight then d[#d+1]=\"Hover: \"..round2(c.userConfig.hoverHeight or 0,2)end;if c.userConfig.agl then d[#d+1]=\"AGL: \"..round2(c.userConfig.agl or 0,2)end;d[#d+1]=\"Ground: \"..round2(b.GrndDist or 0,2)if vec3.isvector(c.target)then local m=vector.dist(c.target,b.position)d[#d+1]='<br>Target = '..printDistance(m)local n=b.constructSpeed;local o='ETA = 'if n>=1 then local p=m/n;d[#d+1]=o..formatTimeString(p)..' ('..f(n)..' m/s)'else d[#d+1]=o..'∞ (0 m/s)'end;if ship.angle then d[#d+1]='Angle: '..round2(ship.angle,4)end end;self.rowCount=#d;return table.concat(d,'<br>')end\nend)\npackage.preload['Saga:hud/widgets/mainMenu.lua']=(function()\nWidgets.mainMenu=Widget:new{class='mainMenu',anchor=anchorENUM.topRight,padding=4,rowHeight=16,rowMargin=4,headerHeight=20}categoryENUM={RouteList='RouteList',RouteListAll='RouteListAll',RouteListByPlanet='RouteListByPlanet',EditRoute='EditRoute',Autopilot='Autopilot',Settings='Settings',AutopilotConfig='AutopilotConfig',Databanks='Databanks',DatabanksConfig='DatabanksConfig',DatabanksRoute='DatabanksRoute',DatabanksUSB='DatabanksUSB',Scale='Scale',HUD='HUD'}function Widgets.mainMenu:init()local categoryENUM=categoryENUM;self.optionMenu=MenuSystem;self.tooltips={maxSpaceSpeed={'Maximum space travel speed','Set to 0 for automatic detection',maxSpaceSpeed..' Default'},maxPitch={'How steep to pitch in atmo in degrees',maxPitch..' Default'},maxRoll={'How steep to roll in atmo in degrees',maxRoll..' Default'},wingStallAngle={'Degrees from your trajectory your ship','stalls at, based on majority of airfoil','type used for lift (Ailerons 35,','Wings 50, Stabilizers 70)',wingStallAngle..' Default'},hoverHeight={'Hover height in meters',hoverHeight..' Default'},throttleBurnProtection={'Will take over throttle/brakes to prevent','burning in atmosphere. Use brakes or','change throttle to take manual control again.'},shieldManage={'Automatic shield state and resistance control'},radarBoxes={'Show radar contacts in the HUD'},radarWidget={'Show the default radar widget'},slowFlat={'Levels the ship when','below 100km / hr and in atmo'},spaceCapableOverride={'Rarely used, only if engines are angled','in a way where space capability isnt','detected automatically correctly.'},travelAlt={'Maneuver Mode only!','Default altitude at which to travel via Autopilot targets.','Default: 1500m'}}Config.defaults[configDatabankMap.menuKeyLegend]=self.optionMenu.config.legendVisible;EventSystem:register('ConfigDBChanged',self.applyConfig,self)self:applyConfig()self.optionMenu.config.optionWidth=self.width-self.padding*2;self.optionMenu.config.optionHeight=self.rowHeight;self.optionMenu.config.optionMargin=self.rowMargin;self.optionMenu.config.headerHeight=self.headerHeight;self.optionMenu:addCategory('Routes',categoryENUM.RouteList)self.optionMenu:addCategory('All Routes',categoryENUM.RouteListAll,categoryENUM.RouteList)self.optionMenu:addCategory('Autopilot Controls',categoryENUM.Autopilot)self.optionMenu:addCategory('Settings',categoryENUM.Settings)self.optionMenu:addCategory('Autopilot Configuration',categoryENUM.AutopilotConfig,categoryENUM.Settings)self.optionMenu:addCategory('Databanks',categoryENUM.Databanks,categoryENUM.Settings)self.optionMenu:addCategory('Visuals',categoryENUM.HUD,categoryENUM.Settings)self.optionMenu:addCategory('Scale',categoryENUM.Scale,categoryENUM.HUD,{getValue={func=function()return Config:getValue(configDatabankMap.hudScale)*100 ..'%'end},input={func=setConfigInput,arg=configDatabankMap.hudScale,filter=function(a)return clamp(tonumber(a),30,250)/100 end}})self.optionMenu:addCategory('Config DB',categoryENUM.DatabanksConfig,categoryENUM.Databanks,{getValue={func=getActiveDbName,arg='config'}})self.optionMenu:addCategory('Route DB',categoryENUM.DatabanksRoute,categoryENUM.Databanks,{getValue={func=getActiveDbName,arg='routes'}})self.optionMenu:addCategory('USB DB',categoryENUM.DatabanksUSB,categoryENUM.Databanks,{getValue={func=getActiveDbName,arg='usb'}})self.optionMenu:addOption('Toggle On/Off',categoryENUM.Autopilot,{main={func=AutoPilot.toggleState},getValue={func=function()return AutoPilot.enabled end}})self.optionMenu:addOption('New Route',categoryENUM.RouteList,{main={func=newRoute}})self.optionMenu:addCategory('Route',categoryENUM.EditRoute,categoryENUM.EditRoute,{back={func=unEditRoute,arg=i}},true)self.optionMenu:addOption('Name',categoryENUM.EditRoute,{input={func=editRouteName},getValue={func=getEditRouteName}},true)self.optionMenu:addOption('Add Current Position',categoryENUM.EditRoute,{main={func=addCurrentPos}},true)self.optionMenu:addOption('Add ::pos{} Location',categoryENUM.EditRoute,{input={func=addCustomPos}},true)for i=0,22 do local b=i+3;local c=b*10 ..'%'self.optionMenu:addOption(c,categoryENUM.Scale,{getActive={func=function(d,e)return Config:getValue(configDatabankMap.hudScale)==e end,arg=b/10},main={func=setConfig,arg={key=configDatabankMap.hudScale,value=b/10}}})end;EventSystem:register('ConfigChange'..configDatabankMap.hudScale,HUD.updateScale)EventSystem:register('RoutesUpdated',self.updateRoutes,self)self.optionMenu:addOption('Core Widget',categoryENUM.HUD,{main={func=function()HUD.toggleCoreWidget()end},getValue={func=function()return HUD.Config.coreWidget end}})self.optionMenu:addOption('Docking Widget',categoryENUM.HUD,{main={func=function()HUD.toggleDockWidget()end},getValue={func=function()return HUD.Config.dockWidget end}})self.optionMenu:addOption('Unit Widget',categoryENUM.HUD,{main={func=function()HUD.toggleUnitWidget()end},getValue={func=function()return HUD.Config.unitWidgetVisible end}})if#links.radars>0 then self.optionMenu:addOption('Radar Boxes',categoryENUM.HUD,{main={func=function()Radar.toggleBoxes(nil)end},getValue={func=function()return Radar.boxesVisible==true end},tooltip=self.tooltips.radarBoxes})self.optionMenu:addOption('Radar Widget',categoryENUM.HUD,{main={func=function()Radar.toggleWidget(nil)end},getValue={func=function()return Radar.widgetId~=nil end},tooltip=self.tooltips.radarWidget})end;self.optionMenu:addOption('Menu Action Legend',categoryENUM.HUD,{main={func=function()self.optionMenu:toggleLegend()end},getValue={func=function()return self.optionMenu.config.legendVisible end}})self.optionMenu:addOption('Max Space Speed',categoryENUM.AutopilotConfig,{input={func=function(f)Config:setValue(configDatabankMap.maxSpaceSpeed,tonumber(f))AutoPilot:applyConfig()end},getValue={func=function()return AutoPilot.userConfig.maxSpaceSpeed end},tooltip=self.tooltips.maxSpaceSpeed})self.optionMenu:addOption('Max Pitch',categoryENUM.AutopilotConfig,{input={func=function(f)Config:setValue(configDatabankMap.maxPitch,tonumber(f))AutoPilot:applyConfig()end},getValue={func=function()return AutoPilot.userConfig.maxPitch end},tooltip=self.tooltips.maxPitch})self.optionMenu:addOption('Max Roll',categoryENUM.AutopilotConfig,{input={func=function(f)Config:setValue(configDatabankMap.maxRoll,tonumber(f))AutoPilot:applyConfig()end},getValue={func=function()return AutoPilot.userConfig.maxRoll end},tooltip=self.tooltips.maxRoll})self.optionMenu:addOption('Wing Stall Angle',categoryENUM.AutopilotConfig,{input={func=function(f)Config:setValue(configDatabankMap.wingStallAngle,tonumber(f))AutoPilot:applyConfig()end},getValue={func=function()return AutoPilot.userConfig.wingStallAngle end},tooltip=self.tooltips.wingStallAngle})self.optionMenu:addOption('Hover Height',categoryENUM.AutopilotConfig,{input={func=function(f)Config:setValue(configDatabankMap.hoverHeight,tonumber(f))AutoPilot:applyConfig()end},getValue={func=function()return AutoPilot.userConfig.hoverHeight end},tooltip=self.tooltips.hoverHeight})self.optionMenu:addOption('Shield Management',categoryENUM.AutopilotConfig,{main={func=AutoPilot.toggleShieldManage},getValue={func=function()return AutoPilot.userConfig.shieldManage end},tooltip=self.tooltips.shieldManage})self.optionMenu:addOption('Burn Protection',categoryENUM.AutopilotConfig,{main={func=AutoPilot.toggleThrottleBurnProtection},getValue={func=function()return AutoPilot.userConfig.throttleBurnProtection end},tooltip=self.tooltips.throttleBurnProtection})self.optionMenu:addOption('Slow Flat',categoryENUM.AutopilotConfig,{main={func=AutoPilot.toggleSlowFlat},getValue={func=function()return AutoPilot.userConfig.slowFlat end},tooltip=self.tooltips.slowFlat})self.optionMenu:addOption('Space Capable Override',categoryENUM.AutopilotConfig,{main={func=AutoPilot.toggleSpaceCapableOverride},getValue={func=function()return AutoPilot.userConfig.spaceCapableOverride end},tooltip=self.tooltips.spaceCapableOverride})self.optionMenu:addOption('Travel Altitude',categoryENUM.AutopilotConfig,{input={func=function(f)Config:setValue(configDatabankMap.travelAlt,tonumber(f))AutoPilot:applyConfig()end},getValue={func=function()return AutoPilot.userConfig.travelAlt end},tooltip=self.tooltips.travelAlt})self.optionMenu.onClose=function()HUD.Config.mainMenuVisible=false end;self:updateDatabanks()self:updateRoutes()end;function Widgets.mainMenu:applyConfig()self.optionMenu.config.legendVisible=Config:getValue(configDatabankMap.menuKeyLegend)end;function Widgets.mainMenu:update()self.optionMenu:updateInputs()end;function Widgets.mainMenu:build()local g=''local h=HUD.screenWidth;local j=HUD.screenHeight;local k=self.padding*HUD.Config.scaleMultiplier;g=g..'<style>'..HUD.staticCSS.menuCss..'></style>'g=g..'<svg style=\"position:absolute;top:'..k..';left:'..k..';\" height=\"100vh\" viewBox=\"0 0 '..h..' '..j..'\" preserveAspectRatio=\"xMidYMid\" overflow=\"visible\" xmlns=\"http://www.w3.org/2000/svg\">\\n'g=g..'<defs>'..HUD.staticCSS.gradientDefs..'</defs>'..'<g class=\"mainMenu\">'..self.optionMenu:render()..'</g></svg>'self.rowCount=self.optionMenu.rowCount;return g end;function Widgets.mainMenu:updateDatabanks()self.optionMenu:clearCategory(categoryENUM.DatabanksConfig)self.optionMenu:clearCategory(categoryENUM.DatabanksRoute)self.optionMenu:clearCategory(categoryENUM.DatabanksUSB)for l,m in ipairs(links.databanks)do self.optionMenu:addOption(m.name,categoryENUM.DatabanksConfig,{main={func=selectDatabank,arg={type='config',databank=m}},getActive={func=function(d,n)return Config.databank==n end,arg=m}})self.optionMenu:addOption(m.name,categoryENUM.DatabanksRoute,{main={func=selectDatabank,arg={type='route',databank=m}},getActive={func=function(d,n)return RouteDatabase.databank==n end,arg=m}})self.optionMenu:addOption(m.name,categoryENUM.DatabanksUSB,{main={func=selectDatabank,arg={type='usb',databank=m}}})end end;function Widgets.mainMenu:onEditedRouteChanged()self.optionMenu:clearCategory(categoryENUM.EditRoute)local o=RouteDatabase.routes[RouteDatabase.currentEditId]==nil;local p=#RouteDatabase.routes[RouteDatabase.currentEditId].points==0;if o or p then return end;for i,q in pairs(RouteDatabase.routes[RouteDatabase.currentEditId].points)do local r={main={func=setPointDestination,arg=i,text='Set Destination'},shift={func=deletePoint,arg=i,text='Delete',hold=2},alt={func=printPoint,arg=i,text='Print Coordinates'},altUpDown={func=movePoint,arg=i,text='Change point order'},input={func=editPointName,arg=i},getActive={func=function(d,s)return AutoPilot.currentPointIndex==s end,arg=i}}self.optionMenu:addOption(q.name,categoryENUM.EditRoute,r)end end;function Widgets.mainMenu:updateRoutes()self.optionMenu:clearCategory(categoryENUM.RouteListAll)for i,t in ipairs(RouteDatabase.routes)do local u=RouteDatabase:getRoutePointCount(i)if u==0 then u='-'end;local r={main={func=setRouteDestination,arg=i,text='Set Destination'},shift={func=deleteRoute,arg=i,text='Delete',hold=2},alt={func=editRoute,arg=i,text='Open'},getValue='( '..u..' )',getActive={func=function(d,s)return AutoPilot.currentRouteIndex==s end,arg=i}}self.optionMenu:addOption(t.name,categoryENUM.RouteListAll,r)end end\nend)\npackage.preload['Saga:hud/widgets/radarContacts.lua']=(function()\nradarWidgetTemplate={class='radar',anchor=anchorENUM.bottom,width=280}local function a()return Widget:new{class=radarWidgetTemplate.class,anchor=radarWidgetTemplate.anchor,width=radarWidgetTemplate.width}end;Widgets.radarDynamic=a()function Widgets.radarDynamic:build()return buildContactListTest(self,'Dynamic',Radar.radarDynamic)end;Widgets.radarStatic=a()function Widgets.radarStatic:build()return buildContactListTest(self,'Static',Radar.radarStatic)end;Widgets.radarAbandoned=a()function Widgets.radarAbandoned:build()return buildContactListTest(self,'Abandoned',Radar.radarAbandoned,true)end;Widgets.radarAlien=a()function Widgets.radarAlien:build()return buildContactListTest(self,'Alien',Radar.radarAlien)end;Widgets.radarSpace=a()function Widgets.radarSpace:build()return buildContactListTest(self,'Space',Radar.radarSpace)end;Widgets.radarFriend=a()function Widgets.radarFriend:build()return buildContactListTest(self,'Friend',Radar.radarFriend)end;Widgets.radarThreat=a()function Widgets.radarThreat:build()return buildContactListTest(self,'Threat',Radar.radarDynamic)end;function buildContactListTest(self,b,c,d)local e=b;local f=c;self.rowCount=#f+1;local g=0;local h={}h[#h+1]=b..' - '..#f;for i,j in ipairs(f)do if e=='Threat'then if f[i]['targetThreatState']==0 then goto k end end;local l=j['constructId']..' ['..j['size']..'] '..j['name']if d==true then end;h[#h+1]='<div class=\"radarRow\">'h[#h+1]='<div class=\"radarText\" style=\"left: 0.5vh; width: 5vh;\">'..j['constructId']..'</div>'h[#h+1]='<div class=\"radarText\" style=\"left: 5.5vh; width: 2.5vh;\">['..j['size']..']</div>'h[#h+1]='<div class=\"radarText\" style=\"left: 8vh; width: 15vh;\">'..j['name']..'</div>'h[#h+1]='<div class=\"radarText\" style=\"right: 0.5vh;\">'..thousands(math.ceil(j['distance']))..'</div>'h[#h+1]='</div>'g=g+1;if g>=10 then break end::k::end;self.visible=g>0;return table.concat(h,'')end\nend)\npackage.preload['Saga:hud/widgets/warpInfo.lua']=(function()\nWidgets.warpInfo=Widget:new{class='warpInfo',warpData=warpData}function Widgets.warpInfo:build()self.warpData=warpData;local a=colorSpan;local b,c=self.warpData.status=='Ready',self.warpData.warpCells>=self.warpData.warpCellsNeeded;local d=ternary(c,'springgreen','orangered')local e=ternary(b and c,'springgreen','orangered')local f={}f[#f+1]=boldSpan('WARP DRIVE INFO')f[#f+1]='Status : '..a(e,self.warpData.status)f[#f+1]='Destination : '..self.warpData.warpDestination;f[#f+1]='Distance : '..printDistance(self.warpData.warpDistance,true)f[#f+1]='Cells: '..a(d,self.warpData.warpCellsNeeded)..' ('..self.warpData.warpCells..')'f[#f+1]=a(e,'ENGAGE WARP: ALT-J')self.rowCount=#f;return table.concat(f,'<br>')end\nend)\npackage.preload['Saga:hud/debug.lua']=(function()\nfunction HUD.constructDebug()local a,b,c,d=globals,round2,cData,AutoPilot;local e=c.brakes.distance;local f=b(c.rpy.pitch)updateTanksCo()local g,h,i,j='ivory','orangered','<br>','</div>'local k={}k[#k+1]=getTDiv(\"speedBar\",50,50,HUD.dynamicSVG.speedBar)k[#k+1]=getTDiv(\"throttleBar\",50,50,HUD.dynamicSVG.throttleBar)local l,m=b(c.brakes.distance*1.1,1),''if c.body then local n=0;if c.body.hasAtmosphere then n=b(c.body.atmoRadius-vector.dist(c.body.center,c.position),1)m='Atmo Dist = 'else n=b(vector.dist(c.body.center,c.position)-c.body.radius*1.05)m='Surf Dist ~ 'end;m=i..m..printDistance(n)if l>n and n>0 then g=h end;k[#k+1]=getTDiv(\"altBar\",50,50,HUD.dynamicSVG.altitudeBar)end;k[#k+1]=[[<div class=\"atmoAlert\">Brake Dist = ]]..colorSpan(g,printDistance(l,true))..m..j;k[#k+1]=[[<div class=\"atmoAlert\" style=\"transform:translate(36.2vw,0vh);text-align:right;\">Vertical Speed: ]]..b(c.zSpeedKPH,1)..j;if d.enabled and not a.maneuverMode then k[#k+1]=getAPDiv(\"AUTOPILOT\")elseif d.landingMode or ship.landingMode or c.isLanded then k[#k+1]=getAPDiv(\"PARKING MODE\")elseif ship.takeoff then k[#k+1]=getAPDiv(\"TAKEOFF\")elseif ship.vertical then k[#k+1]=getAPDiv(\"VERTICAL\")elseif ship.gotoLock~=nil then k[#k+1]=getAPDiv(\"TRAVEL\")end;if a.safetyThrottle then k[#k+1]=getBrakeDiv(\"SAFETY THROTTLE\",h)elseif a.altitudeHold then k[#k+1]=getBrakeDiv(\"HODOR! \"..b(ship.holdAltitude or 0,1)..\"m\",h)elseif inputs.brakeLock then k[#k+1]=getBrakeDiv(\"BRAKE LOCK\",h)elseif inputs.brake==1 then k[#k+1]=getBrakeDiv(\"BRAKE\",h)end;local o=false;if a and type(a.collision)=='table'then local p=b(e*1.2)local q=c.zSpeedKPH;if a.collision and a.collision.hasAtmosphere then local r=b(vector.dist(c.body.center,c.position)-a.collision.atmoRadius)if p>r and r>0 and q<0 and c.constructSpeed>c.burnSpeed then o=true end else local s=b(vector.dist(c.body.center,c.position)-a.collision.radius*1.1)if p>s and s>0 and q<0 then o=true end end;if o then k[#k+1]=getDiv(\"collision\",\"Collision Alert: \"..tostring(a.collision.name or\"(unknown)\"))end;if d.userConfig.throttleBurnProtection and not a.orbitalHold and not d.enabled and not d.landingMode and cData.inAtmo then if o then a.safetyThrottle=true;if controlMode()=='cruise'then swapControl()end;if f<5 then navCom:setThrottleCommand(axisCommandId.longitudinal,0)end end;if a.safetyThrottle and o then a.collisionBrake=true;brakeCtrl=30;inputs.brake=1 end end end;if not o and a.collisionBrake then brakeCtrl=31;a.collisionBrake=false;if not a.brakeState then inputs.brake=0 end end;k[#k+1]='<style>'..HUD.staticCSS.css..'></style>'local t=nil;if d.target~=nil then t=library.getPointOnScreen(getXYZ(d.target))end;local u=vec3(c.wFwd)*20+vec3(c.worldUp)*2;local v=getReticle(u)local w=library.getPointOnScreen(v)local x=vectorRotated(targetAngularVelocity,c.wFwd)local y=getReticle(x*10)local z=library.getPointOnScreen(y)local A=c.wVelDir*c.constructSpeed;local B=getReticle(A)local C=library.getPointOnScreen(B)local D=getReticle(-A)local E=library.getPointOnScreen(D)if w[1]<=1 and w[2]<=1 then local F=[[ <div class=\"crosshair\" style=\"position:absolute;left:]]..w[1]*98 ..[[%;top:]]..w[2]*101 ..[[%;margin-top:0em;margin-left:0em;\"> <svg style=\"width:2vw;height:2vh;\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"> <path d=\"M23.6465 37.8683L24.0001 38.2218L24.3536 37.8683L26.3536 35.8684L26.5 35.7219V35.5148V26.5H35.5148H35.7219L35.8684 26.3536L37.8684 24.3536L38.2219 24L37.8684 23.6465L35.8684 21.6465L35.7219 21.5H35.5148H26.5V12.4852V12.2781L26.3536 12.1317L24.3536 10.1317L24.0001 9.77818L23.6465 10.1317L21.6465 12.1318L21.5 12.2782V12.4854V21.5H12.4854H12.2782L12.1318 21.6465L10.1318 23.6465L9.77824 24L10.1318 24.3536L12.1318 26.3536L12.2782 26.5H12.4854H21.5V35.5147V35.7218L21.6465 35.8682L23.6465 37.8683Z\" fill=\"#00dd00\" stroke=\"#333333\"/> </svg></div>]]k[#k+1]=F end;if t~=nil then k[#k+1]=getTDivP(\"dot\",t,HUD.staticSVG.targetReticle)k[#k+1]=getTDivP(\"dottext\",t,HUD.dynamicSVG.targetReticle2)end;k[#k+1]=getTDivP(\"dot\",z,HUD.staticSVG.centerofMass)k[#k+1]=getTDivP(\"dot\",C,HUD.staticSVG.progradeReticle)k[#k+1]=getTDivP(\"dot\",E,HUD.staticSVG.retrogradeReticle)return table.concat(k)end\nend)\npackage.preload['Saga:hud/widget.lua']=(function()\nanchorENUM={top='top',topLeft='topLeft',topRight='topRight',bottom='bottom',bottomLeft='bottomLeft',bottomRight='bottomRight'}Widget={anchor=nil,width=200,edgeMargin=45,margin=10,headerHeight=0,padding=0,rowCount=0,rowHeight=0,rowMargin=0,visible=true}function Widget:new(a)a=a or{}setmetatable(a,self)self.__index=self;return a end;function Widget:init()end;function Widget:build()end;function Widget:render(b,c)if self.build~=nil and type(self.build)=='function'then if b==nil then b=0 end;local d=HUD.Config.scaleMultiplier;local e=HUD.Config.nativeScaleMultiplier;local f=self:build()if not self.visible then return''end;local g={}if self.class~=nil then g={self.class}end;table.insert(g,'widget')local h=' class=\"'..table.concat(g,' ')..'\"'local i=c*d;local j=self.width*d;local k=self.rowCount*(self.rowHeight+self.rowMargin)-self.rowMargin+self.headerHeight;local l=(k+self.padding*2)*d;local m=self.edgeMargin*d;local n=b*d;local o=m;local p=''if self.anchor==anchorENUM.top then o=4*d;n=n+HUD.screenWidth/2-j/2;p='top: '..o..'px; left: '..n..'px;'elseif self.anchor==anchorENUM.topLeft then n=n+m;p='top: '..o..'px; left: '..n..'px;'elseif self.anchor==anchorENUM.topRight then n=n+m;n=n+440*e;p='top: '..o..'px; right: '..n..'px;'elseif self.anchor==anchorENUM.bottom then n=n+HUD.screenWidth/2-i/2;p='bottom: '..o..'px; left: '..n..'px;'elseif self.anchor==anchorENUM.bottomLeft then n=n+m;p='bottom: '..o..'px; left: '..n..'px;'elseif self.anchor==anchorENUM.bottomRight then n=n+m;p='bottom: '..o..'px; right: '..n..'px;'else p='top: 50%; left: '..n..'px;'end;local q=2;local r='width:'..j+q..'px;'if l>0 then r='width:'..j+q..'px;height:'..l+q..'px;'end;return'<div'..h..' style=\"'..p..r..'\">'..f..'</div>'end end\nend)\npackage.preload['Saga:hud/menuSystem.lua']=(function()\nlocal a,b,c=math.floor,table.insert,table.concat;local d='<svg viewBox=\"0 0 100 100\" x=\"'MenuSystem={config={optionWidth=50,headerHeight=20,optionHeight=20,optionMargin=0,visOptCnt=12,activeOption=0,activeCategory=nil,legendVisible=true},rowCount=0,options={},optionCategories={},confirmCount=0,lastOptionChangeTime=0,lastInputs={},lastInputTimes={},addCategory=function(e,f,g,h,actions,i)local j={text=f,key=g,parentKey=h,actions=actions,state={hovering=false,active=false},permanent=i}b(e.optionCategories,j)return j end,addOption=function(e,k,g,actions,i)local l={text=k,category=g,actions=actions,state={hovering=false,active=false},permanent=i}b(e.options,l)return l end,clearCategory=function(e,g)for m=#e.options,1,-1 do local l=e.options[m]if l.category==g and l.permanent~=true then table.remove(e.options,m)end end;for m=#e.optionCategories,1,-1 do local j=e.optionCategories[m]if j.parentKey==g and j.permanent~=true then table.remove(e.optionCategories,m)end end end,onClose=function(e)end,toggleLegend=function(e)e.config.legendVisible=not e.config.legendVisible;Config:setValue(configDatabankMap.menuKeyLegend,e.config.legendVisible)end,updateState=function(e,l,n)if l.actions~=nil and l.actions.getActive~=nil then l.state.active=l.actions.getActive.func(l,l.actions.getActive.arg)end;l.state.hovering=n end,openCategory=function(e,g,o)e.config.activeOption=0;e.config.activeCategory=g;local m=0;for p,j in ipairs(e.optionCategories)do if j.parentKey==g then if o~=nil and j.key==o.key then e.config.activeOption=m;break end;m=m+1 end end end,render=function(e)local q={}e.rowCount=0;e.hoveredEntry=nil;local r=0;for p,j in ipairs(e.optionCategories)do if j.parentKey==e.config.activeCategory and j.key~=e.config.activeCategory then r=r+1 end end;for p,l in ipairs(e.options)do if l.category==e.config.activeCategory then r=r+1 end end;if r-1<e.config.activeOption then e.config.activeOption=r-1 elseif e.config.activeOption<0 then e.config.activeOption=0 end;q[#q+1]=e:renderCategory(e:getCategory(e.config.activeCategory))return c(q)end,setActiveOption=function(e,s)local t=0;local u=type(s)=='table'and s.key~=nil;for p,j in ipairs(e.optionCategories)do if j.parentKey==e.config.activeCategory and j.key~=e.config.activeCategory then t=t+1;if u and j.key==s.key then e.config.activeOption=t;return end end end;if type(s)=='number'then e.config.activeOption=t+s end end,renderCategory=function(e,v)local q={}local w={}if v~=nil and v.key~=nil then local x=e:getCategory(v.key)b(w,1,x)while x.parentKey~=nil and x.parentKey~=x.key do x=e:getCategory(x.parentKey)b(w,1,x)end end;local y={}for p,x in ipairs(w)do b(y,x.text)end;if#y==0 then b(y,'Main Menu')end;local z=c(y,' > ')local A=HUD.Config.scaleMultiplier;local B=e.config.optionHeight*A;local C=e.config.optionMargin*A;local D=B+C;local E=e.config.headerHeight*A;local F=4*A;local G=a(B/2)local H=a(E-F)q[#q+1]='<text class=\"outlined\" x=\"'..F..'\" y=\"'..G..'\">'..z..'</text>'q[#q+1]='<rect class=\"separator\" x='..F..'\" y=\"'..H..'\" width=\"'..e.config.optionWidth*A..'\" height=\"1\" />'local I=0;local J=e.config.visOptCnt;if e.config.activeOption>e.config.visOptCnt then I=e.config.activeOption-e.config.visOptCnt;J=e.config.activeOption end;local t=0;local K=0;for p,j in ipairs(e.optionCategories)do if j.parentKey==v.key and j.key~=v.key then if t<=J and t>=I then local n=t==e.config.activeOption;if n then e.hoveredEntry=j end;e:updateState(j,n)q[#q+1]=e:renderEntry(j,K)K=K+1 end;t=t+1 end end;local L=0;local M=0;for p,l in ipairs(e.options)do if l.category==v.key then local N=L+t;if N<=J and N>=I then local n=N==e.config.activeOption;if n then e.hoveredEntry=l end;e:updateState(l,n)q[#q+1]=e:renderEntry(l,M+K)M=M+1 end;L=L+1 end end;local O=L+t;local Q=K+M;e.rowCount=e.rowCount+Q;if e.config.visOptCnt<O then q[#q+1]=e:renderScrollBar(H,O,Q,I,J)end;local R=0;if e.config.legendVisible then local S=H+D*e.rowCount+D;local T,U=e:renderActionLegend(S)R=S+U;q[#q+1]=T else R=H+D*e.rowCount+10*A end;if e.hoveredEntry~=nil then q[#q+1]=e:renderTooltip(R,e.config.legendVisible)end;return c(q)end,renderScrollBar=function(e,V,O,Q,I,J)local q={}local A=HUD.Config.scaleMultiplier;local B=e.config.optionHeight*A;local C=e.config.optionMargin*A;local D=B+C;local W=10*A;local X=V+C/2+W/2;local Y=-12*A;local Z=Q*D-W;local _=5*A;local a0=2*A;local a1=X+I/O*Z;local a2=X+(J+1)/O*Z;local a3=a2-a1;local a4=5*A;local a5=10*A;q[#q+1]=d..Y-a5/2 ..'\" y=\"'..X-a5-a4 ..'\" width=\"'..a5 ..'\" height=\"'..a5 ..'\">'q[#q+1]=HUD.staticSVG.upKey..'</svg>'q[#q+1]=d..Y-a5/2 ..'\" y=\"'..X+Z+a4 ..'\" width=\"'..a5 ..'\" height=\"'..a5 ..'\">'q[#q+1]=HUD.staticSVG.downKey..'</svg>'q[#q+1]='<rect class=\"separator\" x=\"'..Y-a0/2 ..'\" y=\"'..X..'\" width=\"'..a0 ..'\" height=\"'..Z..'\"/>'q[#q+1]='<rect class=\"separator\" x=\"'..Y-_/2 ..'\" y=\"'..a1 ..'\" width=\"'.._..'\" height=\"'..a3 ..'\"/>'return c(q)end,renderActionLegend=function(e,V)local a6=e.hoveredEntry;local q={}actions={}if a6~=nil then actions.back={}if a6.key~=nil then actions.main={}end;if a6.actions~=nil then if a6.actions.back~=nil then actions.back=a6.actions.back end;if a6.actions.main~=nil then actions.main=a6.actions.main end;if a6.actions.alt~=nil then actions.alt=a6.actions.alt end;if a6.actions.shift~=nil then actions.shift=a6.actions.shift end;if a6.actions.altUpDown~=nil then actions.altUpDown=a6.actions.altUpDown end;if a6.actions.input~=nil then actions.input=a6.actions.input end end end;local a7={{action=actions.back},{action=actions.main},{action=actions.alt},{action=actions.shift}}if actions.altUpDown~=nil then a7[#a7+1]={action=actions.altUpDown}end;if actions.input~=nil then a7[#a7+1]={action=actions.input}end;local A=HUD.Config.scaleMultiplier;local C=e.config.optionMargin*A;local a8=10*A;local a9=50*A;local aa=a9+12*A;for m,ab in ipairs(a7)do local ac=false;if m==3 and inputs.alt then ac=true elseif m==5 and inputs.alt then ac=true elseif m==4 and inputs.shift and not inputs.alt then ac=true end;q[#q+1]='<g class=\"menuLegend\" data-active=\"'..tostring(ac)..'\">'local ad=ab.action;local ae=V+a8*(m-1)local af=a8*0.55;if m<=5 then q[#q+1]='<svg class=\"menuLegendGlyph\" viewBox=\"0 0 100 100\" x=\"'..a9 ..'\" y=\"'..ae-(a8-af)..'\" width=\"'..af..'\" height=\"'..af..'\">'local ag=HUD.staticSVG.leftKey;if m>1 then ag=HUD.staticSVG.rightKey end;if m==5 and actions.altUpDown~=nil then ag=HUD.staticSVG.upDownKey end;q[#q+1]=ag;q[#q+1]='</svg>'end;local ah='<text class=\"menuLegendKey\" x=\"'..a9-C..'\" y='..ae;if m==3 then q[#q+1]=ah..'>alt +</text>'elseif m==4 then q[#q+1]=ah..'>shift +</text>'elseif m==5 and actions.altUpDown~=nil then q[#q+1]=ah..'>alt +</text>'end;if ad~=nil then local ai='Open'if a6 and a6.key==nil then ai='Select'end;if m==1 then ai='Back'end;if m==#a7 then ai='Lua chat input is active'end;if ad.text~=nil then ai=ad.text end;q[#q+1]='<text class=\"menuLegendText\" x=\"'..aa..'\" y='..ae..'>'..ai..'</text>'end;q[#q+1]='</g>'end;return c(q),#a7*a8 end,renderEntry=function(e,l,aj)local q={}local A=HUD.Config.scaleMultiplier;local n=l.state.hovering;local ac=l.state.active;local ak={}if n then b(ak,'data-hover=\"true\"')end;if ac then b(ak,'data-active=\"true\"')end;local al=' '..c(ak,' ')local am=class('menuOption')local an=e.config.optionWidth*A;local B=e.config.optionHeight*A;local C=e.config.optionMargin*A;local D=B+C;local E=e.config.headerHeight*A;local ao=a(5*A)local ap=1*A;local aq=a(D*aj+E)local ar=a(aq+B/2)local as=a(aq+B)local at=0;local au=a(C)local av=a(an)local aw=a(an-C)q[#q+1]='<g'..am..al..'>'local ax,ay,az=0,0,system.getArkTime()if l.category==nil then ax=a(B)local aA=a(B*0.75)local aB=a((B-aA)/2)q[#q+1]=d..av-aA..'\" y=\"'..aq+aB..'\" width=\"'..aA..'\" height=\"'..aA..'\">'..HUD.staticSVG.categoryIndicator..'</svg>'end;if n then local aC=0.2;local aD=(az-e.lastOptionChangeTime)/aC;aD=clamp(aD,0,1)ay=2*(1-aD)local aE=aD*B;local aF=ar-aE/2;q[#q+1]='<rect x=\"0\" y=\"'..aF..'\" width=\"'..an-ax..'\" height=\"'..aE..'\" />'if inputs.mr and e.holdAction~=nil and not e.holdActionTriggered then local aG=(az-e.lastInputTimes.right)/e.holdAction.hold;q[#q+1]='<rect class=\"inputHold\" x=\"0\" y=\"'..aF..'\" width=\"'..(an-ax)*aG..'\" height=\"'..aE..'\" />'end end;if ac then ao=ao*2 end;local aH=generateRectCorners(at+ay,aq+ay,av-ay-ax,as-ay,ao,ap)if ac or n then q[#q+1]=aH end;q[#q+1]='<text x=\"'..au..'\" y=\"'..ar..'\">'..l.text..'</text>'if l.actions~=nil and l.actions.input~=nil and n then local aA=a(B*0.6)local aI=a((B-aA)/2)q[#q+1]=d..av-ax-aA-aI..'\" y=\"'..aq+aI..'\" width=\"'..aA..'\" height=\"'..aA..'\">'q[#q+1]=HUD.staticSVG.editableBg;if system.getArkTime()/0.75%1>0.5 then q[#q+1]=HUD.staticSVG.editableGlyph end;q[#q+1]='</svg>'ax=ax+aA+aI end;if l.actions~=nil and l.actions.getValue~=nil then local aJ=nil;if type(l.actions.getValue)=='table'then aJ=l.actions.getValue.func(l,l.actions.getValue.arg)elseif type(l.actions.getValue)=='boolean'then aJ=l.actions.getValue elseif type(l.actions.getValue)=='string'or type(l.actions.getValue)=='number'then aJ=l.actions.getValue end;if type(aJ)=='boolean'then local aA=a(B*0.6)local aI=a((B-aA)/2)q[#q+1]=d..av-ax-aA-aI..'\" y=\"'..aq+aI..'\" width=\"'..aA..'\" height=\"'..aA..'\">'q[#q+1]=ternary(aJ,HUD.staticSVG.checkBoxChecked,HUD.staticSVG.checkBoxUnchecked)q[#q+1]='</svg>'elseif aJ~=nil then q[#q+1]='<text class=\"valueText\" x=\"'..aw-ax..'\" y=\"'..ar..'\">'..aJ..'</text>'end end;q[#q+1]='</g>'return c(q)end,renderTooltip=function(e,V,aK)if e.hoveredEntry.actions==nil or e.hoveredEntry.actions.tooltip==nil then return end;local q={}local A=HUD.Config.scaleMultiplier;local an=e.config.optionWidth*A;local a8=11*A;local aL=10*A+V;local aa=10*A;local aM=5*A;q[#q+1]='<g class=\"menuTooltip\">'if aK then q[#q+1]='<rect class=\"separator\" x=\"'..aM..'\" y=\"'..V..'\" width=\"'..an-aM*2 ..'\" height=\"1\"/>'end;local aN=e.hoveredEntry.actions.tooltip;if type(e.hoveredEntry.actions.tooltip)=='string'then aN={e.hoveredEntry.actions.tooltip}end;for m,aO in ipairs(aN)do local aP=aL+a8*(m-1)q[#q+1]='<text class=\"menuTooltipText\" x=\"'..aa..'\" y=\"'..aP..'\">'..aO..'</text>'end;q[#q+1]='</g>'return c(q)end,updateInputs=function(e)local inputs=inputs;local az=system.getArkTime()local aQ=0.2;local aR=e.holdAction==nil;local aS=inputs.mu and(not e.lastInputs.up or aR and az-e.lastInputTimes.up>aQ)local aT=inputs.md and(not e.lastInputs.down or aR and az-e.lastInputTimes.down>aQ)local aU=inputs.ml and(not e.lastInputs.left or aR and az-e.lastInputTimes.left>aQ)local aV=inputs.mr and(not e.lastInputs.right or aR and az-e.lastInputTimes.right>aQ)e.lastInputs={up=inputs.mu,down=inputs.md,left=inputs.ml,right=inputs.mr}local a6=e.hoveredEntry;if aS then if inputs.alt and a6~=nil and a6.actions~=nil and a6.actions.altUpDown~=nil then a6.actions.altUpDown.func(true,a6.actions.altUpDown.arg)else e.config.activeOption=e.config.activeOption-1 end;e.lastOptionChangeTime=az;e.lastInputTimes.up=az end;if aT then if inputs.alt and a6~=nil and a6.actions~=nil and a6.actions.altUpDown~=nil then a6.actions.altUpDown.func(false,a6.actions.altUpDown.arg)else e.config.activeOption=e.config.activeOption+1 end;e.lastOptionChangeTime=az;e.lastInputTimes.down=az end;if aU then e.lastInputTimes.left=az;local o=e:getCategory(e.config.activeCategory)if o.previousCategoryKey~=nil then e:openCategory(o.previousCategoryKey,o)elseif o.parentKey~=nil then e:openCategory(o.parentKey,o)else e:openCategory(nil,o)end;if a6~=nil and a6.actions~=nil and a6.actions.back~=nil then o.actions.back.func(o,o.actions.back.arg)a6.actions.back.func(a6,a6.actions.back.arg)elseif o.actions~=nil and o.actions.back~=nil then o.actions.back.func(o,o.actions.back.arg)end end;if aV then e.lastInputTimes.right=az;local a6=e.hoveredEntry;if a6~=nil then if a6.actions==nil and a6.key~=nil then e:openCategory(a6.key)else if inputs.alt and a6.actions.alt~=nil then if a6.actions.alt.hold~=nil then e.holdAction=a6.actions.alt;e.holdActionTriggered=false else a6.actions.alt.func(a6,a6.actions.alt.arg)end elseif inputs.shift and a6.actions.shift~=nil then if a6.actions.shift.hold~=nil then e.holdAction=a6.actions.shift;e.holdActionTriggered=false else a6.actions.shift.func(a6,a6.actions.shift.arg)end elseif a6.actions.main~=nil then if a6.actions.main.hold~=nil then e.holdAction=a6.actions.main;e.holdActionTriggered=false else a6.actions.main.func(a6,a6.actions.main.arg)end elseif a6.key~=nil then e:openCategory(a6.key)elseif a6.actions.input~=nil then P('[I] Enter any text here in chat to input a new value')end end end elseif inputs.mr and e.holdAction~=nil then local aG=az-e.lastInputTimes.right;if e.holdAction.hold<aG and not e.holdActionTriggered then e.holdActionTriggered=true;e.holdAction.func(e.hoveredEntry,e.holdAction.arg)end elseif e.holdAction~=nil then e.holdAction=nil end end,setPreviousCategoryKey=function(e,g,aW)local j=e:getCategory(g)if j~=nil then j.previousCategoryKey=aW end end,getCategory=function(e,g)if g==nil then return{key=nil,parentKey=nil}end;for p,j in ipairs(e.optionCategories)do if j.key==g then return j end end end,getHoveredEntry=function(e)local m=0;for p,j in ipairs(e.optionCategories)do if j.parentKey==e.config.activeCategory and j.parentKey~=j.key then if e.config.activeOption==m then return j end;m=m+1 end end;for p,l in ipairs(e.options)do if l.category==e.config.activeCategory then if e.config.activeOption==m then return l end;m=m+1 end end end}function generateRectCorners(aX,aY,aZ,a_,ao,ap)if ap==nil then ap=1 end;local q,b0,b1,b2,b3,b4={},'<rect class=\"separator\" x=\"','\" width=\"','\" height=\"','\" />','\" y=\"'q[#q+1]=b0 ..aX..b4 ..aY..b1 ..ao..b2 ..ap..b3;q[#q+1]=b0 ..aX..b4 ..aY..b1 ..ap..b2 ..ao..b3;q[#q+1]=b0 ..aX..b4 ..a_-ap..b1 ..ao..b2 ..ap..b3;q[#q+1]=b0 ..aX..b4 ..a_-ao..b1 ..ap..b2 ..ao..b3;q[#q+1]=b0 ..aZ-ao..b4 ..aY..b1 ..ao..b2 ..ap..b3;q[#q+1]=b0 ..aZ-ap..b4 ..aY..b1 ..ap..b2 ..ao..b3;q[#q+1]=b0 ..aZ-ao..b4 ..a_-ap..b1 ..ao..b2 ..ap..b3;q[#q+1]=b0 ..aZ-ap..b4 ..a_-ao..b1 ..ap..b2 ..ao..b3;return c(q)end\nend)\npackage.preload['Saga:hud/mainMenuActions.lua']=(function()\nfunction addCustomPos(a)local b=parsePosString(a)if b.altitude==nil then return P('[E] Invalid ::pos{...} string')end;addPos(b)end;function addCurrentPos()local b={latitude=round2(cData.position.x,5),longitude=round2(cData.position.y,5),altitude=round2(cData.position.z,5)}addPos(b)end;function addPos(b)local c=mapPosToWorldPos(b)if c==nil then return P('[E] Invalid ::pos string')end;local d=ternary(b.bodyId==0,nil,b.bodyId)local e={x=b.latitude,y=b.longitude,z=b.altitude}local f=findClosestBody(c)local g=getAltitude(c)local h=getLoc(f,g)local i=(f~=nil and f.name or'Space')..' '..h..' ['..math.ceil(g)..'m]'local j={name=i,coordinates=e,systemId=nil,bodyId=d}RouteDatabase:addPoint(RouteDatabase.currentEditId,j)Widgets.mainMenu:onEditedRouteChanged()end;function printPoint(k,l)local m=tonumber(RouteDatabase.currentEditId)if l~=nil and m~=nil then P(RouteDatabase:getPointPosString(m,l))end end;function setRouteDestination(k,l)AutoPilot:setActiveRoute(l)end;function setPointDestination(k,l)AutoPilot:setActiveRoute(RouteDatabase.currentEditId,l)end;function newRoute(k,l)RouteDatabase:newRoute()Widgets.mainMenu:onEditedRouteChanged()Widgets.mainMenu.optionMenu:setPreviousCategoryKey(categoryENUM.EditRoute,categoryENUM.RouteList)Widgets.mainMenu.optionMenu:openCategory(categoryENUM.EditRoute)end;function editRouteName(a,l)RouteDatabase:renameRoute(RouteDatabase.currentEditId,a)end;function editPointName(a,l)local n=RouteDatabase;n:renamePoint(n.currentEditId,l,a)P('Renamed ['..n.currentEditId..'] point ['..l..'] to '..a)Widgets.mainMenu:onEditedRouteChanged()end;function getEditRouteName(k,l)local n=RouteDatabase;if n.currentEditId~=nil and n.routes[n.currentEditId]~=nil then return n.routes[n.currentEditId].name end;return'Invalid route id'end;function editRoute(k,l)RouteDatabase.currentEditId=l;Widgets.mainMenu:onEditedRouteChanged()Widgets.mainMenu.optionMenu:setPreviousCategoryKey(categoryENUM.EditRoute,categoryENUM.RouteListAll)Widgets.mainMenu.optionMenu:openCategory(categoryENUM.EditRoute)end;function unEditRoute(k,l)Widgets.mainMenu.optionMenu:setActiveOption(RouteDatabase.currentEditId-1)RouteDatabase.currentEditId=nil end;function deleteRoute(k,l)RouteDatabase:deleteRoute(l)end;function deletePoint(k,l)RouteDatabase:deletePoint(RouteDatabase.currentEditId,l)Widgets.mainMenu:onEditedRouteChanged()end;function movePoint(o,l)local p=RouteDatabase:movePoint(RouteDatabase.currentEditId,l,ternary(o,l-1,l+1))Widgets.mainMenu.optionMenu:setActiveOption(p+2)Widgets.mainMenu:onEditedRouteChanged()end;function selectDatabank(k,l)if l.type=='config'then Config:selectDb(l.databank)elseif l.type=='route'then RouteDatabase:selectDb(l.databank)elseif l.type=='usb'then RouteDatabase:selectUsbDb(l.databank)end end;function setConfig(k,l)Config:setValue(l.key,l.value)end;function setConfigInput(a,l)Config:setValue(l,a)end;function getActiveDbName(k,l)if l=='config'and Config.databank~=nil then return Config.databank.name elseif l=='routes'and RouteDatabase.databank~=nil then return RouteDatabase.databank.name elseif l=='usb'and RouteDatabase.usbDatabank~=nil then return RouteDatabase.usbDatabank.name end;return'-'end;function menuActionTemplate(k,l)end\nend)\npackage.preload['Saga:hud/static_svg.lua']=(function()\nHUD.staticSVG={categoryIndicator='<path d=\"M0,0 L0,100 L100,50 Z\"/>',upKey='<path class=\"menuLegendKey\" d=\"M50,0 L0,100 L100,100 Z\"/>',downKey='<path class=\"menuLegendKey\" d=\"M0,0 L100,0 L50,100 Z\"/>',rightKey='<path class=\"menuLegendKey\" d=\"M0,0 L0,100 L100,50 Z\"/>',leftKey='<path class=\"menuLegendKey\" d=\"M0,50 L100,100 L100,0 Z\"/>',upDownKey='<path class=\"menuLegendKey\" d=\"M0,0 L50,100 L-50,100 Z\"/><path class=\"menuLegendKey\" d=\"M50,0 L150,0 L100,100 Z\"/>',checkBoxChecked='<rect class=\"checkBox checked\" width=\"100\" height=\"100\" y=\"0\"/>',checkBoxUnchecked='<rect class=\"checkBox\" width=\"100\" height=\"100\" y=\"0\"/>',editableBg='<rect class=\"editableBg\" width=\"100\" height=\"100\"/>',editableGlyph='<rect class=\"editableGlyph\" width=\"80\" height=\"15\" x=\"10\" y=\"75\"/>',progradeReticle=[[ <svg viewBox=\"0 0 100 100\"> <circle style=\"stroke-width: 4px; stroke: rgb(20, 220, 40); fill: none;\" cx=\"75\" cy=\"75\" r=\"33.333\" transform=\"matrix(1, 0, 0, 0.999999, -24.999976, -24.999961)\" bx:origin=\"0.331 0.224\"/> <path style=\"fill: rgb(46, 139, 87); stroke-width: 4px; stroke: rgb(20, 220, 40);\" d=\"M 83.333 50 L 100 50\" bx:origin=\"-2.677 0\"/> <path style=\"fill: rgb(46, 139, 87); stroke-width: 4px; stroke: rgb(20, 220, 40);\" d=\"M 60.767 50 L 77.433 50\" transform=\"matrix(-1, 0, 0, -1, 77.435763, 100.000003)\" bx:origin=\"-1.323 0\"/> <path style=\"fill: rgb(46, 139, 87); stroke-width: 4px; stroke: rgb(20, 220, 40);\" d=\"M 101.733 31.6 L 118.4 31.6\" transform=\"matrix(0, 1, -1, 0, 81.598635, -18.398635)\" bx:origin=\"-3.104 0\"/> <path style=\"fill: rgb(46, 139, 87); stroke-width: 4px; stroke: rgb(20, 220, 40);\" d=\"M 64.933 31.6 L 81.6 31.6\" transform=\"matrix(0, -1, 1, 0, 18.399367, 81.599368)\" bx:origin=\"-0.896 0\"/> <circle style=\"fill: rgb(46, 139, 87); fill-opacity: 0; stroke: rgb(20, 220, 40); stroke-width: 2px;\" cx=\"50\" cy=\"50\" r=\"2.5\" bx:origin=\"0.5 0.5\"/> </svg> ]],retrogradeReticle=[[ <svg viewBox=\"125 125 150 150\"> <path style=\"fill: rgb(46, 139, 87); stroke-width: 4px; stroke: rgb(20, 220, 40);\" d=\"M 150 150 L 250 250\" bx:origin=\"0.5 0.5\"/> <path style=\"fill: rgb(46, 139, 87); stroke-width: 4px; stroke: rgb(20, 220, 40);\" d=\"M 150 150 L 250 250\" transform=\"matrix(0, 1, -1, 0, 400.000012, 0)\" bx:origin=\"0.5 0.5\"/> <circle style=\"stroke-width: 4px; stroke: rgb(20, 220, 40); fill: none;\" cx=\"200\" cy=\"200\" r=\"50\"/> <path style=\"fill: rgb(46, 139, 87); stroke-width: 4px; stroke: rgb(20, 220, 40);\" d=\"M 250 200 L 275 200\"/> <path style=\"fill: rgb(46, 139, 87); stroke-width: 4px; stroke: rgb(20, 220, 40);\" d=\"M 125 200 L 150 200\" transform=\"matrix(-1, 0, 0, -1, 275.000008, 400.000012)\"/> <path style=\"fill: rgb(46, 139, 87); stroke-width: 4px; stroke: rgb(20, 220, 40);\" d=\"M 249.725 200.275 L 274.725 200.275\" transform=\"matrix(0, 1, -1, 0, 400.275006, 0.274988)\" bx:origin=\"-1.989 0\"/> <path style=\"fill: rgb(46, 139, 87); stroke-width: 4px; stroke: rgb(20, 220, 40);\" d=\"M 250.275 200.275 L 275.275 200.275\" transform=\"matrix(0, -1, 1, 0, -0.275, 400.275006)\" bx:origin=\"-2.011 0\"/> </svg> ]],targetReticle=[[ <svg viewBox=\"-62.5 -62.5 125 125\"> <path d=\"M 62.5 0 A 62.5 62.5 0 0 1 0 62.5 A 62.5 62.5 0 0 1 -62.5 0 A 62.5 62.5 0 0 1 0 -62.5 A 62.5 62.5 0 0 1 62.5 0 Z\" style=\"fill: none; stroke-dasharray: 65; stroke: rgb(246, 0, 254); stroke-width: 6px;\"/> <path d=\"M 5 0 A 5 5 0 0 1 0 5 A 5 5 0 0 1 -5 0 A 5 5 0 0 1 0 -5 A 5 5 0 0 1 5 0 Z\" style=\"fill: rgb(246, 0, 254); stroke: rgb(246, 0, 254);\"/> </svg> ]],maneuverNode=[[ <svg viewBox=\"-3.175 0 106.391 103.181\"> <path style=\"fill: rgb(216, 216, 216); stroke-width: 5px; stroke: rgb(21, 0, 255);\" d=\"M 22.767 1.724 L 76.628 1.715\" transform=\"matrix(-1, 0, 0, -1, 99.718166, 3.439)\" bx:origin=\"0.5 -5363.962451\"/> <path style=\"fill: rgb(216, 216, 216); stroke: rgb(21, 0, 255); stroke-width: 3px;\" d=\"M 34.86 15.167 L 65.007 15.161\" transform=\"matrix(0, 1, -1, 0, 65.187944, -34.859944)\" bx:origin=\"1.658538 1.046562\"/> <path d=\"M 52.5 50 C 52.5 51.381 51.38 52.5 50 52.5 C 48.619 52.5 47.5 51.381 47.5 50 C 47.5 48.619 48.619 47.5 50 47.5 C 51.38 47.5 52.5 48.619 52.5 50 Z\" style=\"stroke: rgb(21, 0, 255); fill: rgb(21, 0, 255);\" bx:origin=\"0 0\"/> <path style=\"fill: rgb(216, 216, 216); stroke-width: 5px; stroke: rgb(21, 0, 255);\" d=\"M 23.09 98.285 L 76.951 98.276\" transform=\"matrix(0.707107, -0.707107, 0.707107, 0.707107, -20.694729, 50.010377)\" bx:origin=\"0.5 -5363.962451\"/> <path style=\"fill: rgb(216, 216, 216); stroke: rgb(21, 0, 255); stroke-width: 3px;\" d=\"M 0.021 50 L 30.168 49.994\" transform=\"matrix(-0.707107, -0.707107, 0.707107, -0.707107, 50.035558, 120.725971)\" bx:origin=\"1.658538 1.046562\"/> <path style=\"fill: rgb(216, 216, 216); stroke-width: 5px; stroke: rgb(21, 0, 255);\" d=\"M 23.09 98.285 L 76.951 98.276\" transform=\"matrix(0.707107, 0.707107, -0.707107, 0.707107, 49.996057, -20.729293)\" bx:origin=\"0.5 -5363.962451\"/> <path style=\"fill: rgb(216, 216, 216); stroke: rgb(21, 0, 255); stroke-width: 3px;\" d=\"M 0.021 50 L 30.168 49.994\" transform=\"matrix(0.707107, -0.707107, 0.707107, 0.707107, -20.704741, 50.014894)\" bx:origin=\"1.658538 1.046562\"/> </svg> ]],centerofMass=[[ <svg viewBox=\"-74.652 -64 148.511 131.373\" > <path style=\"fill: rgb(216, 216, 216); stroke-width: 5px; stroke: rgb(255, 60, 0);\" d=\"M -42.75 -62.99 L 42.25 -63\" transform=\"matrix(-1, 0, 0, -1, 0.01, -125.990009)\" bx:origin=\"0.503 0.5\"/> <path style=\"fill: rgb(216, 216, 216); stroke: rgb(255, 60, 0); stroke-width: 3px;\" d=\"M -17.6 -46.39 L 17.4 -46.4\" transform=\"matrix(0, 1, -1, 0, -46.390001, -46.400003)\" bx:origin=\"0.503 0.5\"/> <path style=\"fill: rgb(216, 216, 216); stroke-width: 5px; stroke: rgb(255, 60, 0);\" d=\"M 9.977 30.349 L 94.977 30.339\" transform=\"matrix(0.5, -0.866025, 0.866025, 0.5, 0.08732, 60.839247)\" bx:origin=\"0.503 0.5\"/> <path style=\"fill: rgb(216, 216, 216); stroke: rgb(255, 60, 0); stroke-width: 3px;\" d=\"M 20.751 22.051 L 55.751 22.041\" transform=\"matrix(-0.866025, -0.5, 0.5, -0.866025, 60.550264, 60.316404)\" bx:origin=\"0.503 0.5\"/> <path style=\"fill: rgb(216, 216, 216); stroke-width: 5px; stroke: rgb(255, 60, 0);\" d=\"M -96.025 30.583 L -11.025 30.573\" transform=\"matrix(0.5, 0.866025, -0.866025, 0.5, -0.153671, 61.422167)\" bx:origin=\"0.503 0.5\"/> <path style=\"fill: rgb(216, 216, 216); stroke: rgb(255, 60, 0); stroke-width: 3px;\" d=\"M -56.499 22.283 L -21.499 22.273\" transform=\"matrix(0.866025, -0.5, 0.5, 0.866025, -16.349816, -16.462319)\" bx:origin=\"0.503 0.5\"/> <path d=\"M 5 0 A 5 5 0 0 1 0 5 A 5 5 0 0 1 -5 0 A 5 5 0 0 1 0 -5 A 5 5 0 0 1 5 0 Z\" style=\"stroke: rgb(255, 60, 0); fill: rgb(255, 60, 0);\"/> </svg> ]]}\nend)\npackage.preload['Saga:hud/static_css.lua']=(function()\nfunction HUD.refreshStaticCss()local a,b,c=HUD.Config,HUD.Config.saturation,HUD.Config.mainHue;local d,e,f=b*30,b*40,b*50;HUD.staticCSS={gradientDefs=[[\n]]..gradient('mainBg',{[0]='hsl('..c..','..e..'%,10%)',[100]='hsl('..c..','..e..'%,5%)'},true)..[[\n]]..gradient('bg',{[0]='hsl('..c..','..d..'%,15%)',[100]='hsl('..c..','..d..'%,10%)'},true)..[[\n]]..gradient('bgTransparent',{[0]={'hsl('..c..','..e..'%,15%)',0.5},[100]={'hsl('..c..','..e..'%,10%)',0.5}},true)..[[\n]]..gradient('bgStroke',{[10]='hsl('..c..','..f..'%,50%)',[90]='hsl('..c..','..e..'%,40%)'},true)..[[\n]]..gradient('fadeToBg',{[60]='hsl('..c..','..e..'%,20%)',[90]='hsl('..c..','..e..'%,15%)'},true)..[[\n]]..gradient('fadeToBgStroke',{[60]='hsl('..c..','..f..'%,50%)',[90]='hsl('..c..','..e..'%,15%)'},true)..[[ ]],menuCss=[[\n.mainMenu {font-size:]]..a.scaleMultiplier*10 ..[[px;font-family: 'Montserrat'}\n.mainMenu text { alignment-baseline: middle;text-shadow: none;stroke-width: 0;white-space: pre;fill: hsl(0,0%,95%);text-anchor: start}\n.menuOption text {alignment-baseline: central}\ntext.valueText {text-anchor: end}\n.mainMenu path {fill:hsla(]]..c..[[,]]..f..[[%,80%,0.5)} ]]..[[\n[data-hover=true] text {fill:hsl(]]..c..[[,]]..f..[[%,100%)}\n[data-hover=true] rect {fill:hsla(]]..c..[[,]]..f..[[%,50%,0.5)}\n[data-hover=true] path {fill:hsla(]]..c..[[,]]..f..[[%,100%,0.7)}\n[data-hover=true] rect.separator {fill: hsl(0,0%,85%)}\n/* active */\n[data-active=true] rect.separator {fill: hsl(0,0%,100%)}\n/* active hover */\n[data-active=true][data-hover=true] rect{}\nrect.inputHold {fill:hsl(0,0%,75%) }\ntext.outlined {text-shadow:0 0 1vh black}\nrect.separator {fill:hsl(0,0%,100%)}\nrect.checkBox {fill:hsl(0,0%,70%)}\nrect.checkBox.checked {fill:hsl(0,0%,100%)}\nrect.editableBg {fill:hsla(0,0%,0%,0.3)}\nrect.editableGlyph {fill:hsl(0,0%,95%)}\n.menuLegendGlyph {overflow:visible}\ntext.menuLegendText {fill:hsl(0,0%,88%)}\ntext.menuLegendKey {fill:hsl(58,89%,44%);text-anchor:end}\npath.menuLegendKey {fill:hsl(0,0%,95%)}\n.menuLegend[data-active=true] text, .menuLegend[data-active=true] path {fill:hsl(0,0%,100%)}\n]],css=[[\n.widget { position: absolute; white-space: pre; font-size: ]]..a.scaleMultiplier*10 ..[[px; font-family: 'Montserrat'; color: hsl(0,0%,95%); background-color: hsla(0,0%,0%,0.2); border:0.1vh solid hsl(0,0%,95%); text-shadow: 0.2vh 0.2vh 1vh black; padding: ]]..a.scaleMultiplier*5 ..[[px;\n}\n.widget.alert {border-color: hsl(16,100%,50%)}\n.radarRow {display: relative;height: 1.2vh}\n.radarText {position: absolute;overflow: hidden}\n.coreInfo {text-align: center}\n.dottext {position:absolute; width:6vh; height:6vh; left:-6vh; top:-6vh; border-radius:1vh}\n.dot {position:absolute; width:3vh; height:3vh; left:-1.5vh; top:-1.5vh; border-radius:1vh}\n.planets {position:absolute; width:2vh; height:2vh; left:-1vh; top:-1vh; border-radius:1vh}\n.ptext {position:absolute; width:3vh; height:3vh; left:-1.5vh; top:-3vh; border-radius:1vh}\n.mtext {position:absolute; width:3vh; height:3vh; left:-1.5vh; top:3vh; border-radius:1vh}\n.collision {position:absolute; top:94vh; right:80vw; width:18vw; padding-left: 1vh; padding-top: 1vh; padding-right: 1vh; padding-bottom: 1vh; border:0.1vh; border-style: solid; border-color: orangered}\n.radar1 {position:absolute; top:83vh; right:25vw; width:12vw; padding-left: 1vh; padding-right: 1vh; padding-top: 1vh; padding-bottom: 1vh; border:0.1vh; border-style: solid; border-color: ivory}\n.radar2 {position:absolute; top:83vh; right:38vw; width:12vw; padding-left: 1vh; padding-right: 1vh; padding-top: 1vh; padding-bottom: 1vh; border:0.1vh; border-style: solid; border-color: ivory}\n.radar3 {position:absolute; top:83vh; right:51vw; width:12vw; padding-left: 1vh; padding-right: 1vh; padding-top: 1vh; padding-bottom: 1vh; border:0.1vh; border-style: solid; border-color: ivory}\n.speedBar{position:absolute; width:11.5vh; height:11.5vh; left:32vh; top:-12vh; border-radius:1vh;}\n.throttleBar{position:absolute; width:11.5vh; height:11.5vh; left:37vh; top:-8vh; border-radius:1vh;}\n.altBar{position:absolute; width:14vh; height:11.5vh; left:-43vh; top:-12vh; border-radius:1vh;}\n.svg {background: #eee;} .atmoAlert\t{position:absolute; top:74vh;\tright:62.9vw;\twidth:10vw; padding:0.2vh; border:0.2vh; font-size: 1vh;color: ivory; text-shadow:0.2vh 0.2vh 1vh black;}\n.apAlert\t{position:absolute; top:25vh;\tleft:72vw;\twidth:10vw; padding: 1vh; border:0.2vh; border-style: solid; border-color: orangered}\n.brakeAlert\t{position:absolute; top:5vh;\tleft:44vw;\twidth:10vw; padding: 1vh}\n]]}end\nend)\npackage.preload['Saga:hud/dynamic_svg.lua']=(function()\nfunction dynamicSVG()local a,b=utils.map,utils.round;local c,d=globals,cData;local e,f=0,0;local g=0;local h,i,j=150,150,150;local k=d.curThrottle;local l,m=100,0;local n,o=0,0;local p=0;local q='Travel'local r=''if d.position~=nil and AutoPilot.target~=nil then r=printDistance(round2(vector.dist(AutoPilot.target,d.position),2),true)end;if d.constructSpeed~=nil then e=round2((ship.landingMode or ship.vertical)and d.zSpeedKPH or d.speedKph,1)if d.inAtmo then f=math.ceil(b(d.burnSpeedKph))else f=math.ceil(b(d.maxSpeed*3.6))end;if e~=0 and f~=0 then g=clamp(e/f*200,0,200)h=b(a(clamp(g,170,200),170,200,150,255))i=b(a(clamp(g,170,200),170,200,150,40))j=b(a(clamp(g,170,200),170,200,150,0))end;if controlMode()=='travel'then m=200*abs(k)/100 else if e<=1000 then l=1000 elseif e<=5000 then l=5000 elseif e<=10000 then l=10000 elseif e<=20000 then l=20000 else l=30000 end;k=k/100;m=clamp(abs(k)/l*200,0,200)end;if d.body then n,o=getAltitude(),200000;if d.body and d.inAtmo then o=b(d.body.atmoAltitude)p=clamp(n/o*200,0,200)elseif d.body and d.body.hasAtmosphere and c.collision~=nil and n<=o then p=clamp((n-d.body.atmoAltitude)/o*200,0,200)elseif n<=o then p=clamp(n/o*200,0,200)end end;q=controlMode()end;local s='Bank'HUD.dynamicSVG={targetReticle2=[[\n<svg viewBox=\"-77.91 -57.847 135.41 86.458\">\n<text style=\"fill: rgb(204, 204, 204); font-family:SegoeUI,sans-serif; font-size: 30px; paint-order: fill; stroke: rgb(0, 0, 0); stroke-width: 2px; white-space: pre;\" transform=\"matrix(0.955784, 0, 0, 1.03899, -3.444869, 2.252162)\" x=\"-77.91\" y=\"-30.551\">]]..r..[[</text>\n<path style=\"fill: none; stroke: rgb(204, 204, 204);\" d=\"M -77.91 -22.808 L 0.342 -22.808 L 57.5 28.611\"/>\n</svg>]],speedBar=[[\n<svg viewBox=\"-29 -24 72 240\">\n<rect width=\"5\" height=\"200\" style=\"fill: rgb(255, 255, 255); fill-opacity: 0; paint-order: stroke; stroke: rgb(94, 94, 94);\" transform=\"matrix(-1, 0, 0, -1, 0, 0)\" x=\"-5\" y=\"-200\" bx:origin=\"0 0\"/>\n<rect width=\"5\" height=\"]]..g..[[\" style=\"stroke: rgb(0,0,0); stroke-opacity: 0; fill: rgb(]]..tonumber(h)..[[, ]]..tonumber(i)..[[, ]]..tonumber(j)..[[);\" transform=\"matrix(-1, 0, 0, -1, 0, 0)\" x=\"-5\" y=\"-200\" bx:origin=\"0 0\"/>\n<text style=\"white-space: pre; fill: #eee; font-family:]]..s..[[, sans-serif; font-size:12px; paint-order: fill; stroke: #b80000; stroke-width: 3px; text-anchor: middle;\" x=\"1.4\" y=\"-2.6\" transform=\"matrix(1.1, 0, 0, 1, 1, 0)\">]]..e..[[</text>\n<text style=\"fill: rgb(200, 200, 200); font-family:]]..s..[[, sans-serif; font-size: 12px; paint-order: fill; stroke: rgb(0, 0, 0); stroke-width: 2px; white-space: pre;\" transform=\"matrix(0, -1, 1, 0, -102, 9.5)\" x=\"-100\" y=\"100\">Speed</text>\n<text style=\"fill: rgb(200, 200, 200); font-family:]]..s..[[, sans-serif; font-size: 10px; paint-order: fill; stroke: rgb(0, 0, 0); stroke-width: 1px; white-space: pre;\" x=\"6\" y=\"5.5\">]]..f..[[</text>\n</svg>]],throttleBar=[[\n<svg viewBox=\"-29 -24 72 240\">\n<rect width=\"5\" height=\"200\" style=\"fill: rgb(255, 255, 255); fill-opacity: 0; paint-order: stroke; stroke: rgb(94, 94, 94);\" transform=\"matrix(-1, 0, 0, -1, 0, 0)\" x=\"-5\" y=\"-200\" bx:origin=\"0 0\"/>\n<rect width=\"5\" height=\"]]..m..[[\" style=\"stroke: rgb(0,0,0); stroke-opacity: 0; fill: rgb(150, 150, 150);\" transform=\"matrix(-1, 0, 0, -1, 0, 0)\" x=\"-5\" y=\"-200\" bx:origin=\"0 0\"/>\n<text style=\"white-space: pre; fill: rgb(200, 200, 200); font-family:]]..s..[[, sans-serif; font-size: 12px; paint-order: fill; stroke: #b80000; stroke-width: 2px; text-anchor: middle;\" x=\"1.4\" y=\"-2.6\" transform=\"matrix(1.1, 0, 0, 1, 1, 0)\">]]..b(k)..[[</text>\n<text style=\"fill: rgb(200, 200, 200); font-family:]]..s..[[, sans-serif; font-size: 14px; paint-order: fill; stroke: rgb(0, 0, 0); stroke-width: 2px; white-space: pre;\" transform=\"matrix(0, -1, 1, 0, -102, 9.5)\" x=\"-100\" y=\"100\">]]..q..[[</text>\n<text style=\"fill: rgb(200, 200, 200); font-family:]]..s..[[, sans-serif; font-size: 10px; paint-order: fill; stroke: rgb(0, 0, 0); stroke-width: 1px; white-space: pre;\" x=\"6\" y=\"5.5\">]]..l..[[</text>\n</svg>]],altitudeBar=[[\n<svg viewBox=\"-39 -24 100 240\">\n<rect width=\"5\" height=\"200\" style=\"fill: rgb(255, 255, 255); fill-opacity: 0; paint-order: stroke; stroke: rgb(94, 94, 94);\" transform=\"matrix(-1, 0, 0, -1, 0, 0)\" x=\"-15\" y=\"-200\" bx:origin=\"0 0\"/>\n<rect width=\"5\" height=\"]]..p..[[\" style=\"stroke: rgb(0,0,0); stroke-opacity: 0; fill: rgb(150, 150, 150);\" transform=\"matrix(-1, 0, 0, -1, 0, 0)\" x=\"-5\" y=\"-200\" bx:origin=\"0 0\"/>\n<text style=\"white-space: pre; fill: #eee; font-family:]]..s..[[, sans-serif; font-size:12px; paint-order: fill; stroke: #b80000; stroke-width: 3px; text-anchor: middle;\" x=\"2\" y=\"-2.6\" transform=\"matrix(1.1, 0, 0, 1, 1, 0)\">]]..n..[[</text>\n<text style=\"fill: rgb(200, 200, 200); font-family:]]..s..[[, sans-serif; font-size: 14px; paint-order: fill; stroke: rgb(0, 0, 0); stroke-width: 2px; white-space: pre;\" transform=\"matrix(0, -1, 1, 0, -102, 9.5)\" x=\"-100\" y=\"100\">Altitude</text>\n<text style=\"fill: rgb(200, 200, 200); font-family:]]..s..[[, sans-serif; font-size: 10px; paint-order: fill; stroke: rgb(0, 0, 0); stroke-width: 1px; white-space: pre;\" x=\"15\" y=\"8.5\">]]..o..[[</text>\n</svg>]]}end\nend)\npackage.preload['Saga:hud/hud.lua']=(function()\nlocal a,b=nil,nil;HUD={}HUD.Config={coreWidget=false,dockWidget=false,mainMenuVisible=false,mainHue=240,mainHueShiftRight=245,mainHueShiftLeft=235,nativeScaleMultiplier=nil,saturation=0,scaleMultiplier=nil,unitWidgetVisible=false}function HUD:init()local c,d=Config.defaults,configDatabankMap;c[d.hudScale]=1;c[d.unitWidgetVisible]=self.Config.unitWidgetVisible;c[d.mainMenuVisible]=self.Config.mainMenuVisible;c[d.coreWidget]=self.Config.coreWidget;c[d.dockWidget]=self.Config.dockWidget;EventSystem:register('ConfigDBChanged',self.applyConfig,self)system.showScreen(1)self.updateScale()self:applyConfig()Widgets={}require('Saga:hud/widgets/aggInfo.lua')require('Saga:hud/widgets/controls.lua')require('Saga:hud/widgets/core.lua')require('Saga:hud/widgets/fuelInfo.lua')require('Saga:hud/widgets/infos.lua')require('Saga:hud/widgets/mainMenu.lua')require('Saga:hud/widgets/radarContacts.lua')require('Saga:hud/widgets/warpInfo.lua')for e,f in pairs(Widgets)do f:init()end end;function HUD:applyConfig()self.Config.unitWidgetVisible=Config:getValue(configDatabankMap.unitWidgetVisible)self.Config.mainMenuVisible=Config:getValue(configDatabankMap.mainMenuVisible)self.Config.coreWidget=Config:getValue(configDatabankMap.coreWidget)self.Config.dockWidget=Config:getValue(configDatabankMap.dockWidget)self.applyDockWidget()self.applyUnitWidget()end;function HUD.updateScale()HUD.screenWidth=system.getScreenWidth()HUD.screenHeight=system.getScreenHeight()local g=HUD.screenHeight/1080*(Config:getValue(configDatabankMap.hudScale)or 1)local h=HUD.screenHeight/1080;if g~=nil and HUD.Config.scaleMultiplier~=g then HUD.Config.scaleMultiplier=g;HUD.Config.nativeScaleMultiplier=h;HUD.refreshStaticCss()end end;function HUD.update()HUD.updateScale()local i,j='',globals;if HUD.dynamicSVG==nil then dynamicSVG()end;i=HUD.constructDebug()local k={}table.insert(k,Widgets.controls)Widgets.controls.anchor=anchorENUM.topRight;Widgets.controls.width=180;if HUD.Config.mainMenuVisible then table.insert(k,Widgets.mainMenu)end;table.insert(k,Widgets.fuelInfo)Widgets.fuelInfo.anchor=anchorENUM.topLeft;Widgets.fuelInfo.width=220;table.insert(k,Widgets.infos)Widgets.infos.width=150;Widgets.infos.anchor=anchorENUM.topLeft;if HUD.Config.coreWidget then table.insert(k,Widgets.core)end;Widgets.core.anchor=anchorENUM.top;Widgets.core.width=800;if links.antigrav then table.insert(k,Widgets.aggInfo)Widgets.aggInfo.anchor=anchorENUM.topLeft;Widgets.aggInfo.width=150 end;if links.warpdrive~=nil then table.insert(k,Widgets.warpInfo)Widgets.warpInfo.anchor=anchorENUM.topLeft;Widgets.warpInfo.width=180 end;j.radarD=#Radar.radarDynamic>0;j.radarSt=#Radar.radarStatic>0;j.radarA=#Radar.radarAbandoned>0;j.radarAl=#Radar.radarAlien>0;j.radarSp=#Radar.radarSpace>0;j.radarF=#Radar.radarFriend>0;if Radar.radar~=nil and Radar.boxesVisible then if j.radarA then table.insert(k,Widgets.radarAbandoned)end;if j.radarSt then table.insert(k,Widgets.radarStatic)end;if j.radarD then table.insert(k,Widgets.radarDynamic)end;if j.radarF then table.insert(k,Widgets.radarFriend)end;if j.radarAl then table.insert(k,Widgets.radarAlien)end;if j.radarSp then table.insert(k,Widgets.radarSpace)end;table.insert(k,Widgets.radarThreat)end;local l='width:'..HUD.screenWidth..'px; height:'..HUD.screenHeight..'px;'i=i..'<div style=\"position:fixed; top:0; left:0; '..l..'\">'local m={}local n={}for e,f in ipairs(k)do if n[f.anchor]==nil then n[f.anchor]=0 end;if n[f.anchor]>0 then n[f.anchor]=n[f.anchor]+f.margin end;n[f.anchor]=n[f.anchor]+f.width end;for e,f in ipairs(k)do if f.update~=nil then f:update()end;if m[f.anchor]==nil then m[f.anchor]=0 end;i=i..f:render(m[f.anchor],n[f.anchor])m[f.anchor]=m[f.anchor]+f.width+f.margin end;i=i..'</div>'system.setScreen(i)end;function HUD.toggleMainMenu(o)if o==nil then o=not HUD.Config.mainMenuVisible end;HUD.Config.mainMenuVisible=o;Config:setValue(configDatabankMap.mainMenuVisible,HUD.Config.mainMenuVisible)end;function HUD.toggleCoreWidget(o)if o==nil then o=not HUD.Config.coreWidget end;HUD.Config.coreWidget=o;Config:setValue(configDatabankMap.coreWidget,HUD.Config.coreWidget)end;function HUD.toggleDockWidget(o)if o==nil then o=not HUD.Config.dockWidget end;HUD.Config.dockWidget=o;Config:setValue(configDatabankMap.dockWidget,HUD.Config.dockWidget)HUD.applyDockWidget()end;function HUD.toggleUnitWidget(o)if o==nil then o=not HUD.Config.unitWidgetVisible end;HUD.Config.unitWidgetVisible=o;Config:setValue(configDatabankMap.unitWidgetVisible,HUD.Config.unitWidgetVisible)HUD.applyUnitWidget()end;function HUD.applyDockWidget()if not HUD.Config.dockWidget and b~=nil then system.destroyWidget(b)system.destroyWidgetPanel(a)b=nil;a=nil elseif HUD.Config.dockWidget then a=system.createWidgetPanel(\"Docking\")b=system.createWidget(a,\"parenting\")system.addDataToWidget(unit.getWidgetDataId(),b)end end;function HUD.applyUnitWidget()if HUD.Config.unitWidgetVisible then unit.showWidget()else unit.hideWidget()end end;require('Saga:hud/debug.lua')require('Saga:hud/widget.lua')require('Saga:hud/menuSystem.lua')require('Saga:hud/mainMenuActions.lua')require('Saga:hud/static_svg.lua')require('Saga:hud/static_css.lua')require('Saga:hud/dynamic_svg.lua')\nend)\npackage.preload['Saga:lib/serialize.lua']=(function()\nfunction serialize(a)if type(a)=='table'then local b='{'if table.isArray(a)then for c,a in ipairs(a)do b=b..serializeValue(a)..','end else local d={}for c,a in pairs(a)do table.insert(d,c..'='..serializeValue(a))end;b=b..table.concat(d,',')end;b=b..'}'return b else return serializeValue(a)end end;function serializeValue(a)if a==nil then return'nil'elseif type(a)=='table'then return serialize(a)elseif type(a)=='string'then return'\"'..a:format(\"%q\")..'\"'elseif type(a)=='number'then return a elseif type(a)=='boolean'then return ternary(a,'true','false')end end\nend)\npackage.preload['Saga:lib/SVG.lua']=(function()\nfunction class(class)local a={}if class~=nil then if type(class)=='table'then table.add(a,class)elseif type(class)=='string'then table.insert(a,class)end end;local b=ternary(#a>0,' class=\"'..table.concat(a,' ')..'\"','')return b end;function gradient(c,d,e)local f=ternary(e,'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"','x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"')local g='<linearGradient id=\"'..c..'\"'..f..'>'local h=table.keys(d)table.sort(h)for i,j in ipairs(h)do local k,l=j,d[j]local m='<stop offset=\"'..k..'%\" stop-color=\"'if type(l)=='table'then l=d[j][1]g=g..m..l..'\" stop-opacity=\"'..d[j][2]..'\"/>'else g=g..m..l..'\"/>'end end;g=g..'</linearGradient>'return g end\nend)\npackage.preload['Saga:libmain.lua']=(function()\nship={}abs,atan,rad,floor,format,sub,acos,sqrt=math.abs,math.atan,math.rad,math.floor,string.format,string.sub,math.acos,math.sqrt;cos,sin,deg,ceil,max,clamp,sign,round=math.cos,math.sin,math.deg,math.ceil,math.max,utils.clamp,utils.sign,utils.round;function round2(a,b)if type(a)~=\"number\"then P\"round2: The first argument (num) must be a number.\"error(\"The first argument (num) must be a number.\")end;if b and(type(b)~=\"number\"or b<0)then error(\"The second argument (numDecimalPlaces) must be a non-negative number.\")end;local c=10^(b or 0)if a>=0 then return floor(a*c+0.5)/c end;return ceil(a*c-0.5)/c end;require('dkjson')require('Saga:events/keyboard.lua')require('Saga:events/system_flush.lua')require('Saga:events/system_input.lua')require('Saga:events/system_update.lua')require('Saga:events/timer_apu.lua')require('Saga:events/timer_fuel.lua')require('Saga:events/unit_start.lua')require('Saga:behaviour/kinematics.lua')require('Saga:behaviour/autopilot.lua')require('Saga:behaviour/electronics.lua')require('Saga:behaviour/ship_maneuver.lua')require('Saga:behaviour/ship.lua')require('Saga:data/aggData.lua')require('Saga:data/config.lua')require('Saga:data/configDatabankMap.lua')require('Saga:data/coroutine.lua')require('Saga:data/constructData.lua')require('Saga:data/eventSystem.lua')require('Saga:data/playerData.lua')require('Saga:data/radar.lua')require('Saga:data/routeDatabase.lua')require('Saga:data/tankData.lua')require('Saga:data/warpData.lua')require('Saga:helpers/common.lua')require('Saga:helpers/solar_system.lua')require('Saga:helpers/table.lua')require('Saga:helpers/vector_math.lua')require('Saga:hud/hud.lua')require('Saga:lib/serialize.lua')require('Saga:lib/SVG.lua')\nend)"},{"key":4,"filter":{"slotKey":-5,"signature":"onStart()","args":[]},"code":"library.addEventHandlers(library)\nlibrary.addEventHandlers(system)\nlibrary.addEventHandlers(player)\nlibrary.addEventHandlers(construct)\nlibrary.addEventHandlers(unit)"},{"key":5,"filter":{"slotKey":-4,"signature":"onActionStart(action)","args":[{"variable":"*"}]},"code":"system:triggerEvent('onActionStart',action)"},{"key":6,"filter":{"slotKey":-4,"signature":"onActionLoop(action)","args":[{"variable":"*"}]},"code":"system:triggerEvent('onActionLoop',action)"},{"key":7,"filter":{"slotKey":-4,"signature":"onActionStop(action)","args":[{"variable":"*"}]},"code":"system:triggerEvent('onActionStop',action)"},{"key":8,"filter":{"slotKey":-4,"signature":"onUpdate()","args":[]},"code":"system:triggerEvent('onUpdate')"},{"key":9,"filter":{"slotKey":-4,"signature":"onFlush()","args":[]},"code":"system:triggerEvent('onFlush')"},{"key":10,"filter":{"slotKey":-4,"signature":"onInputText(text)","args":[{"variable":"*"}]},"code":"system:triggerEvent('onInputText',text)"},{"key":11,"filter":{"slotKey":-4,"signature":"onCameraChanged(mode)","args":[{"variable":"*"}]},"code":"system:triggerEvent('onCameraChanged',mode)"},{"key":12,"filter":{"slotKey":-3,"signature":"onParentChanged(oldId,newId)","args":[{"variable":"*"},{"variable":"*"}]},"code":"player:triggerEvent('onParentChanged',oldId,newId)"},{"key":13,"filter":{"slotKey":-2,"signature":"onDocked(id)","args":[{"variable":"*"}]},"code":"construct:triggerEvent('onDocked',id)"},{"key":14,"filter":{"slotKey":-2,"signature":"onUndocked(id)","args":[{"variable":"*"}]},"code":"construct:triggerEvent('onUndocked',id)"},{"key":15,"filter":{"slotKey":-2,"signature":"onPlayerBoarded(id)","args":[{"variable":"*"}]},"code":"construct:triggerEvent('onPlayerBoarded',id)"},{"key":16,"filter":{"slotKey":-2,"signature":"onVRStationEntered(id)","args":[{"variable":"*"}]},"code":"construct:triggerEvent('onVRStationEntered',id)"},{"key":17,"filter":{"slotKey":-2,"signature":"onConstructDocked(id)","args":[{"variable":"*"}]},"code":"construct:triggerEvent('onConstructDocked',id)"},{"key":18,"filter":{"slotKey":-2,"signature":"onPvPTimer(active)","args":[{"variable":"*"}]},"code":"construct:triggerEvent('onPvPTimer',active)"},{"key":19,"filter":{"slotKey":-1,"signature":"onStop()","args":[]},"code":"unit:triggerEvent('onStop')"},{"key":20,"filter":{"slotKey":-1,"signature":"onTimer(timerId)","args":[{"variable":"*"}]},"code":"unit:triggerEvent('onTimer',timerId)"},{"key":21,"filter":{"slotKey":-1,"signature":"onStart()","args":[]},"code":"spaceCapableOverride=false --export: (Space Capable Ship Override) true/false\nhoverHeight=40 --export: Hover Height: 0-50 default hover height (G key)\nthrottleBurnProtection=true --export: (Auto Throttle Burn Protection) true/false\nmaxPitch=35 --export: (Max Pitch) set between 5-80, 35 is default.\nmaxRoll=45 --export: (Max Roll) set between 5-80, 45 is default.\nwingStallAngle=35 --export: (Wing Stall Angle) 25-60.\nshieldManage=true --export: (Auto Shield Management) true/false\nmaxSpaceSpeed=0 --export: Max Space Speed in km/h\nradarOn=false --export: (Radar Widget) true/false\npitchSpeedFactor=0.8 --export: This factor will increase/decrease the player input along the pitch axis\nyawSpeedFactor=1 --export: This factor will increase/decrease the player input along the yaw axis\nrollSpeedFactor=1.5 --export: This factor will increase/decrease the player input along the roll axis\nbrakeSpeedFactor=3 --export: When braking, this factor will increase the brake force\nbrakeFlatFactor=1 --export: Flat braking factor (0.01+)\nautoRoll=true --export: [Only in atmosphere]\nautoRollFactor=2 --export: [Only in atmosphere]\nturnAssist=true --export: [Only in atmosphere]\nturnAssistFactor=2 --export: [Only in atmosphere]\ntorqueFactor=2 --export: Force factor applied to reach rotationSpeed\natmoTankHandling=5 --export: (Atmospheric Fuel Tank Handling) 0-5\nspaceTankHandling=5 --export: (Space Fuel Tank Handling) 0-5\nrocketTankHandling=0 --export: (Rocket Fuel Tank Handling) 0-5\nfuelTankOptimization=5 --export: Talents Fuel Tank Optimization: 0-5\ncontainerOptimization=5 --export: Talents Container Optimization: 0-5\nboostModeOverride='off' --export: (Engine Throttle Mode Override) 'off' , 'all' , 'hybrid', 'primary'\naimStrength=0.3 --export: Aim Strength (0.05 to ~3)\ncoreWidget=false --export: Show Core info panel. Only needed for PvP (FPS impact!)\nagl=0 --export: Above ground landed (in m): Ground distance when landed\ndockingMode=1 --export: Docking mode (1 = manual, 2 = Automatic, 3 = Owner)\ndockWidget=true --export: Show docking widget (toggle with /dock command)\nvelocityVector=true --export: Display velocity indicator\nmaxLandingSpeedHigh=200 --export: Maneuver mode: Max landing speed above 1 km altitude. Default: 200\nmaxLandingSpeedLow=100 --export: Maneuver mode: Max landing speed below 1 km altitude. Default: 100\ntravelAlt=900 --export: Maneuver mode: default travel altitude for AP targets. Default: 900\ncustomAtlas=\"atlas\" --export: (Default \"atlas\") Custom atlas file to override NQ atlas (file need to be located in autoconf/custom/)\nP=system.print;DEBUG=false;globals={advAtmoEngines=false,advSpaceEngines=false,aggAP=false,aimTarget='none',altitudeHold=false,apMode='standby',arMode='none',boostMode='all',brakeState=false,brakeTrigger=false,cameraAim=false,collision=nil,collisionAlert=false,collisionBrake=false,dbgTxt='',debug=DEBUG,farSide=nil,followMode=false,followReposition=false,holdAltitude=2500,horizontalStopped=false,inAtmo=false,inOrbit=false,initTurn=nil,lastProjectedDistance=10000000,lenTest=0,manualOrbitAlt=0,maxDefaultKP={0,0,0,0},maxPrimaryKP={0,0,0,0},maxSecondaryKP={0,0,0,0},maxTertiaryKP={0,0,0,0},missedTarget=false,nearSide=nil,orbitLock=false,orbitPitch=0,orbitalHold=false,radarA=false,radarAl=false,radarD=false,radarF=false,radarSp=false,radarSt=false,radialIn=false,radialMode='none',radialOut=false,rotationDampening=true,safetyThrottle=false,smoothClimb=false,spaceBrakeTrigger=false,spaceCapable=spaceCapable,stallProtect=false,tankData=tankData,target=vec3(),targetOrbitAlt=100000,targetPitch=0,targetThrottleOne=0,targetThrottleThree=0,targetThrottleTwo=0,verticalState=false,waitForBubble=false,waterAlt=-10000000,waterMode=false,waterState=false,updatecore=true,startup=true}links={}cData={}Axis={}scrnData={}deltaTime=system.getUtcTime()lastTime=deltaTime;require('cpml/vec3')require('cpml/pid')require('AxisCommand')require('Navigator')Nav=Navigator.new(system,links.core,unit)navCom=Nav.axisCommandManager;require('Saga:data/links.lua')require('Saga:libmain.lua')kinematics=Kinematics()printHello()system:onEvent('onActionStart',function(self,a)onActionStart(a)end)system:onEvent('onActionStop',function(self,a)onActionEnd(a)end)system:onEvent('onActionLoop',function(self,a)onActionLoop(a)end)system:onEvent('onInputText',function(self,b)onInput(b)end)system:onEvent('onFlush',function(self)onSystemFlush()end)system:onEvent('onUpdate',function(self)onSystemUpdate()end)unit:onEvent('onStop',function()if links.electronics~=nil then links.electronics:SwitchesOff()end end)unit:onEvent('onTimer',function(unit,c)if c==\"SYSUPDATE\"then dynamicSVG()if not globals.maneuverMode then onTimerAPU()end elseif c==\"FUELUPDATE\"then onTimerFuelUpdate()elseif c==\"BRAKEUPD\"then local d=construct.getMaxBrake()if d and d>1 then globals.maxBrake=d end elseif c==\"COREUPDATE\"then globals.updatecore=true;Radar:update()end end)onUnitStart()unit.setTimer(\"FUELUPDATE\",3)unit.setTimer(\"COREUPDATE\",0.5)unit.setTimer(\"BRAKEUPD\",0.1)unit.setTimer(\"SYSUPDATE\",0.0166)"}],"events":[],"methods":[]}